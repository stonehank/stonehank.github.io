(window.webpackJsonp=window.webpackJsonp||[]).push([[382],{1180:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">moves</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> tictactoe = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">moves</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> Amoves=moves.filter(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">e,i</span>)=&gt;</span>i%<span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-keyword\\">let</span> Bmoves=moves.filter(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">e,i</span>)=&gt;</span>i%<span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">1</span>)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">isWin</span>(<span class=\\"hljs-params\\">arr</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> hash={}\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> [x,y]=arr[i]\\n      <span class=\\"hljs-keyword\\">if</span>(hash[x+<span class=\\"hljs-string\\">\'row\'</span>]==<span class=\\"hljs-literal\\">null</span>)hash[x+<span class=\\"hljs-string\\">\'row\'</span>]=<span class=\\"hljs-number\\">0</span>\\n      hash[x+<span class=\\"hljs-string\\">\'row\'</span>]++\\n      <span class=\\"hljs-keyword\\">if</span>(hash[y+<span class=\\"hljs-string\\">\'col\'</span>]==<span class=\\"hljs-literal\\">null</span>)hash[y+<span class=\\"hljs-string\\">\'col\'</span>]=<span class=\\"hljs-number\\">0</span>\\n      hash[y+<span class=\\"hljs-string\\">\'col\'</span>]++\\n\\n      <span class=\\"hljs-keyword\\">if</span>(x===<span class=\\"hljs-number\\">0</span> &amp;&amp; y==<span class=\\"hljs-number\\">2</span> || x===<span class=\\"hljs-number\\">1</span> &amp;&amp; y===<span class=\\"hljs-number\\">1</span> || x===<span class=\\"hljs-number\\">2</span> &amp;&amp; y===<span class=\\"hljs-number\\">0</span>){\\n        <span class=\\"hljs-keyword\\">if</span>(hash.s1==<span class=\\"hljs-literal\\">null</span>)hash.s1=<span class=\\"hljs-number\\">0</span>\\n        hash.s1++\\n      }\\n      <span class=\\"hljs-keyword\\">if</span>(x===<span class=\\"hljs-number\\">0</span> &amp;&amp; y==<span class=\\"hljs-number\\">0</span> || x===<span class=\\"hljs-number\\">1</span> &amp;&amp; y===<span class=\\"hljs-number\\">1</span> || x===<span class=\\"hljs-number\\">2</span> &amp;&amp; y===<span class=\\"hljs-number\\">2</span>){\\n        <span class=\\"hljs-keyword\\">if</span>(hash.s2==<span class=\\"hljs-literal\\">null</span>)hash.s2=<span class=\\"hljs-number\\">0</span>\\n        hash.s2++\\n      }\\n      \\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> hash){\\n      <span class=\\"hljs-keyword\\">if</span>(hash[k]===<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(Amoves)</span>\\n  <span class=\\"hljs-comment\\">// console.log(Bmoves)</span>\\n  <span class=\\"hljs-keyword\\">if</span>(isWin(Amoves))<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'A\'</span>\\n  <span class=\\"hljs-keyword\\">if</span>(isWin(Bmoves))<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'B\'</span>\\n  <span class=\\"hljs-keyword\\">if</span>(moves.length===<span class=\\"hljs-number\\">9</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'Draw\'</span>\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'Pending\'</span>\\n};\\n</code></pre>\\n"],"querySlug":"find-winner-on-a-tic-tac-toe-game","created_at":"2019-12-01","timeArr":[2019,11,1,11,1,23,0],"hasThinking":false,"content":"<p><em>A</em> 和&nbsp;<em>B</em>&nbsp;在一个&nbsp;<em>3</em>&nbsp;x&nbsp;<em>3</em>&nbsp;的网格上玩井字棋。</p>\\n\\n<p>井字棋游戏的规则如下：</p>\\n\\n<ul>\\n\\t<li>玩家轮流将棋子放在空方格 (&quot; &quot;) 上。</li>\\n\\t<li>第一个玩家 A 总是用&nbsp;&quot;X&quot; 作为棋子，而第二个玩家 B 总是用 &quot;O&quot; 作为棋子。</li>\\n\\t<li>&quot;X&quot; 和 &quot;O&quot; 只能放在空方格中，而不能放在已经被占用的方格上。</li>\\n\\t<li>只要有 3 个相同的（非空）棋子排成一条直线（行、列、对角线）时，游戏结束。</li>\\n\\t<li>如果所有方块都放满棋子（不为空），游戏也会结束。</li>\\n\\t<li>游戏结束后，棋子无法再进行任何移动。</li>\\n</ul>\\n\\n<p>给你一个数组 <code>moves</code>，其中每个元素是大小为 <code>2</code> 的另一个数组（元素分别对应网格的行和列），它按照 <em>A</em> 和 <em>B</em> 的行动顺序（先 <em>A</em> 后 <em>B</em>）记录了两人各自的棋子位置。</p>\\n\\n<p>如果游戏存在获胜者（<em>A</em> 或 <em>B</em>），就返回该游戏的获胜者；如果游戏以平局结束，则返回 &quot;Draw&quot;；如果仍会有行动（游戏未结束），则返回 &quot;Pending&quot;。</p>\\n\\n<p>你可以假设&nbsp;<code>moves</code>&nbsp;都 <strong>有效</strong>（遵循井字棋规则），网格最初是空的，<em>A</em> 将先行动。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>moves = [[0,0],[2,0],[1,1],[2,1],[2,2]]\\n<strong>输出：</strong>&quot;A&quot;\\n<strong>解释：</strong>&quot;A&quot; 获胜，他总是先走。\\n&quot;X  &quot;    &quot;X  &quot;    &quot;X  &quot;    &quot;X  &quot;    &quot;<strong>X</strong>  &quot;\\n&quot;   &quot; -&gt; &quot;   &quot; -&gt; &quot; X &quot; -&gt; &quot; X &quot; -&gt; &quot; <strong>X</strong> &quot;\\n&quot;   &quot;    &quot;O  &quot;    &quot;O  &quot;    &quot;OO &quot;    &quot;OO<strong>X</strong>&quot;\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>moves = [[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]\\n<strong>输出：</strong>&quot;B&quot;\\n<strong>解释：</strong>&quot;B&quot; 获胜。\\n&quot;X  &quot;    &quot;X  &quot;    &quot;XX &quot;    &quot;XXO&quot;    &quot;XXO&quot;    &quot;XX<strong>O</strong>&quot;\\n&quot;   &quot; -&gt; &quot; O &quot; -&gt; &quot; O &quot; -&gt; &quot; O &quot; -&gt; &quot;XO &quot; -&gt; &quot;X<strong>O</strong> &quot; \\n&quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;   &quot;    &quot;<strong>O</strong>  &quot;\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>moves = [[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]\\n<strong>输出：</strong>&quot;Draw&quot;\\n<strong>输出：</strong>由于没有办法再行动，游戏以平局结束。\\n&quot;XXO&quot;\\n&quot;OOX&quot;\\n&quot;XOX&quot;\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>moves = [[0,0],[1,1]]\\n<strong>输出：</strong>&quot;Pending&quot;\\n<strong>解释：</strong>游戏还没有结束。\\n&quot;X  &quot;\\n&quot; O &quot;\\n&quot;   &quot;\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= moves.length &lt;= 9</code></li>\\n\\t<li><code>moves[i].length == 2</code></li>\\n\\t<li><code>0 &lt;= moves[i][j] &lt;= 2</code></li>\\n\\t<li><code>moves</code>&nbsp;里没有重复的元素。</li>\\n\\t<li><code>moves</code> 遵循井字棋的规则。</li>\\n</ul>\\n","title":"1275. 找出井字棋的获胜者","relatedTags":["数组","哈希表","矩阵","模拟"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1275","slug":"1275-Find-Winner-on-a-Tic-Tac-Toe-Game"}')}}]);