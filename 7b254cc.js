(window.webpackJsonp=window.webpackJsonp||[]).push([[1006],{1804:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">equation</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> solveEquation = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">equation</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> xNum=<span class=\\"hljs-number\\">0</span>,rest=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> eq=equation.split(<span class=\\"hljs-string\\">\'=\'</span>)\\n  <span class=\\"hljs-keyword\\">let</span> left=eq[<span class=\\"hljs-number\\">0</span>],right=eq[<span class=\\"hljs-number\\">1</span>]\\n  <span class=\\"hljs-keyword\\">let</span> resL={},resR={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=left.length<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n    <span class=\\"hljs-keyword\\">let</span> idx=i\\n    <span class=\\"hljs-keyword\\">if</span>(left[i]===<span class=\\"hljs-string\\">\\"x\\"</span>){\\n      [xNum,i]=compute(xNum,idx,<span class=\\"hljs-string\\">\'\'</span>,left)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      [rest,i]=compute(rest,idx,left[i],left)\\n    }\\n    resL={<span class=\\"hljs-attr\\">x</span>:xNum,<span class=\\"hljs-attr\\">rest</span>:rest}\\n  }\\n\\n  xNum=<span class=\\"hljs-number\\">0</span>;rest=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=right.length<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n    <span class=\\"hljs-keyword\\">let</span> idx=i\\n    <span class=\\"hljs-keyword\\">if</span>(right[i]===<span class=\\"hljs-string\\">\\"x\\"</span>){\\n      [xNum,i]=compute(xNum,idx,<span class=\\"hljs-string\\">\'\'</span>,right)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      [rest,i]=compute(rest,idx,right[i],right)\\n    }\\n    resR={<span class=\\"hljs-attr\\">x</span>:xNum,<span class=\\"hljs-attr\\">rest</span>:rest}\\n  }  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">compute</span>(<span class=\\"hljs-params\\">calcNum,idx,init,arr</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> coefficient=init\\n    <span class=\\"hljs-keyword\\">do</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(idx===<span class=\\"hljs-number\\">0</span>){\\n        calcNum+=coefficient? +coefficient : <span class=\\"hljs-number\\">1</span>\\n        coefficient=<span class=\\"hljs-string\\">\'\'</span>\\n      } <span class=\\"hljs-keyword\\">else</span> {\\n        <span class=\\"hljs-keyword\\">let</span> prev=arr[--idx]\\n        <span class=\\"hljs-keyword\\">if</span>(prev===<span class=\\"hljs-string\\">\'+\'</span>){\\n          calcNum+=coefficient? +coefficient : <span class=\\"hljs-number\\">1</span>\\n          coefficient=<span class=\\"hljs-string\\">\'\'</span>\\n        }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(prev=== <span class=\\"hljs-string\\">\'-\'</span>){\\n          calcNum-=coefficient? +coefficient : <span class=\\"hljs-number\\">1</span>\\n          coefficient=<span class=\\"hljs-string\\">\'\'</span>         \\n        }<span class=\\"hljs-keyword\\">else</span>{\\n          coefficient=prev+coefficient\\n        }\\n      }        \\n    }<span class=\\"hljs-keyword\\">while</span>(coefficient)\\n    <span class=\\"hljs-keyword\\">return</span> [calcNum,idx]\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> xN=resL.x-resR.x\\n  <span class=\\"hljs-keyword\\">let</span> rN=resR.rest-resL.rest\\n  <span class=\\"hljs-keyword\\">if</span>(!xN &amp;&amp; rN)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\\"No solution\\"</span>\\n  <span class=\\"hljs-keyword\\">if</span>(!xN &amp;&amp; !rN)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\\"Infinite solutions\\"</span>\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\\"x=\\"</span>+rN/xN\\n};\\n</code></pre>\\n"],"querySlug":"solve-the-equation","created_at":"2019-04-01","timeArr":[2019,3,1,18,35,32,0],"hasThinking":false,"content":"<p>求解一个给定的方程，将<code>x</code>以字符串&quot;x=#value&quot;的形式返回。该方程仅包含&#39;+&#39;，&#39; - &#39;操作，变量&nbsp;<code>x</code>&nbsp;和其对应系数。</p>\\n\\n<p>如果方程没有解，请返回&ldquo;No solution&rdquo;。</p>\\n\\n<p>如果方程有无限解，则返回&ldquo;Infinite solutions&rdquo;。</p>\\n\\n<p>如果方程中只有一个解，要保证返回值&nbsp;<code>x</code>&nbsp;是一个整数。</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入:</strong> &quot;x+5-3+x=6+x-2&quot;\\n<strong>输出:</strong> &quot;x=2&quot;\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre><strong>输入:</strong> &quot;x=x&quot;\\n<strong>输出:</strong> &quot;Infinite solutions&quot;\\n</pre>\\n\\n<p><strong>示例 3:</strong></p>\\n\\n<pre><strong>输入:</strong> &quot;2x=x&quot;\\n<strong>输出:</strong> &quot;x=0&quot;\\n</pre>\\n\\n<p><strong>示例 4:</strong></p>\\n\\n<pre><strong>输入:</strong> &quot;2x+3x-6x=x+2&quot;\\n<strong>输出:</strong> &quot;x=-1&quot;\\n</pre>\\n\\n<p><strong>示例 5:</strong></p>\\n\\n<pre><strong>输入:</strong> &quot;x=x+2&quot;\\n<strong>输出:</strong> &quot;No solution&quot;\\n</pre>\\n","title":"640. 求解方程","relatedTags":["数学","字符串","模拟"],"difficult":"Middle","lang":["javascript"],"uniqueID":"640","slug":"640-Solve-the-Equation"}')}}]);