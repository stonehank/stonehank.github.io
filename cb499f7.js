(window.webpackJsonp=window.webpackJsonp||[]).push([[1246],{2044:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">grid</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> projectionArea = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">grid</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> xArea=<span class=\\"hljs-number\\">0</span>,yArea=<span class=\\"hljs-number\\">0</span>,zArea=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> m=grid.length,n=grid[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;n;j++){\\n    <span class=\\"hljs-keyword\\">let</span> max=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(grid[i][j]&gt;<span class=\\"hljs-number\\">0</span>)zArea++\\n      max=<span class=\\"hljs-built_in\\">Math</span>.max(max,grid[i][j])\\n    }\\n    xArea+=max\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n    <span class=\\"hljs-keyword\\">let</span> max=<span class=\\"hljs-built_in\\">Math</span>.max.apply(<span class=\\"hljs-built_in\\">Math</span>,grid[i])\\n    yArea+=max\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(xArea,yArea,zArea)</span>\\n  <span class=\\"hljs-keyword\\">return</span> xArea+yArea+zArea\\n};\\n</code></pre>\\n"],"querySlug":"projection-area-of-3d-shapes","created_at":"2019-04-03","timeArr":[2019,3,3,14,41,48,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p><code>y</code>轴方向的面积就是<code>每一行的最大值的和</code></p>\\n<p><code>x</code>轴方向的面积就是<code>每一列的最大值的和</code></p>\\n<p><code>z</code>轴方向的面积就是<code>大于0的数量</code>。</p>\\n","content":"<p>在&nbsp;<code>N&nbsp;*&nbsp;N</code>&nbsp;的网格中，我们放置了一些与 x，y，z 三轴对齐的&nbsp;<code>1 * 1 * 1</code>&nbsp;立方体。</p>\\n\\n<p>每个值&nbsp;<code>v = grid[i][j]</code>&nbsp;表示 <code>v</code>&nbsp;个正方体叠放在单元格&nbsp;<code>(i, j)</code>&nbsp;上。</p>\\n\\n<p>现在，我们查看这些立方体在 xy、yz&nbsp;和 zx&nbsp;平面上的<em>投影</em>。</p>\\n\\n<p>投影就像影子，将三维形体映射到一个二维平面上。</p>\\n\\n<p>在这里，从顶部、前面和侧面看立方体时，我们会看到&ldquo;影子&rdquo;。</p>\\n\\n<p>返回所有三个投影的总面积。</p>\\n\\n<p>&nbsp;</p>\\n\\n<ul>\\n</ul>\\n\\n<ul>\\n</ul>\\n\\n<ul>\\n</ul>\\n\\n<ul>\\n</ul>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[[2]]\\n<strong>输出：</strong>5\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[[1,2],[3,4]]\\n<strong>输出：</strong>17\\n<strong>解释：</strong>\\n这里有该形体在三个轴对齐平面上的三个投影(&ldquo;阴影部分&rdquo;)。\\n<img alt=\\"\\" src=\\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/08/02/shadow.png\\" style=\\"height: 200px; width: 749px;\\">\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>[[1,0],[0,2]]\\n<strong>输出：</strong>8\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>[[1,1,1],[1,0,1],[1,1,1]]\\n<strong>输出：</strong>14\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>[[2,2,2],[2,1,2],[2,2,2]]\\n<strong>输出：</strong>21\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= grid.length = grid[0].length&nbsp;&lt;= 50</code></li>\\n\\t<li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>\\n</ul>\\n","title":"883. 三维形体投影面积","relatedTags":["几何","数组","数学","矩阵"],"difficult":"Easy","lang":["javascript"],"uniqueID":"883","slug":"883-Projection-Area-of-3D-Shapes"}')}}]);