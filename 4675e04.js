(window.webpackJsonp=window.webpackJsonp||[]).push([[521],{1319:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">k</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> kthFactor = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n, k</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;=n;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(n % i===<span class=\\"hljs-number\\">0</span>){\\n            count++\\n        }\\n        <span class=\\"hljs-keyword\\">if</span>(count===k)<span class=\\"hljs-keyword\\">return</span> i\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n};\\n</code></pre>\\n"],"querySlug":"the-kth-factor-of-n","created_at":"2020-07-08","timeArr":[2020,6,8,10,11,22,0],"hasThinking":false,"content":"<p>给你两个正整数&nbsp;<code>n</code> 和&nbsp;<code>k</code>&nbsp;。</p>\\n\\n<p>如果正整数 <code>i</code> 满足 <code>n % i == 0</code> ，那么我们就说正整数 <code>i</code> 是整数 <code>n</code>&nbsp;的因子。</p>\\n\\n<p>考虑整数 <code>n</code>&nbsp;的所有因子，将它们 <strong>升序排列</strong>&nbsp;。请你返回第 <code>k</code>&nbsp;个因子。如果 <code>n</code>&nbsp;的因子数少于 <code>k</code>&nbsp;，请你返回 <strong>-1</strong>&nbsp;。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 12, k = 3\\n<strong>输出：</strong>3\\n<strong>解释：</strong>因子列表包括 [1, 2, 3, 4, 6, 12]，第 3 个因子是 3 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 7, k = 2\\n<strong>输出：</strong>7\\n<strong>解释：</strong>因子列表包括 [1, 7] ，第 2 个因子是 7 。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 4, k = 4\\n<strong>输出：</strong>-1\\n<strong>解释：</strong>因子列表包括 [1, 2, 4] ，只有 3 个因子，所以我们应该返回 -1 。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 1, k = 1\\n<strong>输出：</strong>1\\n<strong>解释：</strong>因子列表包括 [1] ，第 1 个因子为 1 。\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 1000, k = 3\\n<strong>输出：</strong>4\\n<strong>解释：</strong>因子列表包括 [1, 2, 4, 5, 8, 10, 20, 25, 40, 50, 100, 125, 200, 250, 500, 1000] 。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= k &lt;= n &lt;= 1000</code></li>\\n</ul>\\n","title":"1492. n 的第 k 个因子","relatedTags":["数学"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1492","slug":"1492-The-kth-Factor-of-n"}')}}]);