(window.webpackJsonp=window.webpackJsonp||[]).push([[665],{1463:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for singly-linked list.\\n * function ListNode(val) {\\n *     this.val = val;\\n *     this.next = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{ListNode}</span> <span class=\\"hljs-variable\\">l1</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{ListNode}</span> <span class=\\"hljs-variable\\">l2</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{ListNode}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> mergeTwoLists = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">l1, l2</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(l1==<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> l2\\n  <span class=\\"hljs-keyword\\">if</span>(l2==<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> l1\\n  <span class=\\"hljs-keyword\\">if</span>(l1.val&lt;l2.val){\\n    l1.next=mergeTwoLists(l1.next,l2);\\n    <span class=\\"hljs-keyword\\">return</span> l1;\\n  }<span class=\\"hljs-keyword\\">else</span>{\\n    l2.next=mergeTwoLists(l1,l2.next);\\n    <span class=\\"hljs-keyword\\">return</span> l2;\\n  }    \\n};\\n</code></pre>\\n"],"querySlug":"merge-two-sorted-lists","created_at":"2019-04-20","timeArr":[2019,3,20,0,39,59,0],"hasThinking":false,"content":"<p>将两个升序链表合并为一个新的 <strong>升序</strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 </p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg\\" style=\\"width: 662px; height: 302px;\\" />\\n<pre>\\n<strong>输入：</strong>l1 = [1,2,4], l2 = [1,3,4]\\n<strong>输出：</strong>[1,1,2,3,4,4]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>l1 = [], l2 = []\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>l1 = [], l2 = [0]\\n<strong>输出：</strong>[0]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>两个链表的节点数目范围是 <code>[0, 50]</code></li>\\n\\t<li><code>-100 <= Node.val <= 100</code></li>\\n\\t<li><code>l1</code> 和 <code>l2</code> 均按 <strong>非递减顺序</strong> 排列</li>\\n</ul>\\n","title":"21. 合并两个有序链表","relatedTags":["递归","链表"],"difficult":"Easy","lang":["javascript"],"uniqueID":"21","slug":"21-Merge-Two-Sorted-Lists"}')}}]);