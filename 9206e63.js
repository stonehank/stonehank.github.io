(window.webpackJsonp=window.webpackJsonp||[]).push([[968],{1766:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">findPaths</span><span class=\\"hljs-params\\">(self, m, n, N, i, j)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type m: int\\n        :type n: int\\n        :type N: int\\n        :type i: int\\n        :type j: int\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        MOD=<span class=\\"hljs-number\\">1e9</span>+<span class=\\"hljs-number\\">7</span>\\n        moves=[(<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">0</span>),(<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">0</span>),(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">-1</span>),(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>)]\\n        dp=[[<span class=\\"hljs-number\\">0</span>]*n <span class=\\"hljs-keyword\\">for</span> x <span class=\\"hljs-keyword\\">in</span> range(m)]\\n        dp[i][j]=<span class=\\"hljs-number\\">1</span>\\n        res=<span class=\\"hljs-number\\">0</span>\\n        <span class=\\"hljs-keyword\\">while</span> N&gt;<span class=\\"hljs-number\\">0</span>:\\n          aux=[[<span class=\\"hljs-number\\">0</span>]*n <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(m)]\\n          <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(m):\\n            <span class=\\"hljs-keyword\\">for</span> j <span class=\\"hljs-keyword\\">in</span> range(n):\\n              <span class=\\"hljs-keyword\\">if</span> dp[i][j]!=<span class=\\"hljs-number\\">0</span>:\\n                <span class=\\"hljs-keyword\\">for</span> dx,dy <span class=\\"hljs-keyword\\">in</span> moves:\\n                  nx,ny=dx+i,dy+j\\n                  <span class=\\"hljs-keyword\\">if</span> nx&lt;<span class=\\"hljs-number\\">0</span> <span class=\\"hljs-keyword\\">or</span> ny&lt;<span class=\\"hljs-number\\">0</span> <span class=\\"hljs-keyword\\">or</span> nx&gt;=m <span class=\\"hljs-keyword\\">or</span> ny&gt;=n:\\n                    res=(res+dp[i][j]) % MOD\\n                    <span class=\\"hljs-keyword\\">continue</span>\\n                  aux[nx][ny]=(aux[nx][ny]+dp[i][j]) % MOD\\n          dp=aux\\n          N-=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">return</span> int(res % MOD)\\n            \\n</code></pre>\\n"],"querySlug":"out-of-boundary-paths","created_at":"2019-03-05","timeArr":[2019,2,5,18,11,53,0],"hasThinking":false,"content":"<p>给你一个大小为 <code>m x n</code> 的网格和一个球。球的起始坐标为 <code>[startRow, startColumn]</code> 。你可以将球移到在四个方向上相邻的单元格内（可以穿过网格边界到达网格之外）。你 <strong>最多</strong> 可以移动 <code>maxMove</code> 次球。</p>\\n\\n<p>给你五个整数 <code>m</code>、<code>n</code>、<code>maxMove</code>、<code>startRow</code> 以及 <code>startColumn</code> ，找出并返回可以将球移出边界的路径数量。因为答案可能非常大，返回对 <code>10<sup>9</sup> + 7</code> <strong>取余</strong> 后的结果。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2021/04/28/out_of_boundary_paths_1.png\\" style=\\"width: 500px; height: 296px;\\" />\\n<pre>\\n<strong>输入：</strong>m = 2, n = 2, maxMove = 2, startRow = 0, startColumn = 0\\n<strong>输出：</strong>6\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2021/04/28/out_of_boundary_paths_2.png\\" style=\\"width: 500px; height: 293px;\\" />\\n<pre>\\n<strong>输入：</strong>m = 1, n = 3, maxMove = 3, startRow = 0, startColumn = 1\\n<strong>输出：</strong>12\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= m, n &lt;= 50</code></li>\\n\\t<li><code>0 &lt;= maxMove &lt;= 50</code></li>\\n\\t<li><code>0 &lt;= startRow &lt; m</code></li>\\n\\t<li><code>0 &lt;= startColumn &lt; n</code></li>\\n</ul>\\n","title":"576. 出界的路径数","relatedTags":["动态规划"],"difficult":"Middle","lang":["python"],"uniqueID":"576","slug":"576-Out-of-Boundary-Paths"}')}}]);