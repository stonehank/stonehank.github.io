(window.webpackJsonp=window.webpackJsonp||[]).push([[420],{1218:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">palindrome</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> breakPalindrome = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">palindrome</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(palindrome.length===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">while</span>(i&lt;<span class=\\"hljs-built_in\\">Math</span>.floor(palindrome.length/<span class=\\"hljs-number\\">2</span>)){\\n    <span class=\\"hljs-keyword\\">if</span>(palindrome[i]&gt;<span class=\\"hljs-string\\">\'a\'</span>){\\n      <span class=\\"hljs-keyword\\">return</span> palindrome.substring(<span class=\\"hljs-number\\">0</span>,i)+<span class=\\"hljs-string\\">\'a\'</span>+palindrome.substring(i+<span class=\\"hljs-number\\">1</span>)\\n    }\\n    i++\\n  }\\n  i=palindrome.length<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">while</span>(i&gt;=<span class=\\"hljs-built_in\\">Math</span>.ceil(palindrome.length/<span class=\\"hljs-number\\">2</span>)){\\n    <span class=\\"hljs-keyword\\">let</span> code=palindrome.charCodeAt(i)<span class=\\"hljs-number\\">-97</span>\\n    <span class=\\"hljs-keyword\\">if</span>(code&lt;<span class=\\"hljs-number\\">25</span>){\\n      code++\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> palindrome.substring(<span class=\\"hljs-number\\">0</span>,i)+<span class=\\"hljs-built_in\\">String</span>.fromCharCode(code+<span class=\\"hljs-number\\">97</span>)+palindrome.substring(i+<span class=\\"hljs-number\\">1</span>)\\n    i--\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'\'</span>\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">check</span>(<span class=\\"hljs-params\\">letter</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(letter&gt;<span class=\\"hljs-string\\">\'a\'</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'a\'</span>\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">null</span>\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"break-a-palindrome","created_at":"2020-01-31","timeArr":[2020,0,31,11,5,40,0],"hasThinking":false,"content":"<p>给你一个由小写英文字母组成的回文字符串 <code>palindrome</code> ，请你将其中 <strong>一个</strong> 字符用任意小写英文字母替换，使得结果字符串的 <strong>字典序最小</strong> ，且 <strong>不是</strong> 回文串。</p>\\n\\n<p>请你返回结果字符串。如果无法做到，则返回一个 <strong>空串</strong> 。</p>\\n\\n<p>如果两个字符串长度相同，那么字符串 <code>a</code> 字典序比字符串 <code>b</code> 小可以这样定义：在 <code>a</code> 和 <code>b</code> 出现不同的第一个位置上，字符串 <code>a</code> 中的字符严格小于 <code>b</code> 中的对应字符。例如，<code>\\"abcc”</code> 字典序比 <code>\\"abcd\\"</code> 小，因为不同的第一个位置是在第四个字符，显然 <code>\'c\'</code> 比 <code>\'d\'</code> 小。</p>\\n \\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>palindrome = \\"abccba\\"\\n<strong>输出：</strong>\\"aaccba\\"\\n<strong>解释：</strong>存在多种方法可以使 \\"abccba\\" 不是回文，例如 \\"<em><strong>z</strong></em>bccba\\", \\"a<em><strong>a</strong></em>ccba\\", 和 \\"ab<em><strong>a</strong></em>cba\\" 。\\n在所有方法中，\\"aaccba\\" 的字典序最小。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>palindrome = \\"a\\"\\n<strong>输出：</strong>\\"\\"\\n<strong>解释：</strong>不存在替换一个字符使 \\"a\\" 变成非回文的方法，所以返回空字符串。</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>palindrome = \\"aa\\"\\n<strong>输出：</strong>\\"ab\\"</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>palindrome = \\"aba\\"\\n<strong>输出：</strong>\\"abb\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= palindrome.length <= 1000</code></li>\\n\\t<li><code>palindrome</code> 只包含小写英文字母。</li>\\n</ul>\\n","title":"1328. 破坏回文串","relatedTags":["贪心","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1328","slug":"1328-Break-a-Palindrome"}')}}]);