(window.webpackJsonp=window.webpackJsonp||[]).push([[757],{1555:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> increasingTriplet = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> first=<span class=\\"hljs-literal\\">Infinity</span>,second=<span class=\\"hljs-literal\\">Infinity</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> num <span class=\\"hljs-keyword\\">of</span> nums){\\n    <span class=\\"hljs-keyword\\">if</span>(num&lt;=first){\\n      first=num\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(num&lt;=second){\\n      second=num\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n};\\n</code></pre>\\n"],"querySlug":"increasing-triplet-subsequence","created_at":"2019-04-26","timeArr":[2019,3,26,18,26,12,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>不断更新第一个数<code>first</code>和第二个数<code>second</code>，使得<code>first</code>和<code>second</code>越来越小，如果存在一个数<code>nums[i]</code>满足大于<code>second</code>，则返回<code>true</code>。</p>\\n<p>当<code>nums[i]&lt;=first</code>,优先更新<code>first</code>，让<code>first</code>越来越小；</p>\\n<p>当<code>nums[i]&lt;=second</code>，完整的条件就是<code>nums[i]&lt;second &amp;&amp; nums[i]&gt;first</code>，更新<code>second</code>，因为它更小了；</p>\\n<p>其他情况，也就是<code>nums[i]&gt;second</code>，返回<code>true</code>。</p>\\n","content":"<p>给你一个整数数组 <code>nums</code> ，判断这个数组中是否存在长度为 <code>3</code> 的递增子序列。</p>\\n\\n<p>如果存在这样的三元组下标 <code>(i, j, k)</code> 且满足 <code>i < j < k</code> ，使得 <code>nums[i] < nums[j] < nums[k]</code> ，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1,2,3,4,5]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>任何 i < j < k 的三元组都满足题意\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [5,4,3,2,1]\\n<strong>输出：</strong>false\\n<strong>解释：</strong>不存在满足题意的三元组</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [2,1,5,0,4,6]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>三元组 (3, 4, 5) 满足题意，因为 nums[3] == 0 < nums[4] == 4 < nums[5] == 6\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\\n\\t<li><code>-2<sup>31</sup> <= nums[i] <= 2<sup>31</sup> - 1</code></li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong>你能实现时间复杂度为 <code>O(n)</code> ，空间复杂度为 <code>O(1)</code> 的解决方案吗？</p>\\n","title":"334. 递增的三元子序列","relatedTags":["贪心","数组"],"difficult":"Middle","lang":["javascript"],"uniqueID":"334","slug":"334-Increasing-Triplet-Subsequence"}')}}]);