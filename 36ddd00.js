(window.webpackJsonp=window.webpackJsonp||[]).push([[561],{1359:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> modifyString = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> arr=s.split(<span class=\\"hljs-string\\">\'\'</span>)\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n       <span class=\\"hljs-keyword\\">if</span>(arr[i]===<span class=\\"hljs-string\\">\'?\'</span>){\\n           <span class=\\"hljs-keyword\\">let</span> exclude=[]\\n           <span class=\\"hljs-keyword\\">if</span>(i&gt;<span class=\\"hljs-number\\">0</span>){\\n               exclude.push(arr[i<span class=\\"hljs-number\\">-1</span>])\\n           }\\n           <span class=\\"hljs-keyword\\">if</span>(i&lt;arr.length<span class=\\"hljs-number\\">-1</span>){\\n               exclude.push(arr[i+<span class=\\"hljs-number\\">1</span>])\\n           }\\n           <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;<span class=\\"hljs-number\\">26</span>;j++){\\n               <span class=\\"hljs-keyword\\">let</span> letter=<span class=\\"hljs-built_in\\">String</span>.fromCharCode(j+<span class=\\"hljs-number\\">97</span>)\\n               <span class=\\"hljs-comment\\">// console.log(letter)</span>\\n               <span class=\\"hljs-keyword\\">if</span>(!exclude.includes(letter)){\\n                   arr[i]=letter\\n                   <span class=\\"hljs-keyword\\">break</span>\\n               }\\n           }\\n           <span class=\\"hljs-comment\\">// console.log(exclude)</span>\\n       }\\n       res+=arr[i]\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"replace-all-s-to-avoid-consecutive-repeating-characters","created_at":"2020-09-06","timeArr":[2020,8,6,10,40,44,0],"hasThinking":false,"content":"<p>给你一个仅包含小写英文字母和 <code>&#39;?&#39;</code> 字符的字符串 <code>s</code>，请你将所有的 <code>&#39;?&#39;</code> 转换为若干小写字母，使最终的字符串不包含任何 <strong>连续重复</strong> 的字符。</p>\\n\\n<p>注意：你 <strong>不能</strong> 修改非 <code>&#39;?&#39;</code> 字符。</p>\\n\\n<p>题目测试用例保证 <strong>除</strong> <code>&#39;?&#39;</code> 字符 <strong>之外</strong>，不存在连续重复的字符。</p>\\n\\n<p>在完成所有转换（可能无需转换）后返回最终的字符串。如果有多个解决方案，请返回其中任何一个。可以证明，在给定的约束条件下，答案总是存在的。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;?zs&quot;\\n<strong>输出：</strong>&quot;azs&quot;\\n<strong>解释：</strong>该示例共有 25 种解决方案，从 &quot;azs&quot; 到 &quot;yzs&quot; 都是符合题目要求的。只有 &quot;z&quot; 是无效的修改，因为字符串 &quot;zzs&quot; 中有连续重复的两个 &#39;z&#39; 。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;ubv?w&quot;\\n<strong>输出：</strong>&quot;ubvaw&quot;\\n<strong>解释：</strong>该示例共有 24 种解决方案，只有替换成 &quot;v&quot; 和 &quot;w&quot; 不符合题目要求。因为 &quot;ubvvw&quot; 和 &quot;ubvww&quot; 都包含连续重复的字符。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;j?qg??b&quot;\\n<strong>输出：</strong>&quot;jaqgacb&quot;\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;??yw?ipkj?&quot;\\n<strong>输出：</strong>&quot;acywaipkja&quot;\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>\\n\\t<p><code>1 &lt;= s.length&nbsp;&lt;= 100</code></p>\\n\\t</li>\\n\\t<li>\\n\\t<p><code>s</code> 仅包含小写英文字母和 <code>&#39;?&#39;</code> 字符</p>\\n\\t</li>\\n</ul>\\n","title":"1576. 替换所有的问号","relatedTags":["字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1576","slug":"1576-Replace-All-s-to-Avoid-Consecutive-Repeating-Characters"}')}}]);