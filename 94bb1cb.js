(window.webpackJsonp=window.webpackJsonp||[]).push([[1232],{2030:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">B</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> advantageCount = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A, B</span>) </span>{\\n  A.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n  <span class=\\"hljs-keyword\\">let</span> sortedB=B.map(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">n,i</span>)=&gt;</span>i).sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>B[b]-B[a])\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">let</span> minID=<span class=\\"hljs-number\\">0</span>,maxID=A.length<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;sortedB.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> id=sortedB[i],\\n        val=B[id]\\n    <span class=\\"hljs-keyword\\">if</span>(A[maxID]&gt;val){\\n      res[id]=A[maxID--]\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      res[id]=A[minID++]\\n    }\\n  }\\n\\n  <span class=\\"hljs-keyword\\">return</span> res\\n  \\n\\n};\\n</code></pre>\\n"],"querySlug":"advantage-shuffle","created_at":"2019-03-16","timeArr":[2019,2,16,10,56,21,0],"hasThinking":false,"content":"<p>给定两个大小相等的数组&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>，A 相对于 B 的<em>优势</em>可以用满足&nbsp;<code>A[i] &gt; B[i]</code>&nbsp;的索引 <code>i</code>&nbsp;的数目来描述。</p>\\n\\n<p>返回&nbsp;<code>A</code>&nbsp;的<strong>任意</strong>排列，使其相对于 <code>B</code>&nbsp;的优势最大化。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>A = [2,7,11,15], B = [1,10,4,11]\\n<strong>输出：</strong>[2,11,7,15]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>A = [12,24,8,32], B = [13,25,32,11]\\n<strong>输出：</strong>[24,32,8,12]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= A.length = B.length &lt;= 10000</code></li>\\n\\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\\n\\t<li><code>0 &lt;= B[i] &lt;= 10^9</code></li>\\n</ol>\\n","title":"870. 优势洗牌","relatedTags":["贪心","数组","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"870","slug":"870-Advantage-Shuffle"}')}}]);