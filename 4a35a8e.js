(window.webpackJsonp=window.webpackJsonp||[]).push([[1372],{2170:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">trust</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findJudge = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N, trust</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(trust.length===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">let</span> beTrust=<span class=\\"hljs-built_in\\">Array</span>(N+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-keyword\\">let</span> canBeJudeg=<span class=\\"hljs-built_in\\">Array</span>(N+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-literal\\">true</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;trust.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> [a,b]=trust[i]\\n    beTrust[b]++\\n    canBeJudeg[a]=<span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;beTrust.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(beTrust[i]===N<span class=\\"hljs-number\\">-1</span> &amp;&amp; canBeJudeg[i])<span class=\\"hljs-keyword\\">return</span> i\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(beTrust,canBeJudeg)</span>\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n};\\n</code></pre>\\n"],"querySlug":"find-the-town-judge","created_at":"2019-02-24","timeArr":[2019,1,24,10,40,28,0],"hasThinking":false,"content":"<p>在一个小镇里，按从 <code>1</code> 到 <code>n</code> 为 <code>n</code> 个人进行编号。传言称，这些人中有一个是小镇上的秘密法官。</p>\\n\\n<p>如果小镇的法官真的存在，那么：</p>\\n\\n<ol>\\n\\t<li>小镇的法官不相信任何人。</li>\\n\\t<li>每个人（除了小镇法官外）都信任小镇的法官。</li>\\n\\t<li>只有一个人同时满足条件 1 和条件 2 。</li>\\n</ol>\\n\\n<p>给定数组 <code>trust</code>，该数组由信任对 <code>trust[i] = [a, b]</code> 组成，表示编号为 <code>a</code> 的人信任编号为 <code>b</code> 的人。</p>\\n\\n<p>如果小镇存在秘密法官并且可以确定他的身份，请返回该法官的编号。否则，返回 <code>-1</code>。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 2, trust = [[1,2]]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 3, trust = [[1,3],[2,3]]\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 3, trust = [[1,3],[2,3],[3,1]]\\n<strong>输出：</strong>-1\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 3, trust = [[1,2],[2,3]]\\n<strong>输出：</strong>-1\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 4, trust = [[1,3],[1,4],[2,3],[2,4],[4,3]]\\n<strong>输出：</strong>3</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n <= 1000</code></li>\\n\\t<li><code>0 <= trust.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>trust[i].length == 2</code></li>\\n\\t<li><code>trust[i]</code> 互不相同</li>\\n\\t<li><code>trust[i][0] != trust[i][1]</code></li>\\n\\t<li><code>1 <= trust[i][0], trust[i][1] <= n</code></li>\\n</ul>\\n","title":"997. 找到小镇的法官","relatedTags":["图","数组","哈希表"],"difficult":"Easy","lang":["javascript"],"uniqueID":"997","slug":"997-Find-the-Town-Judge"}')}}]);