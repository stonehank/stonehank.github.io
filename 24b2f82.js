(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{601:function(n){n.exports=JSON.parse('{"content":"<p>记录一个算法，要求获取数组中的和为<code>sum</code>的组合的数量</p>\\n<ul>\\n<li>不要求连续，不要求重复</li>\\n</ul>\\n<p>例如<code>arr=[1,2,3,4,5]</code>，那么和为5的组合数量为3，分别是<code>2,3</code>、<code>1,4</code>、<code>5</code></p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">computeSubset</span>(<span class=\\"hljs-params\\">arr,sum</span>)</span>{\\n  <span class=\\"hljs-comment\\">// 创建数组，用于记录从1到sum每一个数的组合数量</span>\\n  <span class=\\"hljs-keyword\\">let</span> aux=<span class=\\"hljs-built_in\\">Array</span>(sum+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-comment\\">// 设置0为1，因为后面的处理，0也就是它本身</span>\\n  aux[<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> n <span class=\\"hljs-keyword\\">of</span> arr){\\n    <span class=\\"hljs-comment\\">// 这里i&lt;n，就没意义了，就会出现数组索引是负值</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=sum;i&gt;=n;i--){\\n      <span class=\\"hljs-comment\\">// 精髓，见最后</span>\\n      aux[i]+=aux[i-n]\\n    }\\n  }\\n  <span class=\\"hljs-comment\\">// 返回第sum个的组合数量</span>\\n  <span class=\\"hljs-keyword\\">return</span> aux[sum]\\n}\\n\\ncomputeSubset([<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-number\\">5</span>],<span class=\\"hljs-number\\">5</span>) <span class=\\"hljs-comment\\">// 3</span></code></pre></code></pre>\\n<p>关于上面<code>aux[i]+=aux[i-1]</code></p>\\n<pre><code><pre class=\\"hljs\\"><code>aux[1] = aux[1] +aux[0]\\naux[2] = aux[2] +aux[1]\\naux[3] = aux[3] +aux[2]</code></pre></code></pre><p>==&gt;<code>aux[3] = aux[3] +aux[2] +aux[1] +aux[0]</code></p>\\n<hr>\\n<ul>\\n<li>不要求连续，要求重复</li>\\n</ul>\\n<p>例如：<code>arr=[1,2,5]</code>，那么和为5的组合为4，分别是<code>1,1,1,1,1</code>、<code>1,1,1,2</code>、<code>2,2,1</code>、<code>5</code></p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> change = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">arr,sum</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> aux=<span class=\\"hljs-built_in\\">Array</span>(sum+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">0</span>)\\n  aux[<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> n <span class=\\"hljs-keyword\\">of</span> arr){\\n    <span class=\\"hljs-comment\\">// 上一题这里是逆序，这里是顺序</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=n;i&lt;aux.length;i++){\\n      aux[i]+=aux[i-n]\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> aux[sum]\\n};</code></pre></code></pre>\\n<hr>\\n<ul>\\n<li>要求连续，不要求重复</li>\\n</ul>\\n<p>例如<code>arr=[1,2,3,4,5]</code>，那么和为5的组合数量为2，分别是<code>2,3</code>、<code>5</code></p>\\n<p>写法一：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">calcSumCount</span>(<span class=\\"hljs-params\\">arr,target</span>)</span>{\\n  <span class=\\"hljs-keyword\\">let</span> prefix=[<span class=\\"hljs-number\\">1</span>],curSum=<span class=\\"hljs-number\\">0</span>,result=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n    curSum+=arr[i]\\n    <span class=\\"hljs-keyword\\">if</span>(curSum&gt;=target)result+=prefix[curSum-target] || <span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(!prefix[curSum])prefix[curSum]=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">else</span> prefix[curSum]++\\n  }\\n<span class=\\"hljs-keyword\\">return</span> result\\n}</code></pre></code></pre>\\n<p>写法二：<code>windowSlide</code></p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">windowSlideSum</span>(<span class=\\"hljs-params\\">arr,target</span>)</span>{\\n  <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>,result=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> head=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n    sum+=arr[i]\\n    <span class=\\"hljs-keyword\\">while</span>(sum&gt;=target &amp;&amp; head&lt;=i){\\n      <span class=\\"hljs-keyword\\">if</span>(sum===target)result++\\n      sum-=arr[head++]\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> result\\n}</code></pre></code></pre>\\n","toc":[],"relatedTags":null,"created_at":"2018-10-02","timeArr":[2018,9,2,0,0,0,0],"title":"获取数组中和为某个值的组合数量的算法","uuid":"d8cf763cd33c2883caf30f5d6f247da84af3cf8f","summary":"<p>记录一个算法，要求获取数组中的和为<code>sum</code>的组合的数量</p>\\n<ul>\\n<li>不要求连续，不要求重复</li>\\n</ul>\\n<p>例如<code>arr=[1,2,3,4,5]</code>，那么和为5的组合数量为3，分别是<code>2,3</code>、<code>1,4</code>、<code>5</code></p>\\n<pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">computeSubset</span>(<span class=\\"hljs-params\\">arr,sum</span>)</span>{\\n  <span class=\\"hljs-comment\\">// 创建数组，用于记录从1到sum每一个...</span></code></pre>","slug":"huo-qu-shu-zu-zhong-he-wei-mou-ge-zhi-de-zu-he-shu-liang-de-suan-fa","sha":"ccf5cf75d3f663c8c143ed75e3d46b5a2f8aa576"}')}}]);