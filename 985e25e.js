(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{684:function(t){t.exports=JSON.parse('{"content":"<h2 id=\\"zheng-ze--exec-he-match\\">正则 exec和match</h2>\\n<ul>\\n<li>都是返回数组，包括小括号内部</li>\\n<li>非全局 一致</li>\\n<li>match全局，匹配多个值</li>\\n<li>exec全局，匹配单个值，但每次执行会继续从上一次匹配数据之后开始<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">let</span> str=<span class=\\"hljs-string\\">\'this is a stick\'</span>\\n</code></pre></code></pre>\\n</li>\\n</ul>\\n<p>let reg=/.is/\\nreg.exec(str)   // [&quot;his&quot;, index: 1, input: &quot;this is a stick&quot;, groups: undefined]\\nreg.exec(str)   // [&quot;his&quot;, index: 1, input: &quot;this is a stick&quot;, groups: undefined]</p>\\n<p>let regG=/.is/g\\nregG.exec(str)  // [&quot;his&quot;, index: 1, input: &quot;this is a stick&quot;, groups: undefined]\\nregG.exec(str)  // [&quot; is&quot;, index: 4, input: &quot;this is a stick&quot;, groups: undefined]\\nregG.exec(str)  // null</p>\\n<pre><code><pre class=\\"hljs\\"><code>\\n## 正则的静态属性\\n\\n| 长属性名 | 短属性名 | 说明 |\\n| :------| :---: | :---- |\\n| input | $_ | 最近一次要匹配的字符串 |\\n| lastMatch | $&amp; | 最近一次匹配项 |\\n| lastParen | $+ | 最近一次匹配的捕获组 |\\n| leftContext | $` | input字符串中lastMatch之前的文本 |\\n| rightContext | $\' | input字符串中lastMatch之后的文本 |\\n| multiline | $* | 布尔值，表示是否所有表达式都使用多行模式|\\n\\n```js\\nlet str=&quot;short stick&quot;\\nlet pattern=/s/g\\n\\n// 第一次执行(也可以用exec)\\npattern.test(str)\\nRegExp.rightContext   // &quot;hort stick&quot;\\nRegExp[&quot;$\'&quot;]          // &quot;hort stick&quot;\\n\\n// 第二次执行\\npattern.test(str)\\nRegExp.rightContext   // &quot;tick&quot;\\nRegExp[&quot;$\'&quot;]          // &quot;tick&quot;</code></pre></code></pre>","toc":[{"anchor":"zheng-ze--exec-he-match","level":2,"text":"正则 exec和match"}],"relatedTags":null,"created_at":"2018-07-11","timeArr":[2018,6,11,0,0,0,0],"title":"正则遗漏点","uuid":"5fc1f9d14abff5f33e3b3a286fadfe82ad9a48b2","summary":"<h4>正则 exec和match</h4>\\n<ul>\\n<li>都是返回数组，包括小括号内部</li>\\n<li>非全局 一致</li>\\n<li>match全局，匹配多个值</li>\\n<li>exec全局，匹配单个值，但每次执行会继续从上一次匹配数据之后开始</li>\\n</ul>\\n<pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">let</span> str=<span class=\\"hljs-string\\">\'this is a stick\'</span>\\n\\n<span class=\\"hljs-keyword\\">let</span> reg=<span class=\\"hljs-regexp\\">/.is/</span>\\nreg.exec(str)   /...</code></pre>","slug":"zheng-ze-yi-lou-dian","sha":"150a56b6eb7cd88a1e0662000a7a8f23e0c8003a"}')}}]);