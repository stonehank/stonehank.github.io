(window.webpackJsonp=window.webpackJsonp||[]).push([[562],{1360:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums1</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums2</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numTriplets = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums1, nums2</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> hash1={}\\n    <span class=\\"hljs-keyword\\">let</span> hash2={}\\n    <span class=\\"hljs-keyword\\">let</span> used1={}\\n    <span class=\\"hljs-keyword\\">let</span> used2={}\\n    <span class=\\"hljs-keyword\\">let</span> aux1=[],aux2=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nums1.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(hash1[nums1[i]]==<span class=\\"hljs-literal\\">null</span>){\\n            hash1[nums1[i]]=[nums1[i],<span class=\\"hljs-number\\">1</span>]\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            hash1[nums1[i]][<span class=\\"hljs-number\\">1</span>]++\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nums2.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(hash2[nums2[i]]==<span class=\\"hljs-literal\\">null</span>){\\n            hash2[nums2[i]]=[nums2[i],<span class=\\"hljs-number\\">1</span>]\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            hash2[nums2[i]][<span class=\\"hljs-number\\">1</span>]++\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> hash1){\\n        aux1.push(hash1[k])\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> hash2){\\n        aux2.push(hash2[k])\\n    }\\n    aux1.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a[<span class=\\"hljs-number\\">0</span>]-b[<span class=\\"hljs-number\\">0</span>])\\n    aux2.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a[<span class=\\"hljs-number\\">0</span>]-b[<span class=\\"hljs-number\\">0</span>])\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-comment\\">// console.log(aux1,aux2)</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;aux1.length;i++){\\n        <span class=\\"hljs-keyword\\">let</span> [l,repeL]=aux1[i]\\n        <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;aux2.length;j++){\\n            <span class=\\"hljs-keyword\\">let</span> [r,repeR]=aux2[j]\\n            <span class=\\"hljs-keyword\\">if</span>(r&gt;l)<span class=\\"hljs-keyword\\">break</span>\\n            <span class=\\"hljs-keyword\\">let</span> nxtNeed=l*l/r\\n            <span class=\\"hljs-keyword\\">if</span>(nxtNeed===r){\\n                count+=getCalc(repeR)\\n            }<span class=\\"hljs-keyword\\">else</span>{\\n                <span class=\\"hljs-keyword\\">if</span>(hash2[nxtNeed]){\\n                     count+=(hash2[nxtNeed][<span class=\\"hljs-number\\">1</span>]*repeR)\\n                }\\n               \\n            }\\n        }\\n        res+=count*repeL\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(\'----\')</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;aux2.length;i++){\\n        <span class=\\"hljs-keyword\\">let</span> [l,repeL]=aux2[i]\\n        <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;aux1.length;j++){\\n            <span class=\\"hljs-keyword\\">let</span> [r,repeR]=aux1[j]\\n            <span class=\\"hljs-keyword\\">if</span>(r&gt;l)<span class=\\"hljs-keyword\\">break</span>\\n            <span class=\\"hljs-keyword\\">let</span> nxtNeed=l*l/r\\n            <span class=\\"hljs-keyword\\">if</span>(nxtNeed===r){\\n                count+=getCalc(repeR)\\n            }<span class=\\"hljs-keyword\\">else</span>{\\n                <span class=\\"hljs-keyword\\">if</span>(hash1[nxtNeed]){\\n                     count+=(hash1[nxtNeed][<span class=\\"hljs-number\\">1</span>]*repeR)\\n                }\\n               \\n            }\\n        }\\n        <span class=\\"hljs-comment\\">// console.log(count)</span>\\n        res+=count*repeL\\n    }\\n    \\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">getCalc</span>(<span class=\\"hljs-params\\">n</span>)</span>{\\n        <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;n;i++){\\n            res+=i\\n        }\\n        <span class=\\"hljs-keyword\\">return</span> res\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers","created_at":"2020-09-06","timeArr":[2020,8,6,11,55,31,0],"hasThinking":false,"content":"<p>给你两个整数数组 <code>nums1</code> 和 <code>nums2</code> ，请你返回根据以下规则形成的三元组的数目（类型 1 和类型 2 ）：</p>\\n\\n<ul>\\n\\t<li>类型 1：三元组 <code>(i, j, k)</code> ，如果 <code>nums1[i]<sup>2</sup>&nbsp;== nums2[j] * nums2[k]</code> 其中 <code>0 &lt;= i &lt; nums1.length</code> 且 <code>0 &lt;= j &lt; k &lt; nums2.length</code></li>\\n\\t<li>类型 2：三元组 <code>(i, j, k)</code> ，如果 <code>nums2[i]<sup>2</sup>&nbsp;== nums1[j] * nums1[k]</code> 其中 <code>0 &lt;= i &lt; nums2.length</code> 且 <code>0 &lt;= j &lt; k &lt; nums1.length</code></li>\\n</ul>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>nums1 = [7,4], nums2 = [5,2,8,9]\\n<strong>输出：</strong>1\\n<strong>解释：</strong>类型 1：(1,1,2), nums1[1]^2 = nums2[1] * nums2[2] (4^2 = 2 * 8)</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>nums1 = [1,1], nums2 = [1,1,1]\\n<strong>输出：</strong>9\\n<strong>解释：</strong>所有三元组都符合题目要求，因为 1^2 = 1 * 1\\n类型 1：(0,0,1), (0,0,2), (0,1,2), (1,0,1), (1,0,2), (1,1,2), nums1[i]^2 = nums2[j] * nums2[k]\\n类型 2：(0,0,1), (1,0,1), (2,0,1), nums2[i]^2 = nums1[j] * nums1[k]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>nums1 = [7,7,8,3], nums2 = [1,2,9,7]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>有两个符合题目要求的三元组\\n类型 1：(3,0,2), nums1[3]^2 = nums2[0] * nums2[2]\\n类型 2：(3,0,1), nums2[3]^2 = nums1[0] * nums1[1]\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>nums1 = [4,7,9,11,23], nums2 = [3,5,1024,12,18]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>不存在符合题目要求的三元组\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 1000</code></li>\\n\\t<li><code>1 &lt;= nums1[i], nums2[i] &lt;= 10^5</code></li>\\n</ul>\\n","title":"1577. 数的平方等于两数乘积的方法数","relatedTags":["数组","哈希表","数学","双指针"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1577","slug":"1577-Number-of-Ways-Where-Square-of-Number-Is-Equal-to-Product-of-Two-Numbers"}')}}]);