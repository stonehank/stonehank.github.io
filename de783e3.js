(window.webpackJsonp=window.webpackJsonp||[]).push([[285],{1083:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">height</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxArea = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">height</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> l=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> r=height.length<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">while</span>(l&lt;r){\\n    <span class=\\"hljs-keyword\\">let</span> minH=<span class=\\"hljs-built_in\\">Math</span>.min(height[l],height[r])\\n    res=<span class=\\"hljs-built_in\\">Math</span>.max(res,minH*(r-l))\\n    <span class=\\"hljs-keyword\\">if</span>(height[l]&lt;height[r]){\\n      l++\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      r--\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"container-with-most-water","created_at":"2020-04-18","timeArr":[2020,3,18,10,28,33,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>双指针，<code>i</code>和<code>j</code>分别从头和尾开始，面积和最短的边界相关；</p>\\n<p>如果<code>height[i]&lt;height[j]</code>，<code>i</code>可以继续右移，因为这时候的短板是<code>i</code>，因此<code>i</code>对应的数如果增大，面积也会增大；</p>\\n<p>如果<code>height[i]&lt;=height[j]</code>，短板变为<code>j</code>，那么<code>i</code>移动对面积就没有任何变化了，因此要左移<code>j</code>，直到下一次<code>heigth[i]&lt;height[j]</code>的时候，短板又交换。</p>\\n","content":"<p>给你 <code>n</code> 个非负整数 <code>a<sub>1</sub>，a<sub>2，</sub>...，a</code><sub><code>n</code>，</sub>每个数代表坐标中的一个点&nbsp;<code>(i,&nbsp;a<sub>i</sub>)</code> 。在坐标内画 <code>n</code> 条垂直线，垂直线 <code>i</code>&nbsp;的两个端点分别为&nbsp;<code>(i,&nbsp;a<sub>i</sub>)</code> 和 <code>(i, 0)</code> 。找出其中的两条线，使得它们与&nbsp;<code>x</code>&nbsp;轴共同构成的容器可以容纳最多的水。</p>\\n\\n<p><strong>说明：</strong>你不能倾斜容器。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/07/25/question_11.jpg\\" style=\\"height: 287px; width: 600px;\\" /></p>\\n\\n<pre>\\n<strong>输入：</strong>[1,8,6,2,5,4,8,3,7]\\n<strong>输出：</strong>49 \\n<strong>解释：</strong>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为&nbsp;49。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>height = [1,1]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>height = [4,3,2,1,4]\\n<strong>输出：</strong>16\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>height = [1,2,1]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>n == height.length</code></li>\\n\\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\\n\\t<li><code>0 &lt;= height[i] &lt;= 10<sup>4</sup></code></li>\\n</ul>\\n","title":"11. 盛最多水的容器","relatedTags":["贪心","数组","双指针"],"difficult":"Middle","lang":["javascript"],"uniqueID":"11","slug":"11-Container-With-Most-Water"}')}}]);