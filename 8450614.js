(window.webpackJsonp=window.webpackJsonp||[]).push([[982],{1780:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">numRows</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> convert = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s, numRows</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(s===<span class=\\"hljs-string\\">\'\'</span> || numRows===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> s\\n  <span class=\\"hljs-keyword\\">let</span> aux=<span class=\\"hljs-built_in\\">Array</span>(numRows).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(<span class=\\"hljs-built_in\\">Math</span>.floor(s.length/<span class=\\"hljs-number\\">2</span>)+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-string\\">\'\'</span>))\\n  <span class=\\"hljs-keyword\\">let</span> moves=[[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>]],moveId=<span class=\\"hljs-number\\">0</span>,sId=<span class=\\"hljs-number\\">1</span>\\n  aux[<span class=\\"hljs-number\\">0</span>][<span class=\\"hljs-number\\">0</span>]=s[<span class=\\"hljs-number\\">0</span>]\\n  dfs([<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">0</span>])\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;aux.length;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;aux[i].length;j++){\\n      res+=aux[i][j]\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res  \\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">[x,y]</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(sId&gt;=s.length)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">let</span> [dx,dy]=moves[moveId++]\\n    <span class=\\"hljs-keyword\\">if</span>(moveId===<span class=\\"hljs-number\\">2</span>)moveId=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> nx=x+dx,ny=y+dy\\n    <span class=\\"hljs-keyword\\">while</span>(nx&gt;=<span class=\\"hljs-number\\">0</span> &amp;&amp; nx&lt;numRows &amp;&amp; ny&lt;s.length &amp;&amp; sId&lt;s.length){\\n      aux[nx][ny]=s[sId++]\\n      nx+=dx\\n      ny+=dy\\n    }\\n    dfs([nx-dx,ny-dy])\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"zigzag-conversion","created_at":"2019-05-01","timeArr":[2019,4,1,10,44,59,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>定义一个<code>rows</code>，它的作用是用来保存每一行的字母，根据题目，可以很轻松的得出第一个字母就在<code>第1行</code>，第二个字母在<code>第2行</code>...第<code>N</code>个字母在第<code>numsRow</code>行；</p>\\n<p>然后开始往上，第<code>N+1</code>个字母在<code>numsRow-1</code>行...</p>\\n<p>因此遍历<code>s</code>，并且将每一个字母添加到对应的行中，最后在将每一行字母合并就是结果。</p>\\n","content":"<p>将一个给定字符串 <code>s</code> 根据给定的行数 <code>numRows</code> ，以从上往下、从左到右进行 Z 字形排列。</p>\\n\\n<p>比如输入字符串为 <code>\\"PAYPALISHIRING\\"</code> 行数为 <code>3</code> 时，排列如下：</p>\\n\\n<pre>\\nP   A   H   N\\nA P L S I I G\\nY   I   R</pre>\\n\\n<p>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：<code>\\"PAHNAPLSIIGYIR\\"</code>。</p>\\n\\n<p>请你实现这个将字符串进行指定行数变换的函数：</p>\\n\\n<pre>\\nstring convert(string s, int numRows);</pre>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"PAYPALISHIRING\\", numRows = 3\\n<strong>输出：</strong>\\"PAHNAPLSIIGYIR\\"\\n</pre>\\n<strong>示例 2：</strong>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"PAYPALISHIRING\\", numRows = 4\\n<strong>输出：</strong>\\"PINALSIGYAHRPI\\"\\n<strong>解释：</strong>\\nP     I    N\\nA   L S  I G\\nY A   H R\\nP     I\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"A\\", numRows = 1\\n<strong>输出：</strong>\\"A\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= s.length <= 1000</code></li>\\n\\t<li><code>s</code> 由英文字母（小写和大写）、<code>\',\'</code> 和 <code>\'.\'</code> 组成</li>\\n\\t<li><code>1 <= numRows <= 1000</code></li>\\n</ul>\\n","title":"6. Z 字形变换","relatedTags":["字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"6","slug":"6-ZigZag-Conversion"}')}}]);