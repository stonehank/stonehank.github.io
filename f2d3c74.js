(window.webpackJsonp=window.webpackJsonp||[]).push([[1024],{1822:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">M</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> imageSmoother = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">M</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> m=M.length,n=M[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-built_in\\">Array</span>(m).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(n).fill(<span class=\\"hljs-number\\">0</span>))\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;n;j++){\\n      <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>,count=<span class=\\"hljs-number\\">0</span>\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k=<span class=\\"hljs-number\\">-1</span>;k&lt;=<span class=\\"hljs-number\\">1</span>;k++){\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> l=<span class=\\"hljs-number\\">-1</span>;l&lt;=<span class=\\"hljs-number\\">1</span>;l++){\\n          <span class=\\"hljs-keyword\\">let</span> nx=k+i,ny=l+j\\n          <span class=\\"hljs-keyword\\">if</span>(nx&lt;<span class=\\"hljs-number\\">0</span> || ny&lt;<span class=\\"hljs-number\\">0</span> || nx&gt;=m || ny&gt;=n)<span class=\\"hljs-keyword\\">continue</span>\\n          sum+=M[nx][ny]\\n          count++\\n        }\\n      }\\n      res[i][j]=<span class=\\"hljs-built_in\\">Math</span>.floor(sum/count)\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"image-smoother","created_at":"2019-03-14","timeArr":[2019,2,14,16,17,2,0],"hasThinking":false,"content":"<p>包含整数的二维矩阵 M 表示一个图片的灰度。你需要设计一个平滑器来让每一个单元的灰度成为平均灰度&nbsp;(向下舍入) ，平均灰度的计算是周围的8个单元和它本身的值求平均，如果周围的单元格不足八个，则尽可能多的利用它们。</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong>\\n[[1,1,1],\\n [1,0,1],\\n [1,1,1]]\\n<strong>输出:</strong>\\n[[0, 0, 0],\\n [0, 0, 0],\\n [0, 0, 0]]\\n<strong>解释:</strong>\\n对于点 (0,0), (0,2), (2,0), (2,2): 平均(3/4) = 平均(0.75) = 0\\n对于点 (0,1), (1,0), (1,2), (2,1): 平均(5/6) = 平均(0.83333333) = 0\\n对于点 (1,1): 平均(8/9) = 平均(0.88888889) = 0\\n</pre>\\n\\n<p><strong>注意:</strong></p>\\n\\n<ol>\\n\\t<li>给定矩阵中的整数范围为 [0, 255]。</li>\\n\\t<li>矩阵的长和宽的范围均为&nbsp;[1, 150]。</li>\\n</ol>\\n","title":"661. 图片平滑器","relatedTags":["数组","矩阵"],"difficult":"Easy","lang":["javascript"],"uniqueID":"661","slug":"661-Image-Smoother"}')}}]);