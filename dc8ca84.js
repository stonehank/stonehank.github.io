(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{623:function(e){e.exports=JSON.parse('{"content":"<p>内容包括：<code>tag 模板字符串</code>，<code>Labelled statements</code>，<code>React服务端渲染使用stream</code>，<code>jest.fn</code>，<code>jest.mock</code></p>\\n<h3 id=\\"tag--mu-ban-zi-fu-chuan\\">tag 模板字符串</h3>\\n<p>以<code>${xx}</code>分割字符串，分别传入2个数组，第一个是<code>分割后的结果</code>，第二个是<code>分割的变量</code></p>\\n<p>例如：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">// Defining a Tag for template literals</span>\\n<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">highlight</span>(<span class=\\"hljs-params\\">strings, ...values</span>) </span>{\\n  <span class=\\"hljs-comment\\">// here i is the iterator for the strings array</span>\\n  <span class=\\"hljs-keyword\\">let</span> result = <span class=\\"hljs-string\\">\'\'</span>\\n  strings.forEach(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">str, i</span>) =&gt;</span> {\\n    result += str\\n    <span class=\\"hljs-keyword\\">if</span> (values[i]) {\\n      result += <span class=\\"hljs-string\\">`&lt;mark&gt;<span class=\\"hljs-subst\\">${values[i]}</span>&lt;/mark&gt;`</span>\\n    }\\n  })\\n  <span class=\\"hljs-keyword\\">return</span> result\\n}\\n\\n<span class=\\"hljs-keyword\\">const</span> author = <span class=\\"hljs-string\\">\'Henry Avery\'</span>\\n<span class=\\"hljs-keyword\\">const</span> statement = <span class=\\"hljs-string\\">`I am a man of fortune &amp; I must seek my fortune`</span>\\n<span class=\\"hljs-keyword\\">const</span> quote = highlight<span class=\\"hljs-string\\">`<span class=\\"hljs-subst\\">${author}</span> once said, <span class=\\"hljs-subst\\">${statement}</span>`</span>\\n\\n<span class=\\"hljs-comment\\">// &lt;mark&gt;Henry Avery&lt;/mark&gt; once said, &lt;mark&gt;I am a man of fortune</span>\\n<span class=\\"hljs-comment\\">// &amp; I must seek my fortune&lt;/mark&gt;</span></code></pre></code></pre>\\n<hr>\\n<h3 id=\\"labelled-statements\\">Labelled statements</h3>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code>declarationBlock: {\\n  <span class=\\"hljs-comment\\">// can be used to group logical code blocks together</span>\\n  <span class=\\"hljs-keyword\\">var</span> i, j\\n}\\n\\n\\n<span class=\\"hljs-attr\\">forLoop1</span>: <span class=\\"hljs-comment\\">//The first for statement is labeled \\"forLoop1\\"</span>\\n<span class=\\"hljs-keyword\\">for</span> (i = <span class=\\"hljs-number\\">0</span>; i &lt; <span class=\\"hljs-number\\">3</span>; i++) {      \\n   <span class=\\"hljs-attr\\">forLoop2</span>: <span class=\\"hljs-comment\\">//The second for statement is labeled \\"forLoop2\\"</span>\\n   <span class=\\"hljs-keyword\\">for</span> (j = <span class=\\"hljs-number\\">0</span>; j &lt; <span class=\\"hljs-number\\">3</span>; j++) {   \\n      <span class=\\"hljs-keyword\\">if</span> (i === <span class=\\"hljs-number\\">1</span> &amp;&amp; j === <span class=\\"hljs-number\\">1</span>) {\\n         <span class=\\"hljs-keyword\\">continue</span> forLoop1\\n      }\\n      <span class=\\"hljs-built_in\\">console</span>.log(<span class=\\"hljs-string\\">\'i = \'</span> + i + <span class=\\"hljs-string\\">\', j = \'</span> + j)\\n   }\\n}\\n\\n<span class=\\"hljs-attr\\">loopBlock4</span>: {\\n  <span class=\\"hljs-built_in\\">console</span>.log(<span class=\\"hljs-string\\">\'I will print\'</span>)\\n  <span class=\\"hljs-keyword\\">break</span> loopBlock4\\n  <span class=\\"hljs-built_in\\">console</span>.log(<span class=\\"hljs-string\\">\'I will not print\'</span>)\\n}</code></pre></code></pre>\\n<hr>\\n<h3 id=\\"payload--zi-mian-you-xiao-zai-he\\">payload 字面：有效载荷</h3>\\n<p>一般指的是实际的内容，例如json:</p>\\n<pre><code><pre class=\\"hljs\\"><code>js:{\\ndata:123\\n}</code></pre></code></pre><p>这里<code>123</code>就是<code>payload</code></p>\\n<hr>\\n<h3 id=\\"wang-luo-xin-xi-cha-xun\\">网络信息查询</h3>\\n<p>API:<code>navigation.connection</code></p>\\n<hr>\\n<h3 id=\\"react-fu-wu-duan-xuan-ran-shi-yong-stream\\">React服务端渲染使用stream</h3>\\n<pre><code><pre class=\\"hljs\\"><code>const ReactDOMServer require(\'react-dom/server\')\\nconst http = require(\'http\')\\nconst fs = require(\'fs\')\\nconst app = require(\'./app\')\\n\\n// bad\\nconst server = http.createServer((req, res) =&gt; {\\n    const body = ReactDOMServer.renderToString(app)\\n    res.end(body)\\n});\\n\\n// good\\nconst server = http.createServer(function (req, res) {\\n    const stream = ReactDOMServer.renderToNodeStream(app)\\n    stream.pipe(res)\\n})\\n\\nserver.listen(8000)</code></pre></code></pre><hr>\\n<h3 id=\\"jestfn\\">jest.fn</h3>\\n<p>模拟一个函数，参数是<code>(函数的行为)</code></p>\\n<p><code>const mockFn=jest.fn(()=&gt;55)</code></p>\\n<p>可以通过</p>\\n<ul>\\n<li><code>expect(mockFn).toHaveBeenCalled()</code> 验证是否被调用</li>\\n<li><code>expect(mockFn).toHaveBeenCalledTimes(num)</code>验证是否被调用num次</li>\\n<li><code>expect(mockFn).toHaveBeenCalledWith(arg1,arg2)</code>验证是否存在被调用的参数</li>\\n<li><code>expect(mockFn).toHaveBeenLastCalledWith(arg1,arg2)</code>验证最后一次被调用的参数</li>\\n<li><code>expect(mockFn).toHaveBeenNthCalledWith(Nth,arg1,arg2)</code>验证第Nth次被调用的参数</li>\\n<li><code>expect(mockFn).toHaveBeenNthCalledWith(arg1,arg2)</code>验证最后一次被调用的参数</li>\\n<li><code>mockFn.mock.call</code>查看函数被调用的数组</li>\\n</ul>\\n<hr>\\n<h3 id=\\"jestmock\\">jest.mock</h3>\\n<p>模拟一个模块，参数分别是<code>(模块路径,模块的行为,模块是否虚拟的)</code></p>\\n<p>例如：一个项目不存在<code>../abc.js</code>这个模块</p>\\n<pre><code><pre class=\\"hljs\\"><code>jest.mock(\'../abc.js\',() =&gt; {\\n  return jest.fn(() =&gt; 42);\\n},{virtual:true})</code></pre></code></pre><p>第三个参数表示这个模块实际不存在</p>\\n","toc":[{"anchor":"tag--mu-ban-zi-fu-chuan","level":3,"text":"tag 模板字符串"},{"anchor":"labelled-statements","level":3,"text":"Labelled statements"},{"anchor":"payload--zi-mian-you-xiao-zai-he","level":3,"text":"payload 字面：有效载荷"},{"anchor":"wang-luo-xin-xi-cha-xun","level":3,"text":"网络信息查询"},{"anchor":"react-fu-wu-duan-xuan-ran-shi-yong-stream","level":3,"text":"React服务端渲染使用stream"},{"anchor":"jestfn","level":3,"text":"jest.fn"},{"anchor":"jestmock","level":3,"text":"jest.mock"}],"relatedTags":null,"created_at":"2018-12-08","timeArr":[2018,11,8,0,0,0,0],"title":"前端日常笔记","uuid":"34441675832af7bfe9b306f5bd75927d10cb58a0","summary":"<p>内容包括：<code>tag 模板字符串</code>，<code>Labelled statements</code>，<code>React服务端渲染使用stream</code>，<code>jest.fn</code>，<code>jest.mock</code></p>\\n<h4>tag 模板字符串</h4>\\n<p>以<code>${xx}</code>分割字符串，分别传入2个数组，第一个是<code>分割后的结果</code>，第二个是<code>分割的变量</code></p>\\n<p>例如：</p>\\n<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">// ...</span></code></pre>","slug":"qian-duan-ri-chang-bi-ji","sha":"a599fef4a57cb1e1e640bb153fdedda0e6ad5339"}')}}]);