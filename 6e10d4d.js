(window.webpackJsonp=window.webpackJsonp||[]).push([[383],{1181:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">tomatoSlices</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">cheeseSlices</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numOfBurgers = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">ts, cs</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(ts===<span class=\\"hljs-number\\">0</span> &amp;&amp; cs===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> [<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">0</span>]\\n  <span class=\\"hljs-keyword\\">if</span>(cs&gt;=ts)<span class=\\"hljs-keyword\\">return</span> []\\n  <span class=\\"hljs-keyword\\">let</span> a1=(ts<span class=\\"hljs-number\\">-2</span>*cs)/<span class=\\"hljs-number\\">2</span>\\n  <span class=\\"hljs-keyword\\">let</span> a2=(<span class=\\"hljs-number\\">4</span>*cs-ts)/<span class=\\"hljs-number\\">2</span>\\n  <span class=\\"hljs-keyword\\">if</span>(a1&lt;<span class=\\"hljs-number\\">0</span> || a2&lt;<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> []\\n  <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-built_in\\">Math</span>.floor(a1)!==a1 || <span class=\\"hljs-built_in\\">Math</span>.floor(a2)!==a2)<span class=\\"hljs-keyword\\">return</span> []\\n  <span class=\\"hljs-keyword\\">return</span> [a1,a2]\\n};\\n</code></pre>\\n"],"querySlug":"number-of-burgers-with-no-waste-of-ingredients","created_at":"2019-12-01","timeArr":[2019,11,1,11,9,57,0],"hasThinking":false,"content":"<p>圣诞活动预热开始啦，汉堡店推出了全新的汉堡套餐。为了避免浪费原料，请你帮他们制定合适的制作计划。</p>\\n\\n<p>给你两个整数&nbsp;<code>tomatoSlices</code>&nbsp;和&nbsp;<code>cheeseSlices</code>，分别表示番茄片和奶酪片的数目。不同汉堡的原料搭配如下：</p>\\n\\n<ul>\\n\\t<li><strong>巨无霸汉堡：</strong>4 片番茄和 1 片奶酪</li>\\n\\t<li><strong>小皇堡：</strong>2 片番茄和&nbsp;1 片奶酪</li>\\n</ul>\\n\\n<p>请你以&nbsp;<code>[total_jumbo, total_small]</code>（[巨无霸汉堡总数，小皇堡总数]）的格式返回恰当的制作方案，使得剩下的番茄片&nbsp;<code>tomatoSlices</code>&nbsp;和奶酪片&nbsp;<code>cheeseSlices</code>&nbsp;的数量都是&nbsp;<code>0</code>。</p>\\n\\n<p>如果无法使剩下的番茄片&nbsp;<code>tomatoSlices</code>&nbsp;和奶酪片&nbsp;<code>cheeseSlices</code>&nbsp;的数量为&nbsp;<code>0</code>，就请返回&nbsp;<code>[]</code>。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>tomatoSlices = 16, cheeseSlices = 7\\n<strong>输出：</strong>[1,6]\\n<strong>解释：</strong>制作 1 个巨无霸汉堡和 6 个小皇堡需要 4*1 + 2*6 = 16 片番茄和 1 + 6 = 7 片奶酪。不会剩下原料。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>tomatoSlices = 17, cheeseSlices = 4\\n<strong>输出：</strong>[]\\n<strong>解释：</strong>只制作小皇堡和巨无霸汉堡无法用光全部原料。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>tomatoSlices = 4, cheeseSlices = 17\\n<strong>输出：</strong>[]\\n<strong>解释：</strong>制作 1 个巨无霸汉堡会剩下 16 片奶酪，制作 2 个小皇堡会剩下 15 片奶酪。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>tomatoSlices = 0, cheeseSlices = 0\\n<strong>输出：</strong>[0,0]\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>tomatoSlices = 2, cheeseSlices = 1\\n<strong>输出：</strong>[0,1]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 &lt;= tomatoSlices &lt;= 10^7</code></li>\\n\\t<li><code>0 &lt;= cheeseSlices &lt;= 10^7</code></li>\\n</ul>\\n","title":"1276. 不浪费原料的汉堡制作方案","relatedTags":["数学"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1276","slug":"1276-Number-of-Burgers-with-No-Waste-of-Ingredients"}')}}]);