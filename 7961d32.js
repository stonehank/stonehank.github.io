(window.webpackJsonp=window.webpackJsonp||[]).push([[363],{1161:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">rollMax</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> dieSimulator = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n, rollMax</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> MOD=<span class=\\"hljs-number\\">1e9</span>+<span class=\\"hljs-number\\">7</span>\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">return</span> (c1(n,<span class=\\"hljs-number\\">1</span>)+c2(n,<span class=\\"hljs-number\\">1</span>)+c3(n,<span class=\\"hljs-number\\">1</span>)+c4(n,<span class=\\"hljs-number\\">1</span>)+c5(n,<span class=\\"hljs-number\\">1</span>)+c6(n,<span class=\\"hljs-number\\">1</span>)) % MOD\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">c1</span>(<span class=\\"hljs-params\\">n,exist</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(n===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\'c1\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist])<span class=\\"hljs-keyword\\">return</span> hash[<span class=\\"hljs-string\\">\'c1\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]\\n    <span class=\\"hljs-keyword\\">let</span> rest=(c2(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c3(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c4(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c5(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c6(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)) % MOD\\n    <span class=\\"hljs-keyword\\">if</span>(exist&lt;rollMax[<span class=\\"hljs-number\\">0</span>]){\\n      rest=(rest+c1(n<span class=\\"hljs-number\\">-1</span>,exist+<span class=\\"hljs-number\\">1</span>)) % MOD\\n    }\\n    hash[<span class=\\"hljs-string\\">\'c1\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]=rest\\n    <span class=\\"hljs-keyword\\">return</span> rest\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">c2</span>(<span class=\\"hljs-params\\">n,exist</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(n===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\'c2\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist])<span class=\\"hljs-keyword\\">return</span> hash[<span class=\\"hljs-string\\">\'c2\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]\\n    <span class=\\"hljs-keyword\\">let</span> rest=(c1(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c3(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c4(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c5(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c6(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>))  % MOD\\n    <span class=\\"hljs-keyword\\">if</span>(exist&lt;rollMax[<span class=\\"hljs-number\\">1</span>]){\\n      rest=(rest+c2(n<span class=\\"hljs-number\\">-1</span>,exist+<span class=\\"hljs-number\\">1</span>)) % MOD\\n    }\\n    hash[<span class=\\"hljs-string\\">\'c2\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]=rest\\n    <span class=\\"hljs-keyword\\">return</span> rest\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">c3</span>(<span class=\\"hljs-params\\">n,exist</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(n===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\'c3\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist])<span class=\\"hljs-keyword\\">return</span> hash[<span class=\\"hljs-string\\">\'c3\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]\\n    <span class=\\"hljs-keyword\\">let</span> rest=(c1(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c2(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c4(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c5(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c6(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)) % MOD\\n    <span class=\\"hljs-keyword\\">if</span>(exist&lt;rollMax[<span class=\\"hljs-number\\">2</span>]){\\n      rest=(rest+c3(n<span class=\\"hljs-number\\">-1</span>,exist+<span class=\\"hljs-number\\">1</span>)) % MOD\\n    }\\n    hash[<span class=\\"hljs-string\\">\'c3\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]=rest\\n    <span class=\\"hljs-keyword\\">return</span> rest\\n  }\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">c4</span>(<span class=\\"hljs-params\\">n,exist</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(n===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\'c4\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist])<span class=\\"hljs-keyword\\">return</span> hash[<span class=\\"hljs-string\\">\'c4\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]\\n    <span class=\\"hljs-keyword\\">let</span> rest=(c1(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c3(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c2(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c5(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c6(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>))% MOD\\n    <span class=\\"hljs-keyword\\">if</span>(exist&lt;rollMax[<span class=\\"hljs-number\\">3</span>]){\\n      rest=(rest+c4(n<span class=\\"hljs-number\\">-1</span>,exist+<span class=\\"hljs-number\\">1</span>)) % MOD\\n    }\\n      hash[<span class=\\"hljs-string\\">\'c4\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]=rest\\n    <span class=\\"hljs-keyword\\">return</span> rest\\n  }\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">c5</span>(<span class=\\"hljs-params\\">n,exist</span>)</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(n===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\'c5\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist])<span class=\\"hljs-keyword\\">return</span> hash[<span class=\\"hljs-string\\">\'c5\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]\\n    <span class=\\"hljs-keyword\\">let</span> rest=(c1(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c3(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c4(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c2(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c6(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)) % MOD\\n    <span class=\\"hljs-keyword\\">if</span>(exist&lt;rollMax[<span class=\\"hljs-number\\">4</span>]){\\n      rest=(c5(n<span class=\\"hljs-number\\">-1</span>,exist+<span class=\\"hljs-number\\">1</span>)+rest) % MOD\\n    }\\n      hash[<span class=\\"hljs-string\\">\'c5\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]=rest\\n    <span class=\\"hljs-keyword\\">return</span> rest\\n  }\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">c6</span>(<span class=\\"hljs-params\\">n,exist</span>)</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(n===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\'c6\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist])<span class=\\"hljs-keyword\\">return</span> hash[<span class=\\"hljs-string\\">\'c6\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]\\n    <span class=\\"hljs-keyword\\">let</span> rest=(c1(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c3(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c4(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c5(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)+c2(n<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">1</span>)) % MOD\\n    <span class=\\"hljs-keyword\\">if</span>(exist&lt;rollMax[<span class=\\"hljs-number\\">5</span>]){\\n      rest=(rest+c6(n<span class=\\"hljs-number\\">-1</span>,exist+<span class=\\"hljs-number\\">1</span>)) % MOD\\n    }\\n      hash[<span class=\\"hljs-string\\">\'c6\'</span>+<span class=\\"hljs-string\\">\' \'</span>+n+<span class=\\"hljs-string\\">\' \'</span>+exist]=rest\\n    <span class=\\"hljs-keyword\\">return</span> rest\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"dice-roll-simulation","created_at":"2019-10-13","timeArr":[2019,9,13,11,25,55,0],"hasThinking":false,"content":"<p>有一个骰子模拟器会每次投掷的时候生成一个 1 到 6 的随机数。</p>\\n\\n<p>不过我们在使用它时有个约束，就是使得投掷骰子时，<strong>连续</strong> 掷出数字&nbsp;<code>i</code>&nbsp;的次数不能超过&nbsp;<code>rollMax[i]</code>（<code>i</code>&nbsp;从 1 开始编号）。</p>\\n\\n<p>现在，给你一个整数数组&nbsp;<code>rollMax</code>&nbsp;和一个整数&nbsp;<code>n</code>，请你来计算掷&nbsp;<code>n</code>&nbsp;次骰子可得到的不同点数序列的数量。</p>\\n\\n<p>假如两个序列中至少存在一个元素不同，就认为这两个序列是不同的。由于答案可能很大，所以请返回 <strong>模&nbsp;<code>10^9 + 7</code></strong>&nbsp;之后的结果。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 2, rollMax = [1,1,2,2,2,3]\\n<strong>输出：</strong>34\\n<strong>解释：</strong>我们掷 2 次骰子，如果没有约束的话，共有 6 * 6 = 36 种可能的组合。但是根据 rollMax 数组，数字 1 和 2 最多连续出现一次，所以不会出现序列 (1,1) 和 (2,2)。因此，最终答案是 36-2 = 34。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 2, rollMax = [1,1,1,1,1,1]\\n<strong>输出：</strong>30\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 3, rollMax = [1,1,1,2,2,3]\\n<strong>输出：</strong>181\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= n &lt;= 5000</code></li>\\n\\t<li><code>rollMax.length == 6</code></li>\\n\\t<li><code>1 &lt;= rollMax[i] &lt;= 15</code></li>\\n</ul>\\n","title":"1223. 掷骰子模拟","relatedTags":["数组","动态规划"],"difficult":"Hard","lang":["javascript"],"uniqueID":"1223","slug":"1223-Dice-Roll-Simulation"}')}}]);