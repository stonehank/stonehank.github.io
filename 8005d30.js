(window.webpackJsonp=window.webpackJsonp||[]).push([[1263],{2061:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">S</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">K</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> orderlyQueue = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">S, K</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(K&gt;<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> S.split(<span class=\\"hljs-string\\">\'\'</span>).sort().join(<span class=\\"hljs-string\\">\'\'</span>)\\n  <span class=\\"hljs-keyword\\">let</span> minS=S\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;S.length;i++){\\n    S=S.substring(<span class=\\"hljs-number\\">1</span>)+S[<span class=\\"hljs-number\\">0</span>]\\n    <span class=\\"hljs-keyword\\">if</span>(S&lt;minS)minS=S\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> minS\\n};\\n</code></pre>\\n"],"querySlug":"orderly-queue","created_at":"2019-03-28","timeArr":[2019,2,28,23,7,24,0],"hasThinking":false,"content":"<p>给出了一个由小写字母组成的字符串 <code>S</code>。然后，我们可以进行任意次数的<em>移动</em>。</p>\\n\\n<p>在每次移动中，我们选择前 <code>K</code> 个字母中的一个（从左侧开始），将其从原位置移除，并放置在字符串的末尾。</p>\\n\\n<p>返回我们在任意次数的移动之后可以拥有的按字典顺序排列的最小字符串。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>S = &quot;cba&quot;, K = 1\\n<strong>输出：</strong>&quot;acb&quot;\\n<strong>解释：</strong>\\n在第一步中，我们将第一个字符（&ldquo;c&rdquo;）移动到最后，获得字符串 &ldquo;bac&rdquo;。\\n在第二步中，我们将第一个字符（&ldquo;b&rdquo;）移动到最后，获得最终结果 &ldquo;acb&rdquo;。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>S = &quot;baaca&quot;, K = 3\\n<strong>输出：</strong>&quot;aaabc&quot;\\n<strong>解释：\\n</strong>在第一步中，我们将第一个字符（&ldquo;b&rdquo;）移动到最后，获得字符串 &ldquo;aacab&rdquo;。\\n在第二步中，我们将第三个字符（&ldquo;c&rdquo;）移动到最后，获得最终结果 &ldquo;aaabc&rdquo;。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= K &lt;= S.length&nbsp;&lt;= 1000</code></li>\\n\\t<li><code>S</code>&nbsp;只由小写字母组成。</li>\\n</ol>\\n","title":"899. 有序队列","relatedTags":["数学","字符串","排序"],"difficult":"Hard","lang":["javascript"],"uniqueID":"899","slug":"899-Orderly-Queue"}')}}]);