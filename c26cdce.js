(window.webpackJsonp=window.webpackJsonp||[]).push([[379],{1177:function(o){o.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">products</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">searchWord</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> suggestedProducts = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">products, searchWord</span>) </span>{\\n  products.sort()\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-built_in\\">Array</span>(searchWord.length).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span>[])\\n  <span class=\\"hljs-keyword\\">let</span> lastBegin=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> wordId=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">while</span>(wordId&lt;searchWord.length){\\n    <span class=\\"hljs-keyword\\">let</span> prefix=searchWord.slice(<span class=\\"hljs-number\\">0</span>,wordId+<span class=\\"hljs-number\\">1</span>)\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=lastBegin;i&lt;products.length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> p=products[i]\\n      <span class=\\"hljs-keyword\\">if</span>(p.startsWith(prefix)){\\n        <span class=\\"hljs-keyword\\">if</span>(count===<span class=\\"hljs-number\\">0</span>)lastBegin=i\\n        count++\\n        res[wordId].push(p)\\n      }\\n      <span class=\\"hljs-keyword\\">if</span>(count===<span class=\\"hljs-number\\">3</span>){\\n        <span class=\\"hljs-keyword\\">break</span>\\n      }\\n    }\\n    wordId++\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n\\n};\\n</code></pre>\\n"],"querySlug":"search-suggestions-system","created_at":"2019-11-24","timeArr":[2019,10,24,10,59,56,0],"hasThinking":false,"content":"<p>给你一个产品数组&nbsp;<code>products</code>&nbsp;和一个字符串&nbsp;<code>searchWord</code>&nbsp;，<code>products</code>&nbsp; 数组中每个产品都是一个字符串。</p>\\n\\n<p>请你设计一个推荐系统，在依次输入单词&nbsp;<code>searchWord</code> 的每一个字母后，推荐&nbsp;<code>products</code> 数组中前缀与&nbsp;<code>searchWord</code> 相同的最多三个产品。如果前缀相同的可推荐产品超过三个，请按字典序返回最小的三个。</p>\\n\\n<p>请你以二维列表的形式，返回在输入&nbsp;<code>searchWord</code>&nbsp;每个字母后相应的推荐产品的列表。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>products = [&quot;mobile&quot;,&quot;mouse&quot;,&quot;moneypot&quot;,&quot;monitor&quot;,&quot;mousepad&quot;], searchWord = &quot;mouse&quot;\\n<strong>输出：</strong>[\\n[&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;],\\n[&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;],\\n[&quot;mouse&quot;,&quot;mousepad&quot;],\\n[&quot;mouse&quot;,&quot;mousepad&quot;],\\n[&quot;mouse&quot;,&quot;mousepad&quot;]\\n]\\n<strong>解释：</strong>按字典序排序后的产品列表是 [&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;,&quot;mouse&quot;,&quot;mousepad&quot;]\\n输入 m 和 mo，由于所有产品的前缀都相同，所以系统返回字典序最小的三个产品 [&quot;mobile&quot;,&quot;moneypot&quot;,&quot;monitor&quot;]\\n输入 mou， mous 和 mouse 后系统都返回 [&quot;mouse&quot;,&quot;mousepad&quot;]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>products = [&quot;havana&quot;], searchWord = &quot;havana&quot;\\n<strong>输出：</strong>[[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;],[&quot;havana&quot;]]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>products = [&quot;bags&quot;,&quot;baggage&quot;,&quot;banner&quot;,&quot;box&quot;,&quot;cloths&quot;], searchWord = &quot;bags&quot;\\n<strong>输出：</strong>[[&quot;baggage&quot;,&quot;bags&quot;,&quot;banner&quot;],[&quot;baggage&quot;,&quot;bags&quot;,&quot;banner&quot;],[&quot;baggage&quot;,&quot;bags&quot;],[&quot;bags&quot;]]\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>products = [&quot;havana&quot;], searchWord = &quot;tatiana&quot;\\n<strong>输出：</strong>[[],[],[],[],[],[],[]]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= products.length &lt;= 1000</code></li>\\n\\t<li><code>1 &lt;= &Sigma; products[i].length &lt;= 2 * 10^4</code></li>\\n\\t<li><code>products[i]</code>&nbsp;中所有的字符都是小写英文字母。</li>\\n\\t<li><code>1 &lt;= searchWord.length &lt;= 1000</code></li>\\n\\t<li><code>searchWord</code>&nbsp;中所有字符都是小写英文字母。</li>\\n</ul>\\n","title":"1268. 搜索推荐系统","relatedTags":["字典树","数组","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1268","slug":"1268-Search-Suggestions-System"}')}}]);