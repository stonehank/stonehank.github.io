(window.webpackJsonp=window.webpackJsonp||[]).push([[1102],{1900:function(t){t.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">nextGreatestLetter</span><span class=\\"hljs-params\\">(self, letters, target)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type letters: List[str]\\n        :type target: str\\n        :rtype: str\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-keyword\\">if</span> letters[<span class=\\"hljs-number\\">-1</span>]&lt;=target:<span class=\\"hljs-keyword\\">return</span> letters[<span class=\\"hljs-number\\">0</span>]\\n        <span class=\\"hljs-keyword\\">if</span> letters[<span class=\\"hljs-number\\">0</span>]&gt;target:<span class=\\"hljs-keyword\\">return</span> letters[<span class=\\"hljs-number\\">0</span>]\\n        lo,hi=<span class=\\"hljs-number\\">0</span>,len(letters)<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">while</span> lo&lt;hi:\\n          mid=(lo+hi+<span class=\\"hljs-number\\">1</span>)//<span class=\\"hljs-number\\">2</span>\\n          <span class=\\"hljs-keyword\\">if</span> letters[mid]&lt;=target:\\n            lo=mid\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            hi=mid<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">return</span> letters[hi+<span class=\\"hljs-number\\">1</span>]\\n            \\n</code></pre>\\n"],"querySlug":"find-smallest-letter-greater-than-target","created_at":"2019-02-26","timeArr":[2019,1,26,16,30,44,0],"hasThinking":false,"content":"<p>给你一个排序后的字符列表 <code>letters</code> ，列表中只包含小写英文字母。另给出一个目标字母&nbsp;<code>target</code>，请你寻找在这一有序列表里比目标字母大的最小字母。</p>\\n\\n<p>在比较时，字母是依序循环出现的。举个例子：</p>\\n\\n<ul>\\n\\t<li>如果目标字母 <code>target = &#39;z&#39;</code> 并且字符列表为&nbsp;<code>letters = [&#39;a&#39;, &#39;b&#39;]</code>，则答案返回&nbsp;<code>&#39;a&#39;</code></li>\\n</ul>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre><strong>输入:</strong>\\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\\ntarget = &quot;a&quot;\\n<strong>输出:</strong> &quot;c&quot;\\n\\n<strong>输入:</strong>\\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\\ntarget = &quot;c&quot;\\n<strong>输出:</strong> &quot;f&quot;\\n\\n<strong>输入:</strong>\\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\\ntarget = &quot;d&quot;\\n<strong>输出:</strong> &quot;f&quot;\\n\\n<strong>输入:</strong>\\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\\ntarget = &quot;g&quot;\\n<strong>输出:</strong> &quot;j&quot;\\n\\n<strong>输入:</strong>\\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\\ntarget = &quot;j&quot;\\n<strong>输出:</strong> &quot;c&quot;\\n\\n<strong>输入:</strong>\\nletters = [&quot;c&quot;, &quot;f&quot;, &quot;j&quot;]\\ntarget = &quot;k&quot;\\n<strong>输出:</strong> &quot;c&quot;\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>letters</code>长度范围在<code>[2, 10000]</code>区间内。</li>\\n\\t<li><code>letters</code> 仅由小写字母组成，最少包含两个不同的字母。</li>\\n\\t<li>目标字母<code>target</code> 是一个小写字母。</li>\\n</ol>\\n","title":"744. 寻找比目标字母大的最小字母","relatedTags":["数组","二分查找"],"difficult":"Easy","lang":["python"],"uniqueID":"744","slug":"744-Find-Smallest-Letter-Greater-Than-Target"}')}}]);