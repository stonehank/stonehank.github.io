(window.webpackJsonp=window.webpackJsonp||[]).push([[1066],{1864:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">search</span><span class=\\"hljs-params\\">(self, nums, target)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        :type target: int\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        lo,hi=<span class=\\"hljs-number\\">0</span>,len(nums)<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">while</span> lo&lt;=hi:\\n          mid=(lo+hi)//<span class=\\"hljs-number\\">2</span>\\n          <span class=\\"hljs-keyword\\">if</span> nums[mid]==target:\\n            <span class=\\"hljs-keyword\\">return</span> mid\\n          <span class=\\"hljs-keyword\\">elif</span> nums[mid]&lt;target:\\n            lo=mid+<span class=\\"hljs-number\\">1</span>\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            hi=mid<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n        \\n        \\n</code></pre>\\n"],"querySlug":"binary-search","created_at":"2019-02-26","timeArr":[2019,1,26,16,33,55,0],"hasThinking":false,"content":"<p>给定一个&nbsp;<code>n</code>&nbsp;个元素有序的（升序）整型数组&nbsp;<code>nums</code> 和一个目标值&nbsp;<code>target</code> &nbsp;，写一个函数搜索&nbsp;<code>nums</code>&nbsp;中的 <code>target</code>，如果目标值存在返回下标，否则返回 <code>-1</code>。</p>\\n\\n<p><br>\\n<strong>示例 1:</strong></p>\\n\\n<pre><strong>输入:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 9\\n<strong>输出:</strong> 4\\n<strong>解释:</strong> 9 出现在 <code>nums</code> 中并且下标为 4\\n</pre>\\n\\n<p><strong>示例&nbsp;2:</strong></p>\\n\\n<pre><strong>输入:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 2\\n<strong>输出:</strong> -1\\n<strong>解释:</strong> 2 不存在 <code>nums</code> 中因此返回 -1\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li>你可以假设 <code>nums</code>&nbsp;中的所有元素是不重复的。</li>\\n\\t<li><code>n</code>&nbsp;将在&nbsp;<code>[1, 10000]</code>之间。</li>\\n\\t<li><code>nums</code>&nbsp;的每个元素都将在&nbsp;<code>[-9999, 9999]</code>之间。</li>\\n</ol>\\n","title":"704. 二分查找","relatedTags":["数组","二分查找"],"difficult":"Easy","lang":["python"],"uniqueID":"704","slug":"704-Binary-Search"}')}}]);