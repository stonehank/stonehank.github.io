(window.webpackJsonp=window.webpackJsonp||[]).push([[1167],{1965:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">cpdomains</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> subdomainVisits = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">cpdomains</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;cpdomains.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> arr=cpdomains[i].split(<span class=\\"hljs-string\\">\' \'</span>)\\n    <span class=\\"hljs-keyword\\">let</span> count=+arr[<span class=\\"hljs-number\\">0</span>], str=arr[<span class=\\"hljs-number\\">1</span>], temp=<span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=str.length<span class=\\"hljs-number\\">-1</span>;j&gt;=<span class=\\"hljs-number\\">-1</span>;j--){\\n      <span class=\\"hljs-keyword\\">if</span>(j===<span class=\\"hljs-number\\">-1</span> || str[j]===<span class=\\"hljs-string\\">\'.\'</span>){\\n        <span class=\\"hljs-keyword\\">if</span>(hash[temp]==<span class=\\"hljs-literal\\">null</span>)hash[temp]=count\\n        <span class=\\"hljs-keyword\\">else</span> hash[temp]+=count\\n        <span class=\\"hljs-keyword\\">if</span>(j===<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-keyword\\">break</span>\\n      }\\n      temp=str[j]+temp\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> hash){\\n    res.push(hash[k]+<span class=\\"hljs-string\\">\' \'</span>+k)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"subdomain-visit-count","created_at":"2019-04-07","timeArr":[2019,3,7,22,11,9,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>对每个域名，从顶级域名开始遍历，每次遇到<code>.</code>，将当前域名的访问次数记录到<code>hash</code>，最后再返回<code>hash</code>。</p>\\n","content":"<p>一个网站域名，如&quot;discuss.leetcode.com&quot;，包含了多个子域名。作为顶级域名，常用的有&quot;com&quot;，下一级则有&quot;leetcode.com&quot;，最低的一级为&quot;discuss.leetcode.com&quot;。当我们访问域名&quot;discuss.leetcode.com&quot;时，也同时访问了其父域名&quot;leetcode.com&quot;以及顶级域名&nbsp;&quot;com&quot;。</p>\\n\\n<p>给定一个带访问次数和域名的组合，要求分别计算每个域名被访问的次数。其格式为访问次数+空格+地址，例如：&quot;9001 discuss.leetcode.com&quot;。</p>\\n\\n<p>接下来会给出一组访问次数和域名组合的列表<code>cpdomains</code>&nbsp;。要求解析出所有域名的访问次数，输出格式和输入格式相同，不限定先后顺序。</p>\\n\\n<pre>\\n<strong>示例 1:</strong>\\n<strong>输入:</strong> \\n[&quot;9001 discuss.leetcode.com&quot;]\\n<strong>输出:</strong> \\n[&quot;9001 discuss.leetcode.com&quot;, &quot;9001 leetcode.com&quot;, &quot;9001 com&quot;]\\n<strong>说明:</strong> \\n例子中仅包含一个网站域名：&quot;discuss.leetcode.com&quot;。按照前文假设，子域名&quot;leetcode.com&quot;和&quot;com&quot;都会被访问，所以它们都被访问了9001次。\\n</pre>\\n\\n<pre>\\n<strong>示例 2\\n输入:</strong> \\n[&quot;900 google.mail.com&quot;, &quot;50 yahoo.com&quot;, &quot;1 intel.mail.com&quot;, &quot;5 wiki.org&quot;]\\n<strong>输出:</strong> \\n[&quot;901 mail.com&quot;,&quot;50 yahoo.com&quot;,&quot;900 google.mail.com&quot;,&quot;5 wiki.org&quot;,&quot;5 org&quot;,&quot;1 intel.mail.com&quot;,&quot;951 com&quot;]\\n<strong>说明:</strong> \\n按照假设，会访问&quot;google.mail.com&quot; 900次，&quot;yahoo.com&quot; 50次，&quot;intel.mail.com&quot; 1次，&quot;wiki.org&quot; 5次。\\n而对于父域名，会访问&quot;mail.com&quot; 900+1 = 901次，&quot;com&quot; 900 + 50 + 1 = 951次，和 &quot;org&quot; 5 次。\\n</pre>\\n\\n<p><strong>注意事项：</strong></p>\\n\\n<ul>\\n\\t<li>&nbsp;<code>cpdomains</code>&nbsp;的长度小于&nbsp;<code>100</code>。</li>\\n\\t<li>每个域名的长度小于<code>100</code>。</li>\\n\\t<li>每个域名地址包含一个或两个&quot;.&quot;符号。</li>\\n\\t<li>输入中任意一个域名的访问次数都小于<code>10000</code>。</li>\\n</ul>\\n","title":"811. 子域名访问计数","relatedTags":["数组","哈希表","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"811","slug":"811-Subdomain-Visit-Count"}')}}]);