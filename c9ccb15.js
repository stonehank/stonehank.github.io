(window.webpackJsonp=window.webpackJsonp||[]).push([[1139],{1937:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">kthSmallestPrimeFraction</span><span class=\\"hljs-params\\">(self, A, K)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type A: List[int]\\n        :type K: int\\n        :rtype: List[int]\\n        \\"\\"\\"</span>\\n        N=len(A)\\n        lo,hi=<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>\\n        candidate=<span class=\\"hljs-literal\\">None</span>\\n        <span class=\\"hljs-keyword\\">while</span> <span class=\\"hljs-literal\\">True</span>:\\n          mid=float((lo+hi)/<span class=\\"hljs-number\\">2</span>)\\n          i,j=N<span class=\\"hljs-number\\">-1</span>,N<span class=\\"hljs-number\\">-2</span>\\n          count=<span class=\\"hljs-number\\">0</span>\\n          minGap=float(<span class=\\"hljs-string\\">\'inf\'</span>)\\n          <span class=\\"hljs-keyword\\">while</span> i&gt;=<span class=\\"hljs-number\\">0</span> <span class=\\"hljs-keyword\\">and</span> j&gt;=<span class=\\"hljs-number\\">0</span>:\\n            cur=float(A[j])/float(A[i])\\n            <span class=\\"hljs-comment\\"># print cur,mid,count,minGap</span>\\n            <span class=\\"hljs-keyword\\">if</span> cur&lt;=mid:\\n              <span class=\\"hljs-keyword\\">if</span> abs(cur-mid)&lt;minGap:\\n                minGap=abs(cur-mid)\\n                candidate=[A[j],A[i]]\\n              count+=j+<span class=\\"hljs-number\\">1</span>\\n              i-=<span class=\\"hljs-number\\">1</span>\\n              <span class=\\"hljs-keyword\\">if</span> i==j:\\n                j-=<span class=\\"hljs-number\\">1</span>\\n            <span class=\\"hljs-keyword\\">else</span>:\\n              j-=<span class=\\"hljs-number\\">1</span>\\n          <span class=\\"hljs-comment\\"># print mid,count,\'---\'</span>\\n          <span class=\\"hljs-keyword\\">if</span> count&lt;K:\\n            lo=mid\\n          <span class=\\"hljs-keyword\\">elif</span> count&gt;K:\\n            hi=mid\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            <span class=\\"hljs-keyword\\">return</span> candidate\\n          \\n          \\n</code></pre>\\n"],"querySlug":"k-th-smallest-prime-fraction","created_at":"2019-02-26","timeArr":[2019,1,26,19,22,20,0],"hasThinking":false,"content":"<p>给你一个按递增顺序排序的数组 <code>arr</code> 和一个整数 <code>k</code> 。数组 <code>arr</code> 由 <code>1</code> 和若干 <strong>素数</strong>  组成，且其中所有整数互不相同。</p>\\n\\n<p>对于每对满足 <code>0 < i < j < arr.length</code> 的 <code>i</code> 和 <code>j</code> ，可以得到分数 <code>arr[i] / arr[j]</code> 。</p>\\n\\n<p>那么第 <code>k</code> 个最小的分数是多少呢?  以长度为 2 的整数数组返回你的答案, 这里 <code>answer[0] == arr[i]</code> 且 <code>answer[1] == arr[j]</code> 。</p>\\n \\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [1,2,3,5], k = 3\\n<strong>输出：</strong>[2,5]\\n<strong>解释：</strong>已构造好的分数,排序后如下所示: \\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3\\n很明显第三个最小的分数是 2/5\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [1,7], k = 1\\n<strong>输出：</strong>[1,7]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 <= arr.length <= 1000</code></li>\\n\\t<li><code>1 <= arr[i] <= 3 * 10<sup>4</sup></code></li>\\n\\t<li><code>arr[0] == 1</code></li>\\n\\t<li><code>arr[i]</code> 是一个 <strong>素数</strong> ，<code>i > 0</code></li>\\n\\t<li><code>arr</code> 中的所有数字 <strong>互不相同</strong> ，且按 <strong>严格递增</strong> 排序</li>\\n\\t<li><code>1 <= k <= arr.length * (arr.length - 1) / 2</code></li>\\n</ul>\\n","title":"786. 第 K 个最小的素数分数","relatedTags":["数组","二分查找","堆（优先队列）"],"difficult":"Hard","lang":["python"],"uniqueID":"786","slug":"786-K-th-Smallest-Prime-Fraction"}')}}]);