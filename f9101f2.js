(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{1024:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> prefixesDivBy5 = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> last=<span class=\\"hljs-number\\">0</span>,res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> num=last*<span class=\\"hljs-number\\">2</span>+A[i]\\n    res.push(num % <span class=\\"hljs-number\\">5</span>===<span class=\\"hljs-number\\">0</span>)\\n    last=num % <span class=\\"hljs-number\\">5</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n","<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">prefixesDivBy5</span><span class=\\"hljs-params\\">(self, A)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type A: List[int]\\n        :rtype: List[bool]\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">bin2Num</span><span class=\\"hljs-params\\">(s)</span>:</span>\\n          n=len(s)\\n          res=<span class=\\"hljs-number\\">0</span>\\n          <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(n):\\n            res+=int(s[i])*(<span class=\\"hljs-number\\">2</span>**(n<span class=\\"hljs-number\\">-1</span>-i))\\n          <span class=\\"hljs-keyword\\">return</span> res\\n        \\n        res=[]\\n        last=<span class=\\"hljs-string\\">\'\'</span>\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(len(A)):\\n          last+=str(A[i])\\n          <span class=\\"hljs-keyword\\">if</span> res <span class=\\"hljs-keyword\\">and</span> res[<span class=\\"hljs-number\\">-1</span>]:\\n            <span class=\\"hljs-keyword\\">if</span> A[i]==<span class=\\"hljs-number\\">1</span>:\\n              res.append(<span class=\\"hljs-literal\\">False</span>)\\n            <span class=\\"hljs-keyword\\">else</span>:\\n              res.append(<span class=\\"hljs-literal\\">True</span>)\\n            <span class=\\"hljs-keyword\\">continue</span>\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            <span class=\\"hljs-keyword\\">if</span> A[i]==<span class=\\"hljs-number\\">0</span>:\\n              res.append(<span class=\\"hljs-literal\\">False</span>)\\n            <span class=\\"hljs-keyword\\">else</span>:\\n              num=bin2Num(last)\\n              res.append(num % <span class=\\"hljs-number\\">5</span>==<span class=\\"hljs-number\\">0</span>)\\n        <span class=\\"hljs-keyword\\">return</span> res\\n</code></pre>\\n"],"querySlug":"binary-prefix-divisible-by-5","hasThinking":false,"content":"<p>给定由若干&nbsp;<code>0</code>&nbsp;和&nbsp;<code>1</code>&nbsp;组成的数组 <code>A</code>。我们定义&nbsp;<code>N_i</code>：从&nbsp;<code>A[0]</code> 到&nbsp;<code>A[i]</code>&nbsp;的第 <code>i</code>&nbsp;个子数组被解释为一个二进制数（从最高有效位到最低有效位）。</p>\\n\\n<p>返回布尔值列表&nbsp;<code>answer</code>，只有当&nbsp;<code>N_i</code>&nbsp;可以被 <code>5</code>&nbsp;整除时，答案&nbsp;<code>answer[i]</code> 为&nbsp;<code>true</code>，否则为 <code>false</code>。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[0,1,1]\\n<strong>输出：</strong>[true,false,false]\\n<strong>解释：</strong>\\n输入数字为 0, 01, 011；也就是十进制中的 0, 1, 3 。只有第一个数可以被 5 整除，因此 answer[0] 为真。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,1,1]\\n<strong>输出：</strong>[false,false,false]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>[0,1,1,1,1,1]\\n<strong>输出：</strong>[true,false,false,false,true,false]\\n</pre>\\n\\n<p><strong>示例&nbsp;4：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,1,1,0,1]\\n<strong>输出：</strong>[false,false,false,false,false]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\\n\\t<li><code>A[i]</code> 为&nbsp;<code>0</code>&nbsp;或&nbsp;<code>1</code></li>\\n</ol>\\n","title":"1018. 可被 5 整除的二进制前缀","relatedTags":["数组"],"difficult":"Easy","lang":["javascript","python"],"uniqueID":"1018","slug":"1018-Binary-Prefix-Divisible-By-5"}')}}]);