(window.webpackJsonp=window.webpackJsonp||[]).push([[262],{1060:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">customers</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">grumpy</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">X</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxSatisfied = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">customers, grumpy, X</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> curSum=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=X;i&lt;customers.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(grumpy[i]===<span class=\\"hljs-number\\">0</span>)curSum+=customers[i]\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> ws=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;X;i++){\\n    ws+=customers[i]\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> init=curSum+ws,\\n      cur=init,\\n      max=init\\n  <span class=\\"hljs-comment\\">// console.log(cur,max)</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=X;i&lt;customers.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(grumpy[i-X]===<span class=\\"hljs-number\\">1</span>){\\n      cur-=customers[i-X]\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(grumpy[i]===<span class=\\"hljs-number\\">1</span>){\\n      cur+=customers[i]\\n    }\\n    <span class=\\"hljs-built_in\\">console</span>.log(max,i)\\n    max=<span class=\\"hljs-built_in\\">Math</span>.max(max,cur)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> max\\n  \\n};\\n</code></pre>\\n"],"querySlug":"grumpy-bookstore-owner","created_at":"2019-05-26","timeArr":[2019,4,26,10,45,16,0],"hasThinking":false,"content":"<p>今天，书店老板有一家店打算试营业 <code>customers.length</code> 分钟。每分钟都有一些顾客（<code>customers[i]</code>）会进入书店，所有这些顾客都会在那一分钟结束后离开。</p>\\n\\n<p>在某些时候，书店老板会生气。 如果书店老板在第 <code>i</code> 分钟生气，那么 <code>grumpy[i] = 1</code>，否则 <code>grumpy[i] = 0</code>。 当书店老板生气时，那一分钟的顾客就会不满意，不生气则他们是满意的。</p>\\n\\n<p>书店老板知道一个秘密技巧，能抑制自己的情绪，可以让自己连续 <code>X</code> 分钟不生气，但却只能使用一次。</p>\\n\\n<p>请你返回这一天营业下来，最多有多少客户能够感到满意。<br />\\n </p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], X = 3\\n<strong>输出：</strong>16\\n<strong>解释：\\n</strong>书店老板在最后 3 分钟保持冷静。\\n感到满意的最大客户数量 = 1 + 1 + 1 + 1 + 7 + 5 = 16.\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= X <= customers.length == grumpy.length <= 20000</code></li>\\n\\t<li><code>0 <= customers[i] <= 1000</code></li>\\n\\t<li><code>0 <= grumpy[i] <= 1</code></li>\\n</ul>\\n","title":"1052. 爱生气的书店老板","relatedTags":["数组","滑动窗口"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1052","slug":"1052-Grumpy-Bookstore-Owner"}')}}]);