(window.webpackJsonp=window.webpackJsonp||[]).push([[1153],{1951:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">poured</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">query_row</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">query_glass</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> champagneTower = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">poured, query_row, query_glass</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> tower=<span class=\\"hljs-built_in\\">Array</span>(<span class=\\"hljs-number\\">100</span>).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span>[])\\n  tower[<span class=\\"hljs-number\\">0</span>][<span class=\\"hljs-number\\">0</span>]=poured\\n  <span class=\\"hljs-keyword\\">let</span> res= <span class=\\"hljs-built_in\\">Math</span>.min(<span class=\\"hljs-number\\">1</span>,calc(query_row, query_glass))\\n  <span class=\\"hljs-comment\\">// console.log(tower)</span>\\n  <span class=\\"hljs-keyword\\">return</span> res\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">calc</span>(<span class=\\"hljs-params\\">x,y</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(tower[x][y]!=<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> tower[x][y]\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(y===x){\\n      res=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,(calc(x<span class=\\"hljs-number\\">-1</span>,y<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-number\\">-1</span>)*<span class=\\"hljs-number\\">0.5</span>)\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(y===<span class=\\"hljs-number\\">0</span>){\\n      res=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,(calc(x<span class=\\"hljs-number\\">-1</span>,y)<span class=\\"hljs-number\\">-1</span>)*<span class=\\"hljs-number\\">0.5</span>)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      res=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,(calc(x<span class=\\"hljs-number\\">-1</span>,y<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-number\\">-1</span>)*<span class=\\"hljs-number\\">0.5</span>)+<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,(calc(x<span class=\\"hljs-number\\">-1</span>,y)<span class=\\"hljs-number\\">-1</span>)*<span class=\\"hljs-number\\">0.5</span>)\\n    }\\n    tower[x][y]=res\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n  \\n};\\n</code></pre>\\n"],"querySlug":"champagne-tower","created_at":"2019-04-25","timeArr":[2019,3,25,22,22,8,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>既可以<code>Top Down</code>，也可以<code>Button Up</code>。</p>\\n<p>关键就是对于某一杯容量为<code>x</code>的香槟，它的底下左右两杯，分别都为<code>(x-1)*0.5</code>，根据这个不断遍历即可，最多100层。</p>\\n<p>例如，<code>poured===100</code>，说明第一杯承载了<code>100</code>杯，那么底下的两杯则为<code>(100-1)*0.5</code>，即<code>49.5</code>杯...当然，输出结果时，如果<code>&gt;1</code>，则返回<code>1</code>。</p>\\n","content":"<p>我们把玻璃杯摆成金字塔的形状，其中第一层有1个玻璃杯，第二层有2个，依次类推到第100层，每个玻璃杯(250ml)将盛有香槟。</p>\\n\\n<p>从顶层的第一个玻璃杯开始倾倒一些香槟，当顶层的杯子满了，任何溢出的香槟都会立刻等流量的流向左右两侧的玻璃杯。当左右两边的杯子也满了，就会等流量的流向它们左右两边的杯子，依次类推。（当最底层的玻璃杯满了，香槟会流到地板上）</p>\\n\\n<p>例如，在倾倒一杯香槟后，最顶层的玻璃杯满了。倾倒了两杯香槟后，第二层的两个玻璃杯各自盛放一半的香槟。在倒三杯香槟后，第二层的香槟满了 - 此时总共有三个满的玻璃杯。在倒第四杯后，第三层中间的玻璃杯盛放了一半的香槟，他两边的玻璃杯各自盛放了四分之一的香槟，如下图所示。</p>\\n\\n<p><img alt=\\"\\" src=\\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/03/09/tower.png\\" style=\\"height:200px; width:290px\\" /></p>\\n\\n<p>现在当倾倒了非负整数杯香槟后，返回第 i 行 j 个玻璃杯所盛放的香槟占玻璃杯容积的比例（i 和 j都从0开始）。</p>\\n\\n<p>&nbsp;</p>\\n\\n<pre>\\n<strong>示例 1:</strong>\\n<strong>输入:</strong> poured(倾倒香槟总杯数) = 1, query_glass(杯子的位置数) = 1, query_row(行数) = 1\\n<strong>输出:</strong> 0.0\\n<strong>解释:</strong> 我们在顶层（下标是（0，0））倒了一杯香槟后，没有溢出，因此所有在顶层以下的玻璃杯都是空的。\\n\\n<strong>示例 2:</strong>\\n<strong>输入:</strong> poured(倾倒香槟总杯数) = 2, query_glass(杯子的位置数) = 1, query_row(行数) = 1\\n<strong>输出:</strong> 0.5\\n<strong>解释:</strong> 我们在顶层（下标是（0，0）倒了两杯香槟后，有一杯量的香槟将从顶层溢出，位于（1，0）的玻璃杯和（1，1）的玻璃杯平分了这一杯香槟，所以每个玻璃杯有一半的香槟。\\n</pre>\\n\\n<p><strong>注意:</strong></p>\\n\\n<ul>\\n\\t<li><code>poured</code>&nbsp;的范围<code>[0, 10 ^ 9]</code>。</li>\\n\\t<li><code>query_glass</code>&nbsp;和<code>query_row</code>&nbsp;的范围&nbsp;<code>[0, 99]</code>。</li>\\n</ul>\\n","title":"799. 香槟塔","relatedTags":["动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"799","slug":"799-Champagne-Tower"}')}}]);