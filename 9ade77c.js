(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{1118:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">date</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> ordinalOfDate = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">date</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> dateA=date.split(<span class=\\"hljs-string\\">\'-\'</span>)\\n  <span class=\\"hljs-keyword\\">let</span> y=+dateA[<span class=\\"hljs-number\\">0</span>]\\n  <span class=\\"hljs-keyword\\">let</span> m=+dateA[<span class=\\"hljs-number\\">1</span>]\\n  <span class=\\"hljs-keyword\\">let</span> d=+dateA[<span class=\\"hljs-number\\">2</span>]\\n  <span class=\\"hljs-keyword\\">let</span> flag=y % <span class=\\"hljs-number\\">100</span>===<span class=\\"hljs-number\\">0</span> ? y%<span class=\\"hljs-number\\">400</span>===<span class=\\"hljs-number\\">0</span> ? <span class=\\"hljs-literal\\">true</span> : <span class=\\"hljs-literal\\">false</span> : y%<span class=\\"hljs-number\\">4</span>===<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> days=[<span class=\\"hljs-number\\">31</span>,<span class=\\"hljs-number\\">28</span>,<span class=\\"hljs-number\\">31</span>,<span class=\\"hljs-number\\">30</span>,<span class=\\"hljs-number\\">31</span>,<span class=\\"hljs-number\\">30</span>,<span class=\\"hljs-number\\">31</span>,<span class=\\"hljs-number\\">31</span>,<span class=\\"hljs-number\\">30</span>,<span class=\\"hljs-number\\">31</span>,<span class=\\"hljs-number\\">30</span>,<span class=\\"hljs-number\\">31</span>]\\n  <span class=\\"hljs-keyword\\">if</span>(flag)days[<span class=\\"hljs-number\\">1</span>]=<span class=\\"hljs-number\\">29</span>\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m<span class=\\"hljs-number\\">-1</span>;i++){\\n    res+=days[i]\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res+d\\n};\\n</code></pre>\\n"],"querySlug":"day-of-the-year","created_at":"2019-08-11","timeArr":[2019,7,11,10,34,14,0],"hasThinking":false,"content":"<p>给你一个按 <code>YYYY-MM-DD</code> 格式表示日期的字符串&nbsp;<code>date</code>，请你计算并返回该日期是当年的第几天。</p>\\n\\n<p>通常情况下，我们认为 1 月 1 日是每年的第 1 天，1 月 2 日是每年的第 2 天，依此类推。每个月的天数与现行公元纪年法（格里高利历）一致。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>date = &quot;2019-01-09&quot;\\n<strong>输出：</strong>9\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>date = &quot;2019-02-10&quot;\\n<strong>输出：</strong>41\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>date = &quot;2003-03-01&quot;\\n<strong>输出：</strong>60\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>date = &quot;2004-03-01&quot;\\n<strong>输出：</strong>61</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>date.length == 10</code></li>\\n\\t<li><code>date[4] == date[7] == &#39;-&#39;</code>，其他的&nbsp;<code>date[i]</code>&nbsp;都是数字。</li>\\n\\t<li><code>date</code> 表示的范围从 1900 年 1 月 1 日至 2019 年 12 月 31 日。</li>\\n</ul>\\n","title":"1154. 一年中的第几天","relatedTags":["数学","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1154","slug":"1154-Day-of-the-Year"}')}}]);