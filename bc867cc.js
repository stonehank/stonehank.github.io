(window.webpackJsonp=window.webpackJsonp||[]).push([[441],{1239:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numberOfSubstrings = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> aIdx=<span class=\\"hljs-number\\">0</span>,bIdx=<span class=\\"hljs-number\\">0</span>,cIdx=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> aIdxArr=[]\\n  <span class=\\"hljs-keyword\\">let</span> bIdxArr=[]\\n  <span class=\\"hljs-keyword\\">let</span> cIdxArr=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\'a\'</span>)aIdxArr.push(i)\\n    <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\'b\'</span>)bIdxArr.push(i)\\n    <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\'c\'</span>)cIdxArr.push(i)\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">while</span>(aIdx&lt;aIdxArr.length &amp;&amp; bIdx&lt;bIdxArr.length &amp;&amp; cIdx&lt;cIdxArr.length){\\n    <span class=\\"hljs-keyword\\">let</span> posA=aIdxArr[aIdx]\\n    <span class=\\"hljs-keyword\\">let</span> posB=bIdxArr[bIdx]\\n    <span class=\\"hljs-keyword\\">let</span> posC=cIdxArr[cIdx]\\n    res+=s.length - <span class=\\"hljs-built_in\\">Math</span>.max(posA,posB,posC)\\n    <span class=\\"hljs-comment\\">// console.log(res,posA,posB,posC)</span>\\n    <span class=\\"hljs-keyword\\">let</span> minS=<span class=\\"hljs-literal\\">null</span>\\n    <span class=\\"hljs-keyword\\">let</span> min=<span class=\\"hljs-built_in\\">Math</span>.min(posA,posB,posC)\\n    <span class=\\"hljs-keyword\\">if</span>(min===posA)aIdx++\\n    <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(min===posB)bIdx++\\n    <span class=\\"hljs-keyword\\">else</span> cIdx++\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"number-of-substrings-containing-all-three-characters","created_at":"2020-02-28","timeArr":[2020,1,28,15,25,59,0],"hasThinking":false,"content":"<p>给你一个字符串 <code>s</code>&nbsp;，它只包含三种字符 a, b 和 c 。</p>\\n\\n<p>请你返回 a，b 和 c 都&nbsp;<strong>至少&nbsp;</strong>出现过一次的子字符串数目。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;abcabc&quot;\\n<strong>输出：</strong>10\\n<strong>解释：</strong>包含 a，b 和 c 各至少一次的子字符串为<em> &quot;</em>abc<em>&quot;, &quot;</em>abca<em>&quot;, &quot;</em>abcab<em>&quot;, &quot;</em>abcabc<em>&quot;, &quot;</em>bca<em>&quot;, &quot;</em>bcab<em>&quot;, &quot;</em>bcabc<em>&quot;, &quot;</em>cab<em>&quot;, &quot;</em>cabc<em>&quot; </em>和<em> &quot;</em>abc<em>&quot; </em>(<strong>相同</strong><strong>字符串算多次</strong>)<em>。</em>\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;aaacb&quot;\\n<strong>输出：</strong>3\\n<strong>解释：</strong>包含 a，b 和 c 各至少一次的子字符串为<em> &quot;</em>aaacb<em>&quot;, &quot;</em>aacb<em>&quot; </em>和<em> &quot;</em>acb<em>&quot; 。</em>\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;abc&quot;\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>3 &lt;= s.length &lt;= 5 x 10^4</code></li>\\n\\t<li><code>s</code>&nbsp;只包含字符 a，b 和 c 。</li>\\n</ul>\\n","title":"1358. 包含所有三种字符的子字符串数目","relatedTags":["哈希表","字符串","滑动窗口"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1358","slug":"1358-Number-of-Substrings-Containing-All-Three-Characters"}')}}]);