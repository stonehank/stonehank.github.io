(window.webpackJsonp=window.webpackJsonp||[]).push([[1319],{2117:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> largestTimeFromDigits = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> visited=<span class=\\"hljs-built_in\\">Array</span>(A.length).fill(<span class=\\"hljs-literal\\">false</span>)\\n  A.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>b-a)\\n  <span class=\\"hljs-keyword\\">let</span> maxTime=<span class=\\"hljs-literal\\">null</span>\\n  dfs(<span class=\\"hljs-string\\">\'\'</span>,<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-keyword\\">if</span>(maxTime==<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\\"\\"</span>\\n  <span class=\\"hljs-keyword\\">return</span> maxTime.substring(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">2</span>)+<span class=\\"hljs-string\\">\\":\\"</span>+maxTime.substring(<span class=\\"hljs-number\\">2</span>)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">str,id</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(maxTime!=<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span>(str.length===<span class=\\"hljs-number\\">4</span>)<span class=\\"hljs-keyword\\">return</span> maxTime=str\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(visited[i])<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(id===<span class=\\"hljs-number\\">0</span> &amp;&amp; A[i]&gt;=<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(id===<span class=\\"hljs-number\\">1</span> &amp;&amp; str[<span class=\\"hljs-number\\">0</span>]===<span class=\\"hljs-string\\">\\"2\\"</span> &amp;&amp; A[i]&gt;=<span class=\\"hljs-number\\">4</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(id===<span class=\\"hljs-number\\">2</span> &amp;&amp; A[i]&gt;=<span class=\\"hljs-number\\">6</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      visited[i]=<span class=\\"hljs-literal\\">true</span>\\n      dfs(str+A[i],id+<span class=\\"hljs-number\\">1</span>)\\n      visited[i]=<span class=\\"hljs-literal\\">false</span>\\n    }\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"largest-time-for-given-digits","created_at":"2019-04-03","timeArr":[2019,3,3,22,40,44,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>使用<code>回溯法</code>，几个规则：</p>\\n<ol>\\n<li>第一个数字，不能<code>&gt;2</code></li>\\n<li>第二个数字，如果第一个数字是<code>2</code>，则不能大于<code>3</code></li>\\n<li>第三个数字，不能<code>&gt;5</code></li>\\n</ol>\\n","content":"<p>给定一个由 4 位数字组成的数组，返回可以设置的符合 24 小时制的最大时间。</p>\\n\\n<p>24 小时格式为 <code>\\"HH:MM\\"</code> ，其中 <code>HH</code> 在 <code>00</code> 到 <code>23</code> 之间，<code>MM</code> 在 <code>00</code> 到 <code>59</code> 之间。最小的 24 小时制时间是 <code>00:00</code> ，而最大的是 <code>23:59</code> 。从 00:00 （午夜）开始算起，过得越久，时间越大。</p>\\n\\n<p>以长度为 5 的字符串，按 <code>\\"HH:MM\\"</code> 格式返回答案。如果不能确定有效时间，则返回空字符串。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [1,2,3,4]\\n<strong>输出：</strong>\\"23:41\\"\\n<strong>解释：</strong>有效的 24 小时制时间是 \\"12:34\\"，\\"12:43\\"，\\"13:24\\"，\\"13:42\\"，\\"14:23\\"，\\"14:32\\"，\\"21:34\\"，\\"21:43\\"，\\"23:14\\" 和 \\"23:41\\" 。这些时间中，\\"23:41\\" 是最大时间。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [5,5,5,5]\\n<strong>输出：</strong>\\"\\"\\n<strong>解释：</strong>不存在有效的 24 小时制时间，因为 \\"55:55\\" 无效。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,0,0,0]\\n<strong>输出：</strong>\\"00:00\\"\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,0,1,0]\\n<strong>输出：</strong>\\"10:00\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>arr.length == 4</code></li>\\n\\t<li><code>0 <= arr[i] <= 9</code></li>\\n</ul>\\n","title":"949. 给定数字能组成的最大时间","relatedTags":["字符串","枚举"],"difficult":"Middle","lang":["javascript"],"uniqueID":"949","slug":"949-Largest-Time-for-Given-Digits"}')}}]);