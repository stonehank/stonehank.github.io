(window.webpackJsonp=window.webpackJsonp||[]).push([[454],{1252:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">headID</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">manager</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">informTime</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numOfMinutes = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n, headID, manager, informTime</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> getSub={}\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">getMaxTime</span>(<span class=\\"hljs-params\\">list</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> time=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;list.length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> t=informTime[list[i]]\\n      time=<span class=\\"hljs-built_in\\">Math</span>.max(time,t)\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> time\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> time=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;manager.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> bos=manager[i]\\n    <span class=\\"hljs-keyword\\">if</span>(bos===<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-keyword\\">continue</span>\\n    <span class=\\"hljs-keyword\\">let</span> sub=i\\n    <span class=\\"hljs-keyword\\">if</span>(getSub[bos]==<span class=\\"hljs-literal\\">null</span>){\\n      getSub[bos]=[]\\n    }\\n    getSub[bos].push(i)\\n  }\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">idx</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> subList=getSub[idx]\\n    <span class=\\"hljs-keyword\\">if</span>(subList==<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> time=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;subList.length;i++){\\n      time=<span class=\\"hljs-built_in\\">Math</span>.max(time,dfs(subList[i]))\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> time+informTime[idx]\\n  }\\n  \\n  <span class=\\"hljs-keyword\\">return</span> dfs([headID])\\n};\\n</code></pre>\\n"],"querySlug":"time-needed-to-inform-all-employees","created_at":"2020-03-08","timeArr":[2020,2,8,11,17,35,0],"hasThinking":false,"content":"<p>公司里有 <code>n</code> 名员工，每个员工的 ID 都是独一无二的，编号从 <code>0</code> 到 <code>n - 1</code>。公司的总负责人通过 <code>headID</code> 进行标识。</p>\\n\\n<p>在 <code>manager</code> 数组中，每个员工都有一个直属负责人，其中 <code>manager[i]</code> 是第 <code>i</code> 名员工的直属负责人。对于总负责人，<code>manager[headID] = -1</code>。题目保证从属关系可以用树结构显示。</p>\\n\\n<p>公司总负责人想要向公司所有员工通告一条紧急消息。他将会首先通知他的直属下属们，然后由这些下属通知他们的下属，直到所有的员工都得知这条紧急消息。</p>\\n\\n<p>第 <code>i</code> 名员工需要 <code>informTime[i]</code> 分钟来通知它的所有直属下属（也就是说在 <code>informTime[i]</code> 分钟后，他的所有直属下属都可以开始传播这一消息）。</p>\\n\\n<p>返回通知所有员工这一紧急消息所需要的 <strong>分钟数</strong> 。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 1, headID = 0, manager = [-1], informTime = [0]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>公司总负责人是该公司的唯一一名员工。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/03/08/graph.png\\" style=\\"height: 174px; width: 404px;\\"></p>\\n\\n<pre><strong>输入：</strong>n = 6, headID = 2, manager = [2,2,-1,2,2,2], informTime = [0,0,1,0,0,0]\\n<strong>输出：</strong>1\\n<strong>解释：</strong>id = 2 的员工是公司的总负责人，也是其他所有员工的直属负责人，他需要 1 分钟来通知所有员工。\\n上图显示了公司员工的树结构。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/03/08/1730_example_3_5.PNG\\" style=\\"height: 432px; width: 568px;\\"></p>\\n\\n<pre><strong>输入：</strong>n = 7, headID = 6, manager = [1,2,3,4,5,6,-1], informTime = [0,6,5,4,3,2,1]\\n<strong>输出：</strong>21\\n<strong>解释：</strong>总负责人 id = 6。他将在 1 分钟内通知 id = 5 的员工。\\nid = 5 的员工将在 2 分钟内通知 id = 4 的员工。\\nid = 4 的员工将在 3 分钟内通知 id = 3 的员工。\\nid = 3 的员工将在 4 分钟内通知 id = 2 的员工。\\nid = 2 的员工将在 5 分钟内通知 id = 1 的员工。\\nid = 1 的员工将在 6 分钟内通知 id = 0 的员工。\\n所需时间 = 1 + 2 + 3 + 4 + 5 + 6 = 21 。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 15, headID = 0, manager = [-1,0,0,1,1,2,2,3,3,4,4,5,5,6,6], informTime = [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>第一分钟总负责人通知员工 1 和 2 。\\n第二分钟他们将会通知员工 3, 4, 5 和 6 。\\n第三分钟他们将会通知剩下的员工。\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 4, headID = 2, manager = [3,3,-1,2], informTime = [0,0,162,914]\\n<strong>输出：</strong>1076\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\\n\\t<li><code>0 &lt;= headID &lt; n</code></li>\\n\\t<li><code>manager.length == n</code></li>\\n\\t<li><code>0 &lt;= manager[i] &lt; n</code></li>\\n\\t<li><code>manager[headID] == -1</code></li>\\n\\t<li><code>informTime.length&nbsp;== n</code></li>\\n\\t<li><code>0 &lt;= informTime[i] &lt;= 1000</code></li>\\n\\t<li>如果员工 <code>i</code> 没有下属，<code>informTime[i] == 0</code> 。</li>\\n\\t<li>题目 <strong>保证</strong> 所有员工都可以收到通知。</li>\\n</ul>\\n","title":"1376. 通知所有员工所需的时间","relatedTags":["树","深度优先搜索","广度优先搜索"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1376","slug":"1376-Time-Needed-to-Inform-All-Employees"}')}}]);