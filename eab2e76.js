(window.webpackJsonp=window.webpackJsonp||[]).push([[404],{1202:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">arr</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">start</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> canReach = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">arr, start</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(!arr.includes(<span class=\\"hljs-number\\">0</span>))<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">let</span> limit=arr.length\\n  <span class=\\"hljs-keyword\\">let</span> aux=[start]\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  hash[start]=<span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">while</span>(aux.length&gt;<span class=\\"hljs-number\\">0</span>){\\n    <span class=\\"hljs-comment\\">// console.log(aux)</span>\\n    <span class=\\"hljs-keyword\\">let</span> len=aux.length\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len;i++){\\n      <span class=\\"hljs-keyword\\">let</span> idx=aux.shift()\\n      <span class=\\"hljs-keyword\\">let</span> step=arr[idx]\\n      <span class=\\"hljs-keyword\\">if</span>(step===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">if</span>(!hash[idx+step] &amp;&amp; idx+step&lt;limit){\\n        aux.push(idx+step)\\n        hash[idx+step]=<span class=\\"hljs-literal\\">true</span>\\n      }\\n      <span class=\\"hljs-keyword\\">if</span>(!hash[idx-step] &amp;&amp; idx-step&gt;=<span class=\\"hljs-number\\">0</span>){\\n        aux.push(idx-step)\\n        hash[idx-step]=<span class=\\"hljs-literal\\">true</span>\\n      }\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n};\\n</code></pre>\\n"],"querySlug":"jump-game-iii","created_at":"2019-12-29","timeArr":[2019,11,29,10,48,44,0],"hasThinking":false,"content":"<p>这里有一个非负整数数组&nbsp;<code>arr</code>，你最开始位于该数组的起始下标&nbsp;<code>start</code>&nbsp;处。当你位于下标&nbsp;<code>i</code>&nbsp;处时，你可以跳到&nbsp;<code>i + arr[i]</code> 或者 <code>i - arr[i]</code>。</p>\\n\\n<p>请你判断自己是否能够跳到对应元素值为 0 的 <strong>任一</strong> 下标处。</p>\\n\\n<p>注意，不管是什么情况下，你都无法跳到数组之外。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [4,2,3,0,3,1,2], start = 5\\n<strong>输出：</strong>true\\n<strong>解释：</strong>\\n到达值为 0 的下标 3 有以下可能方案： \\n下标 5 -&gt; 下标 4 -&gt; 下标 1 -&gt; 下标 3 \\n下标 5 -&gt; 下标 6 -&gt; 下标 4 -&gt; 下标 1 -&gt; 下标 3 \\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [4,2,3,0,3,1,2], start = 0\\n<strong>输出：</strong>true \\n<strong>解释：\\n</strong>到达值为 0 的下标 3 有以下可能方案： \\n下标 0 -&gt; 下标 4 -&gt; 下标 1 -&gt; 下标 3\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [3,0,2,1,2], start = 2\\n<strong>输出：</strong>false\\n<strong>解释：</strong>无法到达值为 0 的下标 1 处。 \\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= arr.length &lt;= 5 * 10^4</code></li>\\n\\t<li><code>0 &lt;= arr[i] &lt;&nbsp;arr.length</code></li>\\n\\t<li><code>0 &lt;= start &lt; arr.length</code></li>\\n</ul>\\n","title":"1306. 跳跃游戏 III","relatedTags":["深度优先搜索","广度优先搜索","数组"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1306","slug":"1306-Jump-Game-III"}')}}]);