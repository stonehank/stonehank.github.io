(window.webpackJsonp=window.webpackJsonp||[]).push([[1357],{2155:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">days</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">costs</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> mincostTickets = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">days, costs</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> dp=<span class=\\"hljs-built_in\\">Array</span>(days.length+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">0</span>)\\n    dp[<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;dp.length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> cost1=costs[<span class=\\"hljs-number\\">0</span>]+dp[i<span class=\\"hljs-number\\">-1</span>]\\n      <span class=\\"hljs-keyword\\">let</span> curday=days[i<span class=\\"hljs-number\\">-1</span>]\\n      <span class=\\"hljs-keyword\\">let</span> last7=<span class=\\"hljs-number\\">0</span>\\n      <span class=\\"hljs-keyword\\">if</span>(curday&gt;<span class=\\"hljs-number\\">7</span>){\\n        <span class=\\"hljs-comment\\">// console.log(curday,i)</span>\\n        last7=bsEnd(days,curday<span class=\\"hljs-number\\">-7</span>+<span class=\\"hljs-number\\">1</span>)\\n      }\\n      <span class=\\"hljs-keyword\\">let</span> cost7=dp[last7]+costs[<span class=\\"hljs-number\\">1</span>]\\n      <span class=\\"hljs-keyword\\">let</span> last30=<span class=\\"hljs-number\\">0</span>\\n      <span class=\\"hljs-keyword\\">if</span>(curday&gt;<span class=\\"hljs-number\\">30</span>){\\n        last30=bsEnd(days,curday<span class=\\"hljs-number\\">-30</span>+<span class=\\"hljs-number\\">1</span>)\\n      }\\n      <span class=\\"hljs-keyword\\">let</span> cost30=dp[last30]+costs[<span class=\\"hljs-number\\">2</span>]\\n      <span class=\\"hljs-comment\\">// console.log(i,last7,cost7,cost30,dp)</span>\\n      dp[i]=<span class=\\"hljs-built_in\\">Math</span>.min(cost1,cost7,cost30)\\n    }\\n  <span class=\\"hljs-comment\\">// console.log(dp)</span>\\n  <span class=\\"hljs-keyword\\">return</span> dp[dp.length<span class=\\"hljs-number\\">-1</span>]\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">bsEnd</span>(<span class=\\"hljs-params\\">arr,n</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> lo=<span class=\\"hljs-number\\">0</span>,hi=arr.length<span class=\\"hljs-number\\">-1</span>\\n    <span class=\\"hljs-keyword\\">while</span>(lo&lt;hi){\\n      <span class=\\"hljs-keyword\\">let</span> mid=<span class=\\"hljs-built_in\\">Math</span>.floor((lo+hi)/<span class=\\"hljs-number\\">2</span>)\\n      <span class=\\"hljs-keyword\\">if</span>(arr[mid]&lt;n)lo=mid+<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">else</span> hi=mid\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> hi\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"minimum-cost-for-tickets","created_at":"2019-01-27","timeArr":[2019,0,27,11,30,6,0],"hasThinking":false,"content":"<p>在一个火车旅行很受欢迎的国度，你提前一年计划了一些火车旅行。在接下来的一年里，你要旅行的日子将以一个名为&nbsp;<code>days</code>&nbsp;的数组给出。每一项是一个从&nbsp;<code>1</code>&nbsp;到&nbsp;<code>365</code>&nbsp;的整数。</p>\\n\\n<p>火车票有三种不同的销售方式：</p>\\n\\n<ul>\\n\\t<li>一张为期一天的通行证售价为&nbsp;<code>costs[0]</code> 美元；</li>\\n\\t<li>一张为期七天的通行证售价为&nbsp;<code>costs[1]</code> 美元；</li>\\n\\t<li>一张为期三十天的通行证售价为&nbsp;<code>costs[2]</code> 美元。</li>\\n</ul>\\n\\n<p>通行证允许数天无限制的旅行。 例如，如果我们在第 2 天获得一张为期 7 天的通行证，那么我们可以连着旅行 7 天：第 2 天、第 3 天、第 4 天、第 5 天、第 6 天、第 7 天和第 8 天。</p>\\n\\n<p>返回你想要完成在给定的列表&nbsp;<code>days</code>&nbsp;中列出的每一天的旅行所需要的最低消费。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>days = [1,4,6,7,8,20], costs = [2,7,15]\\n<strong>输出：</strong>11\\n<strong>解释： </strong>\\n例如，这里有一种购买通行证的方法，可以让你完成你的旅行计划：\\n在第 1 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 1 天生效。\\n在第 3 天，你花了 costs[1] = $7 买了一张为期 7 天的通行证，它将在第 3, 4, ..., 9 天生效。\\n在第 20 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 20 天生效。\\n你总共花了 $11，并完成了你计划的每一天旅行。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]\\n<strong>输出：</strong>17\\n<strong>解释：\\n</strong>例如，这里有一种购买通行证的方法，可以让你完成你的旅行计划： \\n在第 1 天，你花了 costs[2] = $15 买了一张为期 30 天的通行证，它将在第 1, 2, ..., 30 天生效。\\n在第 31 天，你花了 costs[0] = $2 买了一张为期 1 天的通行证，它将在第 31 天生效。 \\n你总共花了 $17，并完成了你计划的每一天旅行。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= days.length &lt;= 365</code></li>\\n\\t<li><code>1 &lt;= days[i] &lt;= 365</code></li>\\n\\t<li><code>days</code>&nbsp;按顺序严格递增</li>\\n\\t<li><code>costs.length == 3</code></li>\\n\\t<li><code>1 &lt;= costs[i] &lt;= 1000</code></li>\\n</ol>\\n","title":"983. 最低票价","relatedTags":["数组","动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"983","slug":"983-Minimum-Cost-For-Tickets"}')}}]);