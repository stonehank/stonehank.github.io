(window.webpackJsonp=window.webpackJsonp||[]).push([[965],{1763:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">intervals</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">newInterval</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> insert = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">intervals, newInterval</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> len=intervals.length\\n  <span class=\\"hljs-keyword\\">let</span> [left,right]=newInterval\\n  <span class=\\"hljs-keyword\\">let</span> newArr = []\\n  <span class=\\"hljs-keyword\\">let</span> i = <span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span> (;i&lt;len;i++) {\\n    <span class=\\"hljs-keyword\\">let</span> itv=intervals[i]\\n    <span class=\\"hljs-keyword\\">if</span> (itv[<span class=\\"hljs-number\\">0</span>]&gt;right) <span class=\\"hljs-keyword\\">break</span>\\n    <span class=\\"hljs-keyword\\">if</span> (itv[<span class=\\"hljs-number\\">1</span>]&lt;left) {\\n      newArr.push(itv)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      left=<span class=\\"hljs-built_in\\">Math</span>.min(itv[<span class=\\"hljs-number\\">0</span>], left)\\n      right=<span class=\\"hljs-built_in\\">Math</span>.max(itv[<span class=\\"hljs-number\\">1</span>], right)\\n    }\\n  }\\n  newArr.push([left,right])\\n  <span class=\\"hljs-keyword\\">if</span> (i&lt;len)newArr.push(...intervals.slice(i))\\n  <span class=\\"hljs-keyword\\">return</span> newArr    \\n};\\n</code></pre>\\n"],"querySlug":"insert-interval","created_at":"2019-04-26","timeArr":[2019,3,26,13,53,19,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>一种最简单的想法就是，先添加<code>newIntervals</code>，然后重新按照起始端点排序，最后再处理重叠区间，就相当于<code>Leetcode 56</code>一模一样。</p>\\n<p>时间复杂度是<code>O(nlgn)</code>。</p>\\n<p>另外是时间复杂度<code>O(n)</code>的方法。</p>\\n<p>思路比较简洁的是重新构建区间，</p>\\n<p>检查每一段区间，如果<code>当前区间.end &lt; 新区间.start</code>，那么当前区间肯定是在新区间前面且不重叠的，直接添加当前区间进结果就好。</p>\\n<p>如果<code>当前区间.start &gt; 新区间.end</code>，那么当前区间肯定是在新区间后面且不重叠的，并且说明新区间已经处理完毕，直接添加新区间到结果。</p>\\n<p>其他情况，说明存在重叠区域，更新新区间的开始点和结束点。</p>\\n","content":"<p>给你一个<strong> 无重叠的</strong><em> ，</em>按照区间起始端点排序的区间列表。</p>\\n\\n<p>在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [[1,3],[6,9]], newInterval = [2,5]\\n<strong>输出：</strong>[[1,5],[6,9]]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\\n<strong>输出：</strong>[[1,2],[3,10],[12,16]]\\n<strong>解释：</strong>这是因为新的区间 <code>[4,8]</code> 与 <code>[3,5],[6,7],[8,10]</code> 重叠。</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [], newInterval = [5,7]\\n<strong>输出：</strong>[[5,7]]\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [[1,5]], newInterval = [2,3]\\n<strong>输出：</strong>[[1,5]]\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [[1,5]], newInterval = [2,7]\\n<strong>输出：</strong>[[1,7]]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 <= intervals.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>intervals[i].length == 2</code></li>\\n\\t<li><code>0 <= intervals[i][0] <= intervals[i][1] <= 10<sup>5</sup></code></li>\\n\\t<li><code>intervals</code> 根据 <code>intervals[i][0]</code> 按 <strong>升序</strong> 排列</li>\\n\\t<li><code>newInterval.length == 2</code></li>\\n\\t<li><code>0 <= newInterval[0] <= newInterval[1] <= 10<sup>5</sup></code></li>\\n</ul>\\n","title":"57. 插入区间","relatedTags":["数组"],"difficult":"Middle","lang":["javascript"],"uniqueID":"57","slug":"57-Insert-Interval"}')}}]);