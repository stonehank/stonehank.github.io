(window.webpackJsonp=window.webpackJsonp||[]).push([[1014],{1812:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isNumber = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> needNum=<span class=\\"hljs-literal\\">false</span>,nothing=<span class=\\"hljs-literal\\">true</span>,noAnything=<span class=\\"hljs-literal\\">false</span>,noSign=<span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">let</span> hasNum=<span class=\\"hljs-literal\\">false</span>,hasPoint=<span class=\\"hljs-literal\\">false</span>,hasState=<span class=\\"hljs-literal\\">false</span>,hasE=<span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\\" \\"</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(nothing)<span class=\\"hljs-keyword\\">continue</span>\\n      noAnything=<span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">continue</span>\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(noAnything){\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\\"+\\"</span> || s[i]===<span class=\\"hljs-string\\">\\"-\\"</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(noSign)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(hasNum &amp;&amp; !hasE) <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(hasPoint &amp;&amp; (!hasNum || !hasE))<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(hasState &amp;&amp; (!hasNum || !hasE))<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(hasE &amp;&amp; !hasNum)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      hasState=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-regexp\\">/\\\\d/</span>.test(s[i])){\\n      <span class=\\"hljs-keyword\\">if</span>(needNum)needNum=<span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(hasE)noSign=<span class=\\"hljs-literal\\">true</span>\\n      hasNum=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\\"e\\"</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(!hasNum)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(hasE)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      hasE=<span class=\\"hljs-literal\\">true</span>\\n      needNum=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\\".\\"</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(hasPoint)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(hasE)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      hasPoint=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n    nothing=<span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> !needNum &amp;&amp; !nothing &amp;&amp; hasNum\\n};\\n</code></pre>\\n"],"querySlug":"valid-number","created_at":"2019-03-22","timeArr":[2019,2,22,15,48,10,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>这道题涉及的情况很多，先理顺各种情况先后关系，针对<code>s[i]</code>的每一种情况，写下来，然后再写代码，会清晰很多。</p>\\n<pre class=\\"hljs\\"><code>s[i]\\n空\\t如果前面什么都没有，继续；\\n\\t否则后面就不能有任何除了&quot;空&quot;以外的\\n\\nNum\\t前面如果有&quot;e&quot;，则后面不能有&quot;+-&quot;\\n\\t\\ne\\t前面必须有&quot;Num&quot;\\n\\t前面不能有&quot;e&quot;\\n\\t后面必须有&quot;Num&quot;\\n\\t\\n+-\\t如果前面有&quot;Num&quot;，前面一定要有&quot;e&quot;\\n\\t如果前面有&quot;.&quot; 前面一定要有&quot;Num&quot;，有&quot;e&quot;\\n\\t如果前面有&quot;+-&quot;，前面一定有&quot;Num&quot;，有&quot;e&quot;\\n\\t如果前面有&quot;e&quot;，前面一定要有&quot;Num&quot;\\n\\t\\n.\\t前面不能有&quot;.&quot;\\n\\t前面不能有&quot;e&quot;\\n</code></pre>\\n","content":"<p><strong>有效数字</strong>（按顺序）可以分成以下几个部分：</p>\\n\\n<ol>\\n\\t<li>一个 <strong>小数</strong> 或者 <strong>整数</strong></li>\\n\\t<li>（可选）一个 <code>\'e\'</code> 或 <code>\'E\'</code> ，后面跟着一个 <strong>整数</strong></li>\\n</ol>\\n\\n<p><strong>小数</strong>（按顺序）可以分成以下几个部分：</p>\\n\\n<ol>\\n\\t<li>（可选）一个符号字符（<code>\'+\'</code> 或 <code>\'-\'</code>）</li>\\n\\t<li>下述格式之一：\\n\\t<ol>\\n\\t\\t<li>至少一位数字，后面跟着一个点 <code>\'.\'</code></li>\\n\\t\\t<li>至少一位数字，后面跟着一个点 <code>\'.\'</code> ，后面再跟着至少一位数字</li>\\n\\t\\t<li>一个点 <code>\'.\'</code> ，后面跟着至少一位数字</li>\\n\\t</ol>\\n\\t</li>\\n</ol>\\n\\n<p><strong>整数</strong>（按顺序）可以分成以下几个部分：</p>\\n\\n<ol>\\n\\t<li>（可选）一个符号字符（<code>\'+\'</code> 或 <code>\'-\'</code>）</li>\\n\\t<li>至少一位数字</li>\\n</ol>\\n\\n<p>部分有效数字列举如下：</p>\\n\\n<ul>\\n\\t<li><code>[\\"2\\", \\"0089\\", \\"-0.1\\", \\"+3.14\\", \\"4.\\", \\"-.9\\", \\"2e10\\", \\"-90E3\\", \\"3e+7\\", \\"+6e-1\\", \\"53.5e93\\", \\"-123.456e789\\"]</code></li>\\n</ul>\\n\\n<p>部分无效数字列举如下：</p>\\n\\n<ul>\\n\\t<li><code>[\\"abc\\", \\"1a\\", \\"1e\\", \\"e3\\", \\"99e2.5\\", \\"--6\\", \\"-+3\\", \\"95a54e53\\"]</code></li>\\n</ul>\\n\\n<p>给你一个字符串 <code>s</code> ，如果 <code>s</code> 是一个 <strong>有效数字</strong> ，请返回 <code>true</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"0\\"\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"e\\"\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\".\\"\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\".1\\"\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= s.length <= 20</code></li>\\n\\t<li><code>s</code> 仅含英文字母（大写和小写），数字（<code>0-9</code>），加号 <code>\'+\'</code> ，减号 <code>\'-\'</code> ，或者点 <code>\'.\'</code> 。</li>\\n</ul>\\n","title":"65. 有效数字","relatedTags":["字符串"],"difficult":"Hard","lang":["javascript"],"uniqueID":"65","slug":"65-Valid-Number"}')}}]);