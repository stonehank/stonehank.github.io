(window.webpackJsonp=window.webpackJsonp||[]).push([[584],{1382:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">arr</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">pieces</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> canFormArray = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">arr, pieces</span>) </span>{\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;pieces.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(!isExist(pieces[i]))<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">isExist</span>(<span class=\\"hljs-params\\">p</span>)</span>{\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n            <span class=\\"hljs-keyword\\">if</span>(arr[i]===p[<span class=\\"hljs-number\\">0</span>]){\\n                <span class=\\"hljs-keyword\\">return</span> arr.slice(i,i+p.length).toString()===p.toString()\\n            }\\n        }\\n    }\\n};\\n</code></pre>\\n"],"querySlug":"check-array-formation-through-concatenation","created_at":"2021-03-04","timeArr":[2021,2,4,7,50,34,0],"hasThinking":false,"content":"<p>给你一个整数数组 <code>arr</code> ，数组中的每个整数 <strong>互不相同</strong> 。另有一个由整数数组构成的数组 <code>pieces</code>，其中的整数也 <strong>互不相同</strong> 。请你以 <strong>任意顺序</strong> 连接 <code>pieces</code> 中的数组以形成 <code>arr</code> 。但是，<strong>不允许</strong> 对每个数组 <code>pieces[i]</code> 中的整数重新排序。</p>\\n\\n<p>如果可以连接<em> </em><code>pieces</code> 中的数组形成 <code>arr</code> ，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [85], pieces = [[85]]\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [15,88], pieces = [[88],[15]]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>依次连接 <code>[15]</code> 和 <code>[88]</code>\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [49,18,16], pieces = [[16,18,49]]\\n<strong>输出：</strong>false\\n<strong>解释：</strong>即便数字相符，也不能重新排列 pieces[0]\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [91,4,64,78], pieces = [[78],[4,64],[91]]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>依次连接 <code>[91]</code>、<code>[4,64]</code> 和 <code>[78]</code></pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [1,3,5,7], pieces = [[2,4,6,8]]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= pieces.length <= arr.length <= 100</code></li>\\n\\t<li><code>sum(pieces[i].length) == arr.length</code></li>\\n\\t<li><code>1 <= pieces[i].length <= arr.length</code></li>\\n\\t<li><code>1 <= arr[i], pieces[i][j] <= 100</code></li>\\n\\t<li><code>arr</code> 中的整数 <strong>互不相同</strong></li>\\n\\t<li><code>pieces</code> 中的整数 <strong>互不相同</strong>（也就是说，如果将 <code>pieces</code> 扁平化成一维数组，数组中的所有整数互不相同）</li>\\n</ul>\\n","title":"1640. 能否连接形成数组","relatedTags":["数组","哈希表"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1640","slug":"1640-Check-Array-Formation-Through-Concatenation"}')}}]);