(window.webpackJsonp=window.webpackJsonp||[]).push([[1268],{2066:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">D</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> atMostNGivenDigitSet = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">D, N</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> len=D.length\\n  <span class=\\"hljs-keyword\\">let</span> NStr=N+<span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-keyword\\">let</span> NLen=NStr.length\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> bits=<span class=\\"hljs-built_in\\">Array</span>(<span class=\\"hljs-number\\">9</span>).fill(<span class=\\"hljs-number\\">1</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;NLen;i++){\\n    bits[i]=<span class=\\"hljs-built_in\\">Math</span>.pow(len,i)\\n  }\\n  \\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;NLen;i++){\\n    res+=bits[i]\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> Nid=<span class=\\"hljs-number\\">0</span>,subBits=NLen<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len &amp;&amp; Nid&lt;NLen;i++){\\n    <span class=\\"hljs-keyword\\">let</span> cur=D[i]\\n    <span class=\\"hljs-keyword\\">if</span>(cur&lt;NStr[Nid])res+=bits[subBits]\\n    <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(cur&gt;NStr[Nid])<span class=\\"hljs-keyword\\">break</span>\\n    <span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(Nid===NLen<span class=\\"hljs-number\\">-1</span>)res++\\n      Nid++\\n      i=<span class=\\"hljs-number\\">-1</span>\\n      subBits--\\n    }  \\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"numbers-at-most-n-given-digit-set","created_at":"2019-03-09","timeArr":[2019,2,9,15,51,52,0],"hasThinking":false,"content":"<p>我们有一组<strong>排序的</strong>数字 <code>D</code>，它是&nbsp; <code>{&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;}</code>&nbsp;的非空子集。（请注意，<code>&#39;0&#39;</code> 不包括在内。）</p>\\n\\n<p>现在，我们用这些数字进行组合写数字，想用多少次就用多少次。例如&nbsp;<code>D = {&#39;1&#39;,&#39;3&#39;,&#39;5&#39;}</code>，我们可以写出像&nbsp;<code>&#39;13&#39;, &#39;551&#39;, &#39;1351315&#39;</code>&nbsp;这样的数字。</p>\\n\\n<p>返回可以用 <code>D</code> 中的数字写出的小于或等于 <code>N</code> 的正整数的数目。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>D = [&quot;1&quot;,&quot;3&quot;,&quot;5&quot;,&quot;7&quot;], N = 100\\n<strong>输出：</strong>20\\n<strong>解释：</strong>\\n可写出的 20 个数字是：\\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>D = [&quot;1&quot;,&quot;4&quot;,&quot;9&quot;], N = 1000000000\\n<strong>输出：</strong>29523\\n<strong>解释：</strong>\\n我们可以写 3 个一位数字，9 个两位数字，27 个三位数字，\\n81 个四位数字，243 个五位数字，729 个六位数字，\\n2187 个七位数字，6561 个八位数字和 19683 个九位数字。\\n总共，可以使用D中的数字写出 29523 个整数。</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>D</code> 是按排序顺序的数字 <code>&#39;1&#39;-&#39;9&#39;</code> 的子集。</li>\\n\\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\\n</ol>\\n","title":"902. 最大为 N 的数字组合","relatedTags":["数组","数学","二分查找","动态规划"],"difficult":"Hard","lang":["javascript"],"uniqueID":"902","slug":"902-Numbers-At-Most-N-Given-Digit-Set"}')}}]);