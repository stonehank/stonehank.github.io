(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{628:function(n){n.exports=JSON.parse('{"content":"<ol>\\n<li><code>SPA</code>的router跳转后立刻回到最顶端</li>\\n</ol>\\n<p>核心：添加<code>window.scrollTo(0, 0)</code></p>\\n<p>可以在每一个<code>Component</code>里面写，也可以包裹<code>Route</code></p>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">ScrollToTopRoute</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">Component</span> </span>{\\n  componentDidUpdate(prevProps) {\\n    <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-keyword\\">this</span>.props.location.pathname !== prevProps.location.pathname){\\n      <span class=\\"hljs-built_in\\">window</span>.scrollTo(<span class=\\"hljs-number\\">0</span>, <span class=\\"hljs-number\\">0</span>);\\n    }\\n  }\\n  render() {\\n    <span class=\\"hljs-keyword\\">const</span> { <span class=\\"hljs-attr\\">component</span>: Component, ...rest } = <span class=\\"hljs-keyword\\">this</span>.props;\\n    <span class=\\"hljs-keyword\\">return</span> &lt;Route {...rest} render={props =&gt; (&lt;Component {...props} /&gt;)} /&gt;;\\n  }\\n}</code></pre></code></pre>\\n<ol start=\\"2\\">\\n<li>当url的search发生变化，router不未发生更新，因为页面并未改变</li>\\n</ol>\\n<p>例如：<code>http://xx.xx.com/search/</code>===&gt;<code>http://xx.xx.com/search/?id=5</code></p>\\n<p>核心：通过给<code>Component</code>设置<code>key</code>，当key不同时，让Component强制更新</p>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">ScrollToTopRoute</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">Component</span> </span>{\\n  componentDidUpdate(prevProps) {\\n    <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-keyword\\">this</span>.props.location.pathname !== prevProps.location.pathname){\\n      <span class=\\"hljs-built_in\\">window</span>.scrollTo(<span class=\\"hljs-number\\">0</span>, <span class=\\"hljs-number\\">0</span>);\\n    }\\n  }\\n  render() {\\n    <span class=\\"hljs-keyword\\">const</span> { <span class=\\"hljs-attr\\">component</span>: Component, RouteKey, location, ...rest } = <span class=\\"hljs-keyword\\">this</span>.props;\\n    <span class=\\"hljs-keyword\\">const</span> Key = RouteKey ? location.pathname + location.search : <span class=\\"hljs-literal\\">null</span>;\\n    <span class=\\"hljs-keyword\\">return</span> &lt;Route {...rest} render={props =&gt; (&lt;Component {...props} key={Key} /&gt;)} /&gt;;\\n  }\\n}\\n\\n<span class=\\"hljs-comment\\">// Usage</span>\\n&lt;Router history={History}&gt;\\n  &lt;Switch&gt;\\n    &lt;ScrollToTopRoute exact path=\\"/\\" component={Home}/&gt;\\n    &lt;ScrollToTopRoute exact path=\\"/search\\" component={Search} RouteKey={true} /&gt;\\n  &lt;/Switch&gt;\\n&lt;<span class=\\"hljs-regexp\\">/Router&gt;</span></code></pre></code></pre>\\n<p>参考：<a href=\\"https://blog.bitsrc.io/the-love-hate-relationship-between-react-router-and-react-components-dee4aac5956c\\">The Love-Hate Relationship between React Router and React Components</a></p>\\n","toc":[],"relatedTags":null,"created_at":"2018-11-06","timeArr":[2018,10,6,0,0,0,0],"title":"react-router2个技巧","uuid":"8f280c8e1286471ef7f34acf52ea54212de93568","summary":"<ol>\\n<li><code>SPA</code>的router跳转后立刻回到最顶端</li>\\n</ol>\\n<p>核心：添加<code>window.scrollTo(0, 0)</code></p>\\n<p>可以在每一个<code>Component</code>里面写，也可以包裹<code>Route</code></p>\\n<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">ScrollToTopRoute</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">Component</span> </span>{\\n  componen...</code></pre>","slug":"react-router2-ge-ji-qiao","sha":"557c27da0f9f9270e3a273c2f21a0885dca67e10"}')}}]);