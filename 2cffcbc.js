(window.webpackJsonp=window.webpackJsonp||[]).push([[549],{1347:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> makeGood = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> isLow=s.charCodeAt(<span class=\\"hljs-number\\">0</span>)&gt;=<span class=\\"hljs-number\\">97</span>\\n    <span class=\\"hljs-keyword\\">let</span> aux=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n        <span class=\\"hljs-keyword\\">let</span> code=s.charCodeAt(i)\\n        <span class=\\"hljs-keyword\\">let</span> uppCode=code\\n        <span class=\\"hljs-keyword\\">let</span> isLow=code&gt;=<span class=\\"hljs-number\\">97</span>\\n        <span class=\\"hljs-keyword\\">if</span>(isLow){\\n            uppCode-=<span class=\\"hljs-number\\">32</span>\\n        }\\n        <span class=\\"hljs-keyword\\">if</span>(aux.length&gt;<span class=\\"hljs-number\\">0</span>){\\n            <span class=\\"hljs-keyword\\">let</span> lastCode=s.charCodeAt(aux[aux.length<span class=\\"hljs-number\\">-1</span>])\\n            <span class=\\"hljs-keyword\\">let</span> isLastLow=lastCode&gt;=<span class=\\"hljs-number\\">97</span>\\n            <span class=\\"hljs-keyword\\">let</span> uppLastCode=lastCode\\n            <span class=\\"hljs-keyword\\">if</span>(isLastLow)uppLastCode-=<span class=\\"hljs-number\\">32</span>\\n            <span class=\\"hljs-comment\\">// console.log(uppCode,uppLastCode)</span>\\n            <span class=\\"hljs-keyword\\">if</span>(!!isLow !== !!isLastLow &amp;&amp; uppCode===uppLastCode){\\n                aux.pop()\\n                <span class=\\"hljs-keyword\\">continue</span>\\n            }\\n        }\\n        aux.push(i)\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;aux.length;i++){\\n        res+=s[aux[i]]\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"make-the-string-great","created_at":"2020-08-09","timeArr":[2020,7,9,12,29,24,0],"hasThinking":false,"content":"<p>给你一个由大小写英文字母组成的字符串 <code>s</code> 。</p>\\n\\n<p>一个整理好的字符串中，两个相邻字符 <code>s[i]</code> 和 <code>s[i+1]</code>，其中 <code>0<= i <= s.length-2</code> ，要满足如下条件:</p>\\n\\n<ul>\\n\\t<li>若 <code>s[i]</code> 是小写字符，则 <code>s[i+1]</code> 不可以是相同的大写字符。</li>\\n\\t<li>若 <code>s[i]</code> 是大写字符，则 <code>s[i+1]</code> 不可以是相同的小写字符。</li>\\n</ul>\\n\\n<p>请你将字符串整理好，每次你都可以从字符串中选出满足上述条件的 <strong>两个相邻</strong> 字符并删除，直到字符串整理好为止。</p>\\n\\n<p>请返回整理好的 <strong>字符串</strong> 。题目保证在给出的约束条件下，测试样例对应的答案是唯一的。</p>\\n\\n<p><strong>注意：</strong>空字符串也属于整理好的字符串，尽管其中没有任何字符。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"leEeetcode\\"\\n<strong>输出：</strong>\\"leetcode\\"\\n<strong>解释：</strong>无论你第一次选的是 i = 1 还是 i = 2，都会使 \\"leEeetcode\\" 缩减为 \\"leetcode\\" 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"abBAcC\\"\\n<strong>输出：</strong>\\"\\"\\n<strong>解释：</strong>存在多种不同情况，但所有的情况都会导致相同的结果。例如：\\n\\"abBAcC\\" --\x3e \\"aAcC\\" --\x3e \\"cC\\" --\x3e \\"\\"\\n\\"abBAcC\\" --\x3e \\"abBA\\" --\x3e \\"aA\\" --\x3e \\"\\"\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"s\\"\\n<strong>输出：</strong>\\"s\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= s.length <= 100</code></li>\\n\\t<li><code>s</code> 只包含小写和大写英文字母</li>\\n</ul>\\n","title":"1544. 整理字符串","relatedTags":["栈","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1544","slug":"1544-Make-The-String-Great"}')}}]);