(window.webpackJsonp=window.webpackJsonp||[]).push([[720],{1518:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">findDuplicate</span><span class=\\"hljs-params\\">(self, nums)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        lo=<span class=\\"hljs-number\\">1</span>\\n        hi=len(nums)<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">while</span> lo&lt;hi:\\n          mid=(lo+hi)//<span class=\\"hljs-number\\">2</span>\\n          lessThen=<span class=\\"hljs-number\\">0</span>\\n          <span class=\\"hljs-keyword\\">for</span> n <span class=\\"hljs-keyword\\">in</span> nums:\\n            <span class=\\"hljs-keyword\\">if</span> n&lt;=mid:lessThen+=<span class=\\"hljs-number\\">1</span>\\n          <span class=\\"hljs-keyword\\">if</span> lessThen&gt;mid:\\n            hi=mid\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            lo=mid+<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">return</span> lo\\n</code></pre>\\n"],"querySlug":"find-the-duplicate-number","created_at":"2019-02-25","timeArr":[2019,1,25,10,34,58,0],"hasThinking":false,"content":"<p>给定一个包含 <code>n + 1</code> 个整数的数组 <code>nums</code> ，其数字都在 <code>1</code> 到 <code>n</code><em> </em>之间（包括 <code>1</code> 和 <code>n</code>），可知至少存在一个重复的整数。</p>\\n\\n<p>假设 <code>nums</code> 只有 <strong>一个重复的整数</strong> ，找出 <strong>这个重复的数</strong> 。</p>\\n\\n<p>你设计的解决方案必须不修改数组 <code>nums</code> 且只用常量级 <code>O(1)</code> 的额外空间。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1,3,4,2,2]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [3,1,3,4,2]\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1,1]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1,1,2]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n <= 10<sup>5</sup></code></li>\\n\\t<li><code>nums.length == n + 1</code></li>\\n\\t<li><code>1 <= nums[i] <= n</code></li>\\n\\t<li><code>nums</code> 中 <strong>只有一个整数</strong> 出现 <strong>两次或多次</strong> ，其余整数均只出现 <strong>一次</strong></li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><b>进阶：</b></p>\\n\\n<ul>\\n\\t<li>如何证明 <code>nums</code> 中至少存在一个重复的数字?</li>\\n\\t<li>你可以设计一个线性级时间复杂度 <code>O(n)</code> 的解决方案吗？</li>\\n</ul>\\n","title":"287. 寻找重复数","relatedTags":["位运算","数组","双指针","二分查找"],"difficult":"Middle","lang":["python"],"uniqueID":"287","slug":"287-Find-the-Duplicate-Number"}')}}]);