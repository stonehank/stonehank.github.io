(window.webpackJsonp=window.webpackJsonp||[]).push([[600],{1398:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">sequence</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">word</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxRepeating = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">sequence, word</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;<span class=\\"hljs-number\\">100</span>;i++){\\n        <span class=\\"hljs-keyword\\">let</span> query=word.repeat(i+<span class=\\"hljs-number\\">1</span>)\\n        <span class=\\"hljs-keyword\\">if</span>(sequence.includes(query))res=i+<span class=\\"hljs-number\\">1</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"maximum-repeating-substring","created_at":"2020-12-05","timeArr":[2020,11,5,16,16,19,0],"hasThinking":false,"content":"<p>给你一个字符串 <code>sequence</code> ，如果字符串 <code>word</code> 连续重复 <code>k</code> 次形成的字符串是 <code>sequence</code> 的一个子字符串，那么单词 <code>word</code> 的 <strong>重复值为 <code>k</code></strong><strong> </strong>。单词 <code>word</code> 的 <strong>最</strong><strong>大重复值</strong> 是单词 <code>word</code> 在 <code>sequence</code> 中最大的重复值。如果 <code>word</code> 不是 <code>sequence</code> 的子串，那么重复值 <code>k</code> 为 <code>0</code> 。</p>\\n\\n<p>给你一个字符串 <code>sequence</code> 和 <code>word</code> ，请你返回 <strong>最大重复值 <code>k</code> </strong>。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<b>输入：</b>sequence = \\"ababc\\", word = \\"ab\\"\\n<b>输出：</b>2\\n<strong>解释：</strong>\\"abab\\" 是 \\"<strong>abab</strong>c\\" 的子字符串。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<b>输入：</b>sequence = \\"ababc\\", word = \\"ba\\"\\n<b>输出：</b>1\\n<strong>解释：</strong>\\"ba\\" 是 \\"a<strong>ba</strong>bc\\" 的子字符串，但 \\"baba\\" 不是 \\"ababc\\" 的子字符串。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<b>输入：</b>sequence = \\"ababc\\", word = \\"ac\\"\\n<b>输出：</b>0\\n<strong>解释：</strong>\\"ac\\" 不是 \\"ababc\\" 的子字符串。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= sequence.length <= 100</code></li>\\n\\t<li><code>1 <= word.length <= 100</code></li>\\n\\t<li><code>sequence</code> 和 <code>word</code> 都只包含小写英文字母。</li>\\n</ul>\\n","title":"1668. 最大重复子字符串","relatedTags":["字符串","字符串匹配"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1668","slug":"1668-Maximum-Repeating-Substring"}')}}]);