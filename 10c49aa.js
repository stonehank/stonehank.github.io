(window.webpackJsonp=window.webpackJsonp||[]).push([[1382],{2180:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">jump</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minJump = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">jump</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> arr=[<span class=\\"hljs-number\\">0</span>]\\n    <span class=\\"hljs-keyword\\">let</span> maxL=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> aux=<span class=\\"hljs-built_in\\">Array</span>(jump.length).fill(<span class=\\"hljs-number\\">0</span>)\\n    <span class=\\"hljs-keyword\\">let</span> step=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">while</span>(arr.length&gt;<span class=\\"hljs-number\\">0</span>){\\n        step++\\n        <span class=\\"hljs-keyword\\">let</span> len=arr.length\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len;i++){\\n            <span class=\\"hljs-keyword\\">let</span> nxt=arr.shift()\\n            <span class=\\"hljs-keyword\\">let</span> nxtNum=jump[nxt]\\n            <span class=\\"hljs-keyword\\">if</span>(nxtNum+nxt&gt;=jump.length)<span class=\\"hljs-keyword\\">return</span> step\\n            <span class=\\"hljs-keyword\\">if</span>(aux[nxtNum+nxt]===<span class=\\"hljs-number\\">0</span>){\\n                aux[nxtNum+nxt]=<span class=\\"hljs-number\\">1</span>\\n                arr.push(nxtNum+nxt)\\n            }\\n            <span class=\\"hljs-keyword\\">if</span>(nxt&gt;maxL){\\n                <span class=\\"hljs-comment\\">// console.log(nxt,maxL)</span>\\n                <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=maxL+<span class=\\"hljs-number\\">1</span>;j&lt;nxt;j++){\\n                    <span class=\\"hljs-keyword\\">if</span>(aux[j]===<span class=\\"hljs-number\\">0</span>){\\n                        aux[j]=<span class=\\"hljs-number\\">1</span>\\n                        arr.push(j)\\n                    }\\n                }\\n                maxL=nxt+<span class=\\"hljs-number\\">1</span>\\n            }\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> step\\n};\\n</code></pre>\\n"],"querySlug":"zui-xiao-tiao-yue-ci-shu","created_at":"2021-01-18","timeArr":[2021,0,18,17,0,57,749],"hasThinking":false,"content":"<p>为了给刷题的同学一些奖励，力扣团队引入了一个弹簧游戏机。游戏机由 <code>N</code> 个特殊弹簧排成一排，编号为 <code>0</code> 到 <code>N-1</code>。初始有一个小球在编号 <code>0</code> 的弹簧处。若小球在编号为 <code>i</code> 的弹簧处，通过按动弹簧，可以选择把小球向右弹射&nbsp;<code>jump[i]</code> 的距离，或者向左弹射到任意左侧弹簧的位置。也就是说，在编号为 <code>i</code> 弹簧处按动弹簧，小球可以弹向 <code>0</code> 到 <code>i-1</code> 中任意弹簧或者 <code>i+jump[i]</code> 的弹簧（若 <code>i+jump[i]&gt;=N</code> ，则表示小球弹出了机器）。小球位于编号 0 处的弹簧时不能再向左弹。</p>\\n\\n<p>为了获得奖励，你需要将小球弹出机器。请求出最少需要按动多少次弹簧，可以将小球从编号 <code>0</code> 弹簧弹出整个机器，即向右越过编号 <code>N-1</code> 的弹簧。</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<blockquote>\\n<p>输入：<code>jump = [2, 5, 1, 1, 1, 1]</code></p>\\n\\n<p>输出：<code>3</code></p>\\n\\n<p>解释：小 Z 最少需要按动 3 次弹簧，小球依次到达的顺序为 0 -&gt; 2 -&gt; 1 -&gt; 6，最终小球弹出了机器。</p>\\n</blockquote>\\n\\n<p><strong>限制：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= jump.length &lt;= 10^6</code></li>\\n\\t<li><code>1 &lt;= jump[i] &lt;= 10000</code></li>\\n</ul>\\n","title":"LCP 09. 最小跳跃次数","relatedTags":["广度优先搜索","线段树","数组","动态规划"],"difficult":"Hard","lang":["javascript"],"uniqueID":"LCP 09","slug":"LCP-09-zui-xiao-tiao-yue-ci-shu"}')}}]);