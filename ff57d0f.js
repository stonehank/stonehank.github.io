(window.webpackJsonp=window.webpackJsonp||[]).push([[894],{1692:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> PredictTheWinner = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">return</span> calc(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">0</span>,nums.length<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-literal\\">true</span>)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">calc</span>(<span class=\\"hljs-params\\">p1,p2,lo,hi,turn</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(lo&gt;hi){\\n      <span class=\\"hljs-keyword\\">if</span>(turn)<span class=\\"hljs-keyword\\">return</span> p1&gt;=p2\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">return</span> p2&gt;p1\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">if</span>(turn){\\n      res=!calc(p1+nums[lo],p2,lo+<span class=\\"hljs-number\\">1</span>,hi,!turn) || !calc(p1+nums[hi],p2,lo,hi<span class=\\"hljs-number\\">-1</span>,!turn)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      res=!calc(p1,p2+nums[lo],lo+<span class=\\"hljs-number\\">1</span>,hi,!turn) || !calc(p1,p2+nums[hi],lo,hi<span class=\\"hljs-number\\">-1</span>,!turn)\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n};\\n</code></pre>\\n","<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">PredictTheWinner</span><span class=\\"hljs-params\\">(self, nums)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        :rtype: bool\\n        \\"\\"\\"</span>\\n        n=len(nums)\\n        dp=[[<span class=\\"hljs-number\\">0</span>]*n <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(n)]\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(n):\\n          dp[i][i]=nums[i]\\n        \\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">1</span>,n):\\n          <span class=\\"hljs-keyword\\">for</span> j <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">0</span>,n-i):\\n            k=j+i\\n            dp[j][k]=max(nums[j]-dp[j+<span class=\\"hljs-number\\">1</span>][k],nums[k]-dp[j][k<span class=\\"hljs-number\\">-1</span>])\\n        <span class=\\"hljs-keyword\\">return</span> dp[<span class=\\"hljs-number\\">0</span>][<span class=\\"hljs-number\\">-1</span>]&gt;=<span class=\\"hljs-number\\">0</span>\\n</code></pre>\\n"],"querySlug":"predict-the-winner","hasThinking":false,"content":"<p>给定一个表示分数的非负整数数组。 玩家 1 从数组任意一端拿取一个分数，随后玩家 2 继续从剩余数组任意一端拿取分数，然后玩家 1 拿，&hellip;&hellip; 。每次一个玩家只能拿取一个分数，分数被拿取之后不再可取。直到没有剩余分数可取时游戏结束。最终获得分数总和最多的玩家获胜。</p>\\n\\n<p>给定一个表示分数的数组，预测玩家1是否会成为赢家。你可以假设每个玩家的玩法都会使他的分数最大化。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[1, 5, 2]\\n<strong>输出：</strong>False\\n<strong>解释：</strong>一开始，玩家1可以从1和2中进行选择。\\n如果他选择 2（或者 1 ），那么玩家 2 可以从 1（或者 2 ）和 5 中进行选择。如果玩家 2 选择了 5 ，那么玩家 1 则只剩下 1（或者 2 ）可选。\\n所以，玩家 1 的最终分数为 1 + 2 = 3，而玩家 2 为 5 。\\n因此，玩家 1 永远不会成为赢家，返回 False 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[1, 5, 233, 7]\\n<strong>输出：</strong>True\\n<strong>解释：</strong>玩家 1 一开始选择 1 。然后玩家 2 必须从 5 和 7 中进行选择。无论玩家 2 选择了哪个，玩家 1 都可以选择 233 。\\n     最终，玩家 1（234 分）比玩家 2（12 分）获得更多的分数，所以返回 True，表示玩家 1 可以成为赢家。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>1 &lt;= 给定的数组长度&nbsp;&lt;= 20.</li>\\n\\t<li>数组里所有分数都为非负数且不会大于 10000000 。</li>\\n\\t<li>如果最终两个玩家的分数相等，那么玩家 1 仍为赢家。</li>\\n</ul>\\n","title":"486. 预测赢家","relatedTags":["递归","数组","数学","动态规划","博弈"],"difficult":"Middle","lang":["javascript","python"],"uniqueID":"486","slug":"486-Predict-the-Winner"}')}}]);