(window.webpackJsonp=window.webpackJsonp||[]).push([[1041],{1839:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> judgePoint24 = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> ope=[<span class=\\"hljs-string\\">\'+\'</span>,<span class=\\"hljs-string\\">\'-\'</span>,<span class=\\"hljs-string\\">\'*\'</span>,<span class=\\"hljs-string\\">\'/\'</span>]\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-literal\\">false</span>\\n  backtrack([],[])\\n  <span class=\\"hljs-keyword\\">return</span> res\\n\\n  <span class=\\"hljs-comment\\">// 全排列</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">backtrack</span>(<span class=\\"hljs-params\\">used,temp</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(res)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span>(temp.length===<span class=\\"hljs-number\\">4</span>){\\n      <span class=\\"hljs-keyword\\">let</span> a=calc(temp.slice())\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;a.length;j++){\\n        <span class=\\"hljs-keyword\\">if</span>(is24(a[j]))<span class=\\"hljs-keyword\\">return</span> res=<span class=\\"hljs-literal\\">true</span>\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nums.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(used[i])<span class=\\"hljs-keyword\\">continue</span>\\n      used[i]=<span class=\\"hljs-literal\\">true</span>\\n      temp.push(nums[i])\\n      backtrack(used,temp)\\n      temp.pop()\\n      used[i]=<span class=\\"hljs-literal\\">false</span>\\n    }\\n  }\\n  <span class=\\"hljs-comment\\">// 计算当前排列存在的值</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">calc</span>(<span class=\\"hljs-params\\">arr</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(arr.length&lt;=<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> arr\\n    <span class=\\"hljs-keyword\\">let</span> res=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;arr.length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> left=arr.slice(<span class=\\"hljs-number\\">0</span>,i),right=arr.slice(i)\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;ope.length;j++){\\n        <span class=\\"hljs-keyword\\">let</span> leftVal=calc(left),rightVal=calc(right)\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k=<span class=\\"hljs-number\\">0</span>;k&lt;leftVal.length;k++){\\n          <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> l=<span class=\\"hljs-number\\">0</span>;l&lt;rightVal.length;l++){\\n            <span class=\\"hljs-keyword\\">let</span> leftV=leftVal[k], rightV=rightVal[l]\\n            <span class=\\"hljs-keyword\\">if</span>(ope[j]===<span class=\\"hljs-string\\">\'/\'</span>)res.push(leftV/rightV)\\n            <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(ope[j]===<span class=\\"hljs-string\\">\'+\'</span>)res.push(leftV+rightV)\\n            <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(ope[j]===<span class=\\"hljs-string\\">\'-\'</span>)res.push(leftV-rightV)\\n            <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(ope[j]===<span class=\\"hljs-string\\">\'*\'</span>)res.push(leftV*rightV)\\n          }\\n        }\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">is24</span>(<span class=\\"hljs-params\\">N</span>)</span>{\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-built_in\\">Math</span>.abs(N<span class=\\"hljs-number\\">-24</span>)&lt;=<span class=\\"hljs-number\\">0.00001</span>\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"24-game","created_at":"2019-05-08","timeArr":[2019,4,8,17,19,31,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<ol>\\n<li>找出所有全排列。</li>\\n<li>对每一种排列计算出当前排列能形成的所有值。</li>\\n</ol>\\n<p>例如：<code>[1,5,6,8]</code>，可以处理为：</p>\\n<p><code>([1]) +|-|*|/ ([5,6,8])</code></p>\\n<p><code>([1,5]) +|-|*|/ ([6,8])</code></p>\\n<p><code>([1,5,6]) +|-|*|/ ([8])</code></p>\\n<p>对于<code>()</code>内部的数组，也是递归执行。</p>\\n","content":"<p>你有 4 张写有 1 到 9 数字的牌。你需要判断是否能通过&nbsp;<code>*</code>，<code>/</code>，<code>+</code>，<code>-</code>，<code>(</code>，<code>)</code>&nbsp;的运算得到 24。</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre><strong>输入:</strong> [4, 1, 8, 7]\\n<strong>输出:</strong> True\\n<strong>解释:</strong> (8-4) * (7-1) = 24\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre><strong>输入:</strong> [1, 2, 1, 2]\\n<strong>输出:</strong> False\\n</pre>\\n\\n<p><strong>注意:</strong></p>\\n\\n<ol>\\n\\t<li>除法运算符&nbsp;<code>/</code>&nbsp;表示实数除法，而不是整数除法。例如 4 / (1 - 2/3) = 12 。</li>\\n\\t<li>每个运算符对两个数进行运算。特别是我们不能用&nbsp;<code>-</code>&nbsp;作为一元运算符。例如，<code>[1, 1, 1, 1]</code>&nbsp;作为输入时，表达式&nbsp;<code>-1 - 1 - 1 - 1</code>&nbsp;是不允许的。</li>\\n\\t<li>你不能将数字连接在一起。例如，输入为&nbsp;<code>[1, 2, 1, 2]</code>&nbsp;时，不能写成 12 + 12 。</li>\\n</ol>\\n","title":"679. 24 点游戏","relatedTags":["数组","数学","回溯"],"difficult":"Hard","lang":["javascript"],"uniqueID":"679","slug":"679-24-Game"}')}}]);