(window.webpackJsonp=window.webpackJsonp||[]).push([[897],{1695:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">findSubsequences</span><span class=\\"hljs-params\\">(self, nums)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        :rtype: List[List[int]]\\n        \\"\\"\\"</span>\\n        res=[]\\n        <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">backtrack</span><span class=\\"hljs-params\\">(arr,start)</span>:</span>\\n          <span class=\\"hljs-keyword\\">if</span> len(arr)&gt;<span class=\\"hljs-number\\">1</span>:\\n            res.append(arr[:])\\n          memo={}\\n          <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(start,len(nums)):\\n            <span class=\\"hljs-keyword\\">if</span> nums[i] <span class=\\"hljs-keyword\\">in</span> memo:<span class=\\"hljs-keyword\\">continue</span>\\n            <span class=\\"hljs-keyword\\">if</span> len(arr)&gt;<span class=\\"hljs-number\\">0</span> <span class=\\"hljs-keyword\\">and</span> arr[<span class=\\"hljs-number\\">-1</span>]&gt;nums[i]:<span class=\\"hljs-keyword\\">continue</span>\\n            arr.append(nums[i])\\n            memo[nums[i]]=<span class=\\"hljs-literal\\">True</span>\\n            backtrack(arr,i+<span class=\\"hljs-number\\">1</span>)\\n            arr.pop()\\n        \\n        backtrack([],<span class=\\"hljs-number\\">0</span>)\\n        <span class=\\"hljs-keyword\\">return</span> res\\n\\n        \\n        \\n</code></pre>\\n"],"querySlug":"increasing-subsequences","created_at":"2019-04-09","timeArr":[2019,3,9,14,23,34,0],"hasThinking":false,"content":"<p>给你一个整数数组 <code>nums</code> ，找出并返回所有该数组中不同的递增子序列，递增子序列中 <strong>至少有两个元素</strong> 。你可以按 <strong>任意顺序</strong> 返回答案。</p>\\n\\n<p>数组中可能含有重复元素，如出现两个整数相等，也可以视作递增序列的一种特殊情况。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [4,6,7,7]\\n<strong>输出：</strong>[[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [4,4,3,2,1]\\n<strong>输出：</strong>[[4,4]]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= nums.length &lt;= 15</code></li>\\n\\t<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\\n</ul>\\n","title":"491. 递增子序列","relatedTags":["位运算","数组","哈希表","回溯"],"difficult":"Middle","lang":["python"],"uniqueID":"491","slug":"491-Increasing-Subsequences"}')}}]);