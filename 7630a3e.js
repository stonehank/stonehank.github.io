(window.webpackJsonp=window.webpackJsonp||[]).push([[1239],{2037:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">piles</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> stoneGame = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">piles</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> N=piles.length\\n  <span class=\\"hljs-keyword\\">let</span> dp=<span class=\\"hljs-built_in\\">Array</span>(N).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(N).fill(<span class=\\"hljs-number\\">0</span>))\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n    dp[i][i]=[piles[i],<span class=\\"hljs-number\\">0</span>]\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;N;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;N-i;j++){\\n      <span class=\\"hljs-keyword\\">let</span> k=j+i\\n      <span class=\\"hljs-keyword\\">let</span> choose_tail=piles[k]+dp[j][k<span class=\\"hljs-number\\">-1</span>][<span class=\\"hljs-number\\">1</span>],\\n          choose_head=piles[j]+dp[j+<span class=\\"hljs-number\\">1</span>][k][<span class=\\"hljs-number\\">1</span>]\\n      <span class=\\"hljs-keyword\\">if</span>(choose_tail&gt;choose_head){\\n        dp[j][k][<span class=\\"hljs-number\\">0</span>]=choose_tail\\n        dp[j][k][<span class=\\"hljs-number\\">1</span>]=dp[j][k<span class=\\"hljs-number\\">-1</span>][<span class=\\"hljs-number\\">0</span>]\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        dp[j][k][<span class=\\"hljs-number\\">0</span>]=choose_head\\n        dp[j][k][<span class=\\"hljs-number\\">1</span>]=dp[j+<span class=\\"hljs-number\\">1</span>][k][<span class=\\"hljs-number\\">0</span>]\\n      }\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> dp[N<span class=\\"hljs-number\\">-1</span>][N<span class=\\"hljs-number\\">-1</span>][<span class=\\"hljs-number\\">0</span>]&gt;dp[N<span class=\\"hljs-number\\">-1</span>][N<span class=\\"hljs-number\\">-1</span>][<span class=\\"hljs-number\\">1</span>]\\n};\\n</code></pre>\\n"],"querySlug":"stone-game","created_at":"2019-03-09","timeArr":[2019,2,9,12,39,42,0],"hasThinking":false,"content":"<p>亚历克斯和李用几堆石子在做游戏。偶数堆石子<strong>排成一行</strong>，每堆都有正整数颗石子 <code>piles[i]</code> 。</p>\\n\\n<p>游戏以谁手中的石子最多来决出胜负。石子的总数是奇数，所以没有平局。</p>\\n\\n<p>亚历克斯和李轮流进行，亚历克斯先开始。 每回合，玩家从行的开始或结束处取走整堆石头。 这种情况一直持续到没有更多的石子堆为止，此时手中石子最多的玩家获胜。</p>\\n\\n<p>假设亚历克斯和李都发挥出最佳水平，当亚历克斯赢得比赛时返回 <code>true</code> ，当李赢得比赛时返回 <code>false</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>[5,3,4,5]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>\\n亚历克斯先开始，只能拿前 5 颗或后 5 颗石子 。\\n假设他取了前 5 颗，这一行就变成了 [3,4,5] 。\\n如果李拿走前 3 颗，那么剩下的是 [4,5]，亚历克斯拿走后 5 颗赢得 10 分。\\n如果李拿走后 5 颗，那么剩下的是 [3,4]，亚历克斯拿走后 4 颗赢得 9 分。\\n这表明，取前 5 颗石子对亚历克斯来说是一个胜利的举动，所以我们返回 true 。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 <= piles.length <= 500</code></li>\\n\\t<li><code>piles.length</code> 是偶数。</li>\\n\\t<li><code>1 <= piles[i] <= 500</code></li>\\n\\t<li><code>sum(piles)</code> 是奇数。</li>\\n</ul>\\n","title":"877. 石子游戏","relatedTags":["数组","数学","动态规划","博弈"],"difficult":"Middle","lang":["javascript"],"uniqueID":"877","slug":"877-Stone-Game"}')}}]);