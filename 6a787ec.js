(window.webpackJsonp=window.webpackJsonp||[]).push([[467],{1265:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">rating</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numTeams = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">rating</span>) </span>{\\n  <span class=\\"hljs-keyword\\">return</span> getCount(<span class=\\"hljs-literal\\">true</span>) + getCount(<span class=\\"hljs-literal\\">false</span>)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">getCount</span>(<span class=\\"hljs-params\\">asc</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> len=rating.length\\n    <span class=\\"hljs-keyword\\">let</span> dp=<span class=\\"hljs-built_in\\">Array</span>(len).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span>({}))\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len;i++){\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;i;j++){\\n        <span class=\\"hljs-keyword\\">if</span>(asc){\\n          <span class=\\"hljs-keyword\\">if</span>(rating[i]&gt;rating[j]){\\n            <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> key <span class=\\"hljs-keyword\\">in</span> dp[j]){\\n              <span class=\\"hljs-keyword\\">if</span>(dp[i][+key+<span class=\\"hljs-number\\">1</span>]==<span class=\\"hljs-literal\\">null</span>){\\n                dp[i][+key+<span class=\\"hljs-number\\">1</span>]=dp[j][key]\\n              }<span class=\\"hljs-keyword\\">else</span>{\\n                dp[i][+key+<span class=\\"hljs-number\\">1</span>]+=dp[j][key]\\n              }\\n              <span class=\\"hljs-keyword\\">if</span>(+key+<span class=\\"hljs-number\\">1</span>===<span class=\\"hljs-number\\">3</span>){\\n                count+=dp[j][key]\\n              }\\n            }\\n          }\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n          <span class=\\"hljs-keyword\\">if</span>(rating[i]&lt;rating[j]){\\n            <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> key <span class=\\"hljs-keyword\\">in</span> dp[j]){\\n              <span class=\\"hljs-keyword\\">if</span>(dp[i][+key+<span class=\\"hljs-number\\">1</span>]==<span class=\\"hljs-literal\\">null</span>){\\n                dp[i][+key+<span class=\\"hljs-number\\">1</span>]=dp[j][key]\\n              }<span class=\\"hljs-keyword\\">else</span>{\\n                dp[i][+key+<span class=\\"hljs-number\\">1</span>]+=dp[j][key]\\n              }\\n              <span class=\\"hljs-keyword\\">if</span>(+key+<span class=\\"hljs-number\\">1</span>===<span class=\\"hljs-number\\">3</span>){\\n                count+=dp[j][key]\\n              }\\n            }\\n          }\\n        }\\n      }\\n      dp[i][<span class=\\"hljs-number\\">1</span>]=<span class=\\"hljs-number\\">1</span>\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(dp)</span>\\n    <span class=\\"hljs-keyword\\">return</span> count\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"count-number-of-teams","created_at":"2020-03-29","timeArr":[2020,2,29,11,13,54,0],"hasThinking":false,"content":"<p> <code>n</code> 名士兵站成一排。每个士兵都有一个 <strong>独一无二</strong> 的评分 <code>rating</code> 。</p>\\n\\n<p>每 <strong>3</strong> 个士兵可以组成一个作战单位，分组规则如下：</p>\\n\\n<ul>\\n\\t<li>从队伍中选出下标分别为 <code>i</code>、<code>j</code>、<code>k</code> 的 3 名士兵，他们的评分分别为 <code>rating[i]</code>、<code>rating[j]</code>、<code>rating[k]</code></li>\\n\\t<li>作战单位需满足： <code>rating[i] < rating[j] < rating[k]</code> 或者 <code>rating[i] > rating[j] > rating[k]</code> ，其中  <code>0 <= i < j < k < n</code></li>\\n</ul>\\n\\n<p>请你返回按上述条件可以组建的作战单位数量。每个士兵都可以是多个作战单位的一部分。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>rating = [2,5,3,4,1]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>我们可以组建三个作战单位 (2,3,4)、(5,4,1)、(5,3,1) 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>rating = [2,1,3]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>根据题目条件，我们无法组建作战单位。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>rating = [1,2,3,4]\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>n == rating.length</code></li>\\n\\t<li><code>3 <= n <= 1000</code></li>\\n\\t<li><code>1 <= rating[i] <= 10^5</code></li>\\n\\t<li><code>rating</code> 中的元素都是唯一的</li>\\n</ul>\\n","title":"1395. 统计作战单位数","relatedTags":["树状数组","数组","动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1395","slug":"1395-Count-Number-of-Teams"}')}}]);