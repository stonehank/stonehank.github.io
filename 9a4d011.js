(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{1041:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">a</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">b</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">c</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numMovesStones = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">a, b, c</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> x=<span class=\\"hljs-built_in\\">Math</span>.min(a,b,c),\\n      z=<span class=\\"hljs-built_in\\">Math</span>.max(a,b,c),\\n      y=a+b+c-x-z\\n  <span class=\\"hljs-keyword\\">let</span> max=z-x<span class=\\"hljs-number\\">-2</span>\\n  <span class=\\"hljs-keyword\\">let</span> min=<span class=\\"hljs-built_in\\">Math</span>.min(y-x<span class=\\"hljs-number\\">-1</span>,z-y<span class=\\"hljs-number\\">-1</span>)\\n  <span class=\\"hljs-keyword\\">if</span>(y-x<span class=\\"hljs-number\\">-1</span>===<span class=\\"hljs-number\\">0</span> &amp;&amp; z-y<span class=\\"hljs-number\\">-1</span>===<span class=\\"hljs-number\\">0</span>)min=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>((y-x<span class=\\"hljs-number\\">-1</span>&lt;=<span class=\\"hljs-number\\">1</span> || z-y<span class=\\"hljs-number\\">-1</span>&lt;=<span class=\\"hljs-number\\">1</span>))min=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">return</span> [<span class=\\"hljs-built_in\\">Math</span>.min(<span class=\\"hljs-number\\">2</span>,min),max]\\n};\\n</code></pre>\\n"],"querySlug":"moving-stones-until-consecutive","created_at":"2019-04-28","timeArr":[2019,3,28,10,45,46,0],"hasThinking":false,"content":"<p>三枚石子放置在数轴上，位置分别为 <code>a</code>，<code>b</code>，<code>c</code>。</p>\\n\\n<p>每一回合，你可以从两端之一拿起一枚石子（位置最大或最小），并将其放入两端之间的任一空闲位置。形式上，假设这三枚石子当前分别位于位置 <code>x, y, z</code> 且 <code>x < y < z</code>。那么就可以从位置 <code>x</code> 或者是位置 <code>z</code> 拿起一枚石子，并将该石子移动到某一整数位置 <code>k</code> 处，其中 <code>x < k < z</code> 且 <code>k != y</code>。</p>\\n\\n<p>当你无法进行任何移动时，即，这些石子的位置连续时，游戏结束。</p>\\n\\n<p>要使游戏结束，你可以执行的最小和最大移动次数分别是多少？ 以长度为 2 的数组形式返回答案：<code>answer = [minimum_moves, maximum_moves]</code></p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>a = 1, b = 2, c = 5\\n<strong>输出：</strong>[1, 2]\\n<strong>解释：</strong>将石子从 5 移动到 4 再移动到 3，或者我们可以直接将石子移动到 3。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>a = 4, b = 3, c = 2\\n<strong>输出：</strong>[0, 0]\\n<strong>解释：</strong>我们无法进行任何移动。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 <= a <= 100</code></li>\\n\\t<li><code>1 <= b <= 100</code></li>\\n\\t<li><code>1 <= c <= 100</code></li>\\n\\t<li><code>a != b, b != c, c != a</code></li>\\n</ol>\\n","title":"1033. 移动石子直到连续","relatedTags":["脑筋急转弯","数学"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1033","slug":"1033-Moving-Stones-Until-Consecutive"}')}}]);