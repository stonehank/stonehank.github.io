(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{1097:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">H2O</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">__init__</span><span class=\\"hljs-params\\">(self)</span>:</span>\\n        self.O=<span class=\\"hljs-number\\">0</span>\\n        self.H=<span class=\\"hljs-number\\">0</span>\\n        self.memo={}\\n        self.memo[<span class=\\"hljs-string\\">\'O\'</span>]=<span class=\\"hljs-number\\">0</span>\\n        self.memo[<span class=\\"hljs-string\\">\'H\'</span>]=<span class=\\"hljs-number\\">0</span>\\n        self.oS=<span class=\\"hljs-literal\\">True</span>\\n        self.hS=<span class=\\"hljs-literal\\">True</span>\\n        <span class=\\"hljs-keyword\\">pass</span>\\n\\n\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">hydrogen</span><span class=\\"hljs-params\\">(self, releaseHydrogen)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type releaseHydrogen: method\\n        :rtype: void\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-keyword\\">if</span> <span class=\\"hljs-keyword\\">not</span> self.hS <span class=\\"hljs-keyword\\">and</span> <span class=\\"hljs-keyword\\">not</span> self.oS:\\n            self.memo[<span class=\\"hljs-string\\">\'H\'</span>]-=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">elif</span> self.H==<span class=\\"hljs-number\\">2</span>:\\n            self.memo[<span class=\\"hljs-string\\">\'H\'</span>]+=<span class=\\"hljs-number\\">1</span>\\n            self.memo[<span class=\\"hljs-string\\">\'hF\'</span>]=releaseHydrogen\\n            self.hS=<span class=\\"hljs-literal\\">False</span>\\n            <span class=\\"hljs-keyword\\">return</span>\\n        <span class=\\"hljs-comment\\"># releaseHydrogen() outputs \\"H\\". Do not change or remove this line.</span>\\n        releaseHydrogen()\\n        self.H+=<span class=\\"hljs-number\\">1</span>\\n        self.oS=<span class=\\"hljs-literal\\">True</span>\\n        self.hS=<span class=\\"hljs-literal\\">True</span>\\n        <span class=\\"hljs-keyword\\">while</span> self.memo[<span class=\\"hljs-string\\">\'H\'</span>]&gt;=<span class=\\"hljs-number\\">2</span> <span class=\\"hljs-keyword\\">and</span> self.memo[<span class=\\"hljs-string\\">\'O\'</span>]&gt;=<span class=\\"hljs-number\\">1</span>:\\n            self.memo[<span class=\\"hljs-string\\">\'oF\'</span>]()\\n            self.memo[<span class=\\"hljs-string\\">\'hF\'</span>]()\\n            self.memo[<span class=\\"hljs-string\\">\'hF\'</span>]()\\n            self.memo[<span class=\\"hljs-string\\">\'H\'</span>]-=<span class=\\"hljs-number\\">2</span>\\n            self.memo[<span class=\\"hljs-string\\">\'O\'</span>]-=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">if</span> self.H==<span class=\\"hljs-number\\">2</span> <span class=\\"hljs-keyword\\">and</span> self.O==<span class=\\"hljs-number\\">1</span>:\\n            self.H=<span class=\\"hljs-number\\">0</span>\\n            self.O=<span class=\\"hljs-number\\">0</span>\\n\\n\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">oxygen</span><span class=\\"hljs-params\\">(self, releaseOxygen)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type releaseOxygen: method\\n        :rtype: void\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-keyword\\">if</span> <span class=\\"hljs-keyword\\">not</span> self.hS <span class=\\"hljs-keyword\\">and</span> <span class=\\"hljs-keyword\\">not</span> self.oS:\\n            self.memo[<span class=\\"hljs-string\\">\'O\'</span>]-=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">elif</span> self.O==<span class=\\"hljs-number\\">1</span>:\\n            self.memo[<span class=\\"hljs-string\\">\'O\'</span>]+=<span class=\\"hljs-number\\">1</span>\\n            self.memo[<span class=\\"hljs-string\\">\'oF\'</span>]=releaseOxygen\\n            self.oS=<span class=\\"hljs-literal\\">False</span>\\n            <span class=\\"hljs-keyword\\">return</span>\\n        <span class=\\"hljs-comment\\"># releaseOxygen() outputs \\"O\\". Do not change or remove this line.</span>\\n        releaseOxygen()\\n        self.O+=<span class=\\"hljs-number\\">1</span>\\n        self.oS=<span class=\\"hljs-literal\\">True</span>\\n        self.hS=<span class=\\"hljs-literal\\">True</span>\\n        <span class=\\"hljs-keyword\\">while</span> self.memo[<span class=\\"hljs-string\\">\'H\'</span>]&gt;=<span class=\\"hljs-number\\">2</span> <span class=\\"hljs-keyword\\">and</span> self.memo[<span class=\\"hljs-string\\">\'O\'</span>]&gt;=<span class=\\"hljs-number\\">1</span>:\\n            self.memo[<span class=\\"hljs-string\\">\'oF\'</span>]()\\n            self.memo[<span class=\\"hljs-string\\">\'hF\'</span>]()\\n            self.memo[<span class=\\"hljs-string\\">\'hF\'</span>]()\\n            self.memo[<span class=\\"hljs-string\\">\'H\'</span>]-=<span class=\\"hljs-number\\">2</span>\\n            self.memo[<span class=\\"hljs-string\\">\'O\'</span>]-=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">if</span> self.H==<span class=\\"hljs-number\\">2</span> <span class=\\"hljs-keyword\\">and</span> self.O==<span class=\\"hljs-number\\">1</span>:\\n            self.H=<span class=\\"hljs-number\\">0</span>\\n            self.O=<span class=\\"hljs-number\\">0</span>       \\n</code></pre>\\n"],"querySlug":"building-h2o","created_at":"2019-07-13","timeArr":[2019,6,13,14,37,48,0],"hasThinking":false,"content":"<p>现在有两种线程，氧 <code>oxygen</code> 和氢 <code>hydrogen</code>，你的目标是组织这两种线程来产生水分子。</p>\\n\\n<p>存在一个屏障（barrier）使得每个线程必须等候直到一个完整水分子能够被产生出来。</p>\\n\\n<p>氢和氧线程会被分别给予 <code>releaseHydrogen</code> 和 <code>releaseOxygen</code> 方法来允许它们突破屏障。</p>\\n\\n<p>这些线程应该三三成组突破屏障并能立即组合产生一个水分子。</p>\\n\\n<p>你必须保证产生一个水分子所需线程的结合必须发生在下一个水分子产生之前。</p>\\n\\n<p>换句话说:</p>\\n\\n<ul>\\n\\t<li>如果一个氧线程到达屏障时没有氢线程到达，它必须等候直到两个氢线程到达。</li>\\n\\t<li>如果一个氢线程到达屏障时没有其它线程到达，它必须等候直到一个氧线程和另一个氢线程到达。</li>\\n</ul>\\n\\n<p>书写满足这些限制条件的氢、氧线程同步代码。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre><strong>输入: </strong>&quot;HOH&quot;\\n<strong>输出: </strong>&quot;HHO&quot;\\n<strong>解释:</strong> &quot;HOH&quot; 和 &quot;OHH&quot; 依然都是有效解。\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre><strong>输入: </strong>&quot;OOHHHH&quot;\\n<strong>输出: </strong>&quot;HHOHHO&quot;\\n<strong>解释:</strong> &quot;HOHHHO&quot;, &quot;OHHHHO&quot;, &quot;HHOHOH&quot;, &quot;HOHHOH&quot;, &quot;OHHHOH&quot;, &quot;HHOOHH&quot;, &quot;HOHOHH&quot; 和 &quot;OHHOHH&quot; 依然都是有效解。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>输入字符串的总长将会是 3<em>n</em>, 1 &le;&nbsp;<em>n</em>&nbsp;&le; 50；</li>\\n\\t<li>输入字符串中的 &ldquo;H&rdquo; 总数将会是 2n 。</li>\\n\\t<li>输入字符串中的 &ldquo;O&rdquo; 总数将会是 n 。</li>\\n</ul>\\n","title":"1117. H2O 生成","relatedTags":["多线程"],"difficult":"Middle","lang":["python"],"uniqueID":"1117","slug":"1117-Building-H2O"}')}}]);