(window.webpackJsonp=window.webpackJsonp||[]).push([[1314],{2112:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minDeletionSize = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> m=A.length,n=A[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;n;j++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;m;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(A[i][j]&lt;A[i<span class=\\"hljs-number\\">-1</span>][j]){\\n        res++\\n        <span class=\\"hljs-keyword\\">break</span>\\n      }\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"delete-columns-to-make-sorted","created_at":"2019-04-15","timeArr":[2019,3,15,14,42,10,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>逐列检查，发现不符合<code>res++</code>。</p>\\n","content":"<p>给你由 <code>n</code> 个小写字母字符串组成的数组 <code>strs</code>，其中每个字符串长度相等。</p>\\n\\n<p>这些字符串可以每个一行，排成一个网格。例如，<code>strs = [\\"abc\\", \\"bce\\", \\"cae\\"]</code> 可以排列为：</p>\\n\\n<pre>\\nabc\\nbce\\ncae</pre>\\n\\n<p>你需要找出并删除 <strong>不是按字典序升序排列的</strong> 列。在上面的例子（下标从 0 开始）中，列 0（<code>\'a\'</code>, <code>\'b\'</code>, <code>\'c\'</code>）和列 2（<code>\'c\'</code>, <code>\'e\'</code>, <code>\'e\'</code>）都是按升序排列的，而列 1（<code>\'b\'</code>, <code>\'c\'</code>, <code>\'a\'</code>）不是，所以要删除列 1 。</p>\\n\\n<p>返回你需要删除的列数。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>strs = [\\"cba\\",\\"daf\\",\\"ghi\\"]\\n<strong>输出：</strong>1\\n<strong>解释：</strong>网格示意如下：\\n  cba\\n  daf\\n  ghi\\n列 0 和列 2 按升序排列，但列 1 不是，所以只需要删除列 1 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>strs = [\\"a\\",\\"b\\"]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>网格示意如下：\\n  a\\n  b\\n只有列 0 这一列，且已经按升序排列，所以不用删除任何列。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>strs = [\\"zyx\\",\\"wvu\\",\\"tsr\\"]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>网格示意如下：\\n  zyx\\n  wvu\\n  tsr\\n所有 3 列都是非升序排列的，所以都要删除。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>n == strs.length</code></li>\\n\\t<li><code>1 <= n <= 100</code></li>\\n\\t<li><code>1 <= strs[i].length <= 1000</code></li>\\n\\t<li><code>strs[i]</code> 由小写英文字母组成</li>\\n</ul>\\n","title":"944. 删列造序","relatedTags":["数组","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"944","slug":"944-Delete-Columns-to-Make-Sorted"}')}}]);