(window.webpackJsonp=window.webpackJsonp||[]).push([[560],{1358:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">mat</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> diagonalSum = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">mat</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> priSum=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> secSum=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> m=mat.length\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n        priSum+=mat[i][i]\\n        secSum+=mat[i][m-i<span class=\\"hljs-number\\">-1</span>]\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(priSum,secSum)</span>\\n    <span class=\\"hljs-keyword\\">if</span>(m % <span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">0</span>){\\n        <span class=\\"hljs-keyword\\">return</span> priSum+secSum\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> mid=<span class=\\"hljs-built_in\\">Math</span>.floor(m/<span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">return</span> priSum+secSum - mat[mid][mid]\\n\\n};\\n</code></pre>\\n"],"querySlug":"matrix-diagonal-sum","created_at":"2020-09-26","timeArr":[2020,8,26,21,54,5,0],"hasThinking":false,"content":"<p>给你一个正方形矩阵 <code>mat</code>，请你返回矩阵对角线元素的和。</p>\\n\\n<p>请你返回在矩阵主对角线上的元素和副对角线上且不在主对角线上元素的和。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例&nbsp; 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/08/14/sample_1911.png\\" style=\\"height:174px; width:336px\\" /></p>\\n\\n<pre>\\n<strong>输入：</strong>mat = [[<strong>1</strong>,2,<strong>3</strong>],\\n&nbsp;           [4,<strong>5</strong>,6],\\n&nbsp;           [<strong>7</strong>,8,<strong>9</strong>]]\\n<strong>输出：</strong>25\\n<strong>解释：</strong>对角线的和为：1 + 5 + 9 + 3 + 7 = 25\\n请注意，元素 mat[1][1] = 5 只会被计算一次。\\n</pre>\\n\\n<p><strong>示例&nbsp; 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>mat = [[<strong>1</strong>,1,1,<strong>1</strong>],\\n&nbsp;           [1,<strong>1</strong>,<strong>1</strong>,1],\\n&nbsp;           [1,<strong>1</strong>,<strong>1</strong>,1],\\n&nbsp;           [<strong>1</strong>,1,1,<strong>1</strong>]]\\n<strong>输出：</strong>8\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>mat = [[<strong>5</strong>]]\\n<strong>输出：</strong>5\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>n == mat.length == mat[i].length</code></li>\\n\\t<li><code>1 &lt;= n &lt;= 100</code></li>\\n\\t<li><code>1 &lt;= mat[i][j] &lt;= 100</code></li>\\n</ul>\\n","title":"1572. 矩阵对角线元素的和","relatedTags":["数组","矩阵"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1572","slug":"1572-Matrix-Diagonal-Sum"}')}}]);