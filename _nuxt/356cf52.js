(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{1114:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> movesToMakeZigzag = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> r1=<span class=\\"hljs-number\\">0</span>,r2=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;nums.length;i+=<span class=\\"hljs-number\\">2</span>){\\n    <span class=\\"hljs-keyword\\">if</span>(i===nums.length<span class=\\"hljs-number\\">-1</span>){\\n      r1+=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,nums[i]-nums[i<span class=\\"hljs-number\\">-1</span>]+<span class=\\"hljs-number\\">1</span>)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      r1+=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,nums[i]-(<span class=\\"hljs-built_in\\">Math</span>.min(nums[i<span class=\\"hljs-number\\">-1</span>],nums[i+<span class=\\"hljs-number\\">1</span>])<span class=\\"hljs-number\\">-1</span>))\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nums.length;i+=<span class=\\"hljs-number\\">2</span>){\\n    <span class=\\"hljs-keyword\\">if</span>(i===<span class=\\"hljs-number\\">0</span>){\\n      r2+=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,nums[i]-nums[i+<span class=\\"hljs-number\\">1</span>]+<span class=\\"hljs-number\\">1</span>)\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(i===nums.length<span class=\\"hljs-number\\">-1</span>){\\n      r2+=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,nums[i]-nums[i<span class=\\"hljs-number\\">-1</span>]+<span class=\\"hljs-number\\">1</span>)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      r2+=<span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">0</span>,nums[i]-(<span class=\\"hljs-built_in\\">Math</span>.min(nums[i<span class=\\"hljs-number\\">-1</span>],nums[i+<span class=\\"hljs-number\\">1</span>])<span class=\\"hljs-number\\">-1</span>))\\n    }\\n  }  \\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-built_in\\">Math</span>.min(r1,r2)\\n};\\n</code></pre>\\n"],"querySlug":"decrease-elements-to-make-array-zigzag","created_at":"2019-08-04","timeArr":[2019,7,4,12,20,8,0],"hasThinking":false,"content":"<p>给你一个整数数组&nbsp;<code>nums</code>，每次 <strong>操作</strong>&nbsp;会从中选择一个元素并 <strong>将该元素的值减少&nbsp;1</strong>。</p>\\n\\n<p>如果符合下列情况之一，则数组&nbsp;<code>A</code>&nbsp;就是 <strong>锯齿数组</strong>：</p>\\n\\n<ul>\\n\\t<li>每个偶数索引对应的元素都大于相邻的元素，即&nbsp;<code>A[0] &gt; A[1] &lt; A[2] &gt; A[3] &lt; A[4] &gt; ...</code></li>\\n\\t<li>或者，每个奇数索引对应的元素都大于相邻的元素，即&nbsp;<code>A[0] &lt; A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; ...</code></li>\\n</ul>\\n\\n<p>返回将数组&nbsp;<code>nums</code>&nbsp;转换为锯齿数组所需的最小操作次数。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>nums = [1,2,3]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>我们可以把 2 递减到 0，或把 3 递减到 1。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>nums = [9,6,1,6,2]\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\\n\\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\\n</ul>\\n","title":"1144. 递减元素使数组呈锯齿状","relatedTags":["贪心","数组"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1144","slug":"1144-Decrease-Elements-To-Make-Array-Zigzag"}')}}]);