__NUXT_JSONP__("/article/source-code-react-snapshot", (function(a,b,c){return {data:[{slug:a,articleDetails:{content:"\u003Cp\u003E\u003Ccode\u003Ereact-snapshot\u003C\u002Fcode\u003E一个服务端渲染组件，由于内部依赖库和相关\u003Ccode\u003EAPI\u003C\u002Fcode\u003E较老，而且有1年没更新了，\n就不去太详细解释，有兴趣可以自行看源码内容\u003Ccode\u003Esrc目录\u003C\u002Fcode\u003E(带详细注释)。\u003C\u002Fp\u003E\n\u003Cp\u003E读了这个库，要了解\u003Ccode\u003E服务端渲染\u003C\u002Fcode\u003E是什么流程，因此这里主要讲\u003Ccode\u003E执行流程\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch3 id=\"pei-zhi\"\u003E配置\u003C\u002Fh3\u003E\n\u003Cp\u003E这个库需要更改\u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E的\u003Ccode\u003Ebuild\u003C\u002Fcode\u003E，更改如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E- &quot;build&quot;: &quot;react-scripts build&quot;\n+ &quot;build&quot;: &quot;react-scripts build &amp;&amp; react-snapshot&quot;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然后改变\u003Ccode\u003Erender\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E- import ReactDOM from 'react-dom';\n+ import { render } from 'react-snapshot';\n\n- ReactDOM.render(\n+ render(\n    &lt;App\u002F&gt;,\n    document.getElementById('root')\n  );\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"zhi-xing-liu-cheng\"\u003E执行流程\u003C\u002Fh3\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Cp\u003E输入\u003Ccode\u003Enpm run build\u003C\u002Fcode\u003E，先执行\u003Ccode\u003Ereact-scripts build\u003C\u002Fcode\u003E，再执行\u003Ccode\u003Ereact-snapshot\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E通过\u003Ccode\u003Ebin\u003C\u002Fcode\u003E内部文件执行\u003Ccode\u003Ecli\u003C\u002Fcode\u003E \u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E执行\u003Ccode\u003Ecli\u003C\u002Fcode\u003E，处理相关配置(目的是转换路径，确认需要快照的页面路径)\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E获取\u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E内部的\u003Ccode\u003Ehomepage\u003C\u002Fcode\u003E，确保以\u003Ccode\u003E\u002F\u003C\u002Fcode\u003E结尾，如果不存在则用\u003Ccode\u003E\u002F\u003C\u002Fcode\u003E表示。\u003C\u002Fli\u003E\n\u003Cli\u003E将路径转换为绝对路径。\u003C\u002Fli\u003E\n\u003Cli\u003E将\u003Ccode\u003Ehomepage\u003C\u002Fcode\u003E加入\u003Ccode\u003Einclude\u003C\u002Fcode\u003E，后面将会不断\u003Ccode\u003E.shift()\u003C\u002Fcode\u003E处理内部的路径。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E重命名之前的\u003Ccode\u003Eindex.html\u003C\u002Fcode\u003E为\u003Ccode\u003E200.html\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E定义服务器\u003Ccode\u003EServer\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E在\u003Ccode\u003Ebuild\u003C\u002Fcode\u003E内部使用了\u003Ccode\u003EhistoryApiFallback\u003C\u002Fcode\u003E(防止SPA应用404)。\u003C\u002Fli\u003E\n\u003Cli\u003E托管静态\u003Ccode\u003Ebuild\u003C\u002Fcode\u003E内资源到用户定义的\u003Ccode\u003EoutputFile\u003C\u002Fcode\u003E中，默认也是\u003Ccode\u003Ebuild\u003C\u002Fcode\u003E。\u003C\u002Fli\u003E\n\u003Cli\u003E处理了存在\u003Ccode\u003Eproxy\u003C\u002Fcode\u003E(\u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E内部的\u003Ccode\u003Eproxy\u003C\u002Fcode\u003E)的情况。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E开启服务器（使用任意未占用端口）\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E在上面端口中开启爬虫\u003Ccode\u003ECrawler\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E对参数\u003Ccode\u003Einclude\u003C\u002Fcode\u003E(数组)执行\u003Ccode\u003E.shift()\u003C\u002Fcode\u003E，开始爬行\u003Ccode\u003Esnapshot\u003C\u002Fcode\u003E\u003Col\u003E\n\u003Cli\u003E使用\u003Ccode\u003Ejsdom\u003C\u002Fcode\u003E，创建虚拟dom。\u003C\u002Fli\u003E\n\u003Cli\u003E监听\u003Ccode\u003Ewindow\u003C\u002Fcode\u003E创建，定义\u003Ccode\u003Ewindow.reactSnapshotRender\u003C\u002Fcode\u003E，它的作用是改变一个\u003Ccode\u003Eflag\u003C\u002Fcode\u003E。 这个\u003Ccode\u003Eflag\u003C\u002Fcode\u003E的改变说明了当前\u003Ccode\u003Epath\u003C\u002Fcode\u003E已经成功获取到\u003Ccode\u003Ejs\u003C\u002Fcode\u003E文件，并且执行了定义在客户端的\u003Ccode\u003Erender\u003C\u002Fcode\u003E，已经将\u003Ccode\u003EReact\u003C\u002Fcode\u003E\n 首页的\u003Ccode\u003Edocument\u003C\u002Fcode\u003E结构放到了虚拟\u003Ccode\u003Edocument\u003C\u002Fcode\u003E内部。\u003C\u002Fli\u003E\n\u003Cli\u003E拦截当前\u003Ccode\u003Epath\u003C\u002Fcode\u003E上的外部资源请求，查看是否相同的\u003Ccode\u003Ehost\u003C\u002Fcode\u003E，并且符合\u003Ccode\u003Ejsdom.feature\u003C\u002Fcode\u003E的配置。 当资源符合要求，便会请求并且执行(也就是\u003Ccode\u003Ebuild\u003C\u002Fcode\u003E中\u003Ccode\u003Exxx.main.js\u003C\u002Fcode\u003E的代码)，执行它便会触发\u003Ccode\u003Erender\u003C\u002Fcode\u003E，\n 结果就回到第1步中说的改变\u003Ccode\u003Eflag\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E此时虚拟\u003Ccode\u003Edocument\u003C\u002Fcode\u003E结构已经生成，经过\u003Ccode\u003EscriptJS\u003C\u002Fcode\u003E检查(匹配则删除)和\u003Ccode\u003Ewindow.react_snapshot_state\u003C\u002Fcode\u003E，\n它的作用是定义一个数据，客户端运行时，能从\u003Ccode\u003Ewindow.react_snapshot_state\u003C\u002Fcode\u003E获取到这个数据。\u003C\u002Fli\u003E\n\u003Cli\u003E序列化这个\u003Ccode\u003Edocument\u003C\u002Fcode\u003E，检查\u003Ccode\u003Edocument\u003C\u002Fcode\u003E内部的\u003Ccode\u003E&lt;a&gt;\u003C\u002Fcode\u003E和\u003Ccode\u003E&lt;iframe\u003C\u002Fcode\u003E是否有链接到其他页面或者目录，如果有，添加到\u003Ccode\u003Einclude\u003C\u002Fcode\u003E中，\n后续执行快照。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E给\u003Ccode\u003Epath\u003C\u002Fcode\u003E添加\u003Ccode\u003E.html\u003C\u002Fcode\u003E后缀或者(如果是目录添加)\u003Ccode\u003Eindex.html\u003C\u002Fcode\u003E，创建并且写入文件。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E递归到\u003Ccode\u003E第7步\u003C\u002Fcode\u003E继续执行其他路径的快照。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch4 id=\"dao-tu\"\u003E导图\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fraw.githubusercontent.com\u002Fstonehank\u002Fsourcecode-analysis\u002Fmaster\u002Fsource-code.react-snapshot\u002Freact-snapshot.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n",toc:[{anchor:"pei-zhi",level:b,text:"配置"},{anchor:"zhi-xing-liu-cheng",level:b,text:"执行流程"},{anchor:"dao-tu",level:c,text:"导图"}],relatedTags:["react","源码","npm"],created_at:"2018-12-04",timeArr:[2018,11,c,8,28,32,0],title:"源码阅读-react-snapshot",uuid:"a1837b08e3c7d440f06a453b4a0a19e1078abcfa",summary:"\u003Cp\u003E\u003Ccode\u003Ereact-snapshot\u003C\u002Fcode\u003E一个服务端渲染组件，由于内部依赖库和相关\u003Ccode\u003EAPI\u003C\u002Fcode\u003E较老，而且有1年没更新了，\n就不去太详细解释，有兴趣可以自行看源码内容\u003Ccode\u003Esrc目录\u003C\u002Fcode\u003E(带详细注释)。\u003C\u002Fp\u003E\n\u003Cp\u003E读了这个库，要了解\u003Ccode\u003E服务端渲染\u003C\u002Fcode\u003E是什么流程，因此这里主要讲\u003Ccode\u003E执行流程\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch4\u003E配置\u003C\u002Fh4\u003E\n\u003Cp\u003E这个库需要更改\u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E...\u003C\u002Fp\u003E",slug:a,sha:"eee62b3fcb60e43c2db14c27b02e523dc16d5be4"}}],fetch:{},mutations:void 0}}("source-code-react-snapshot",3,4)));