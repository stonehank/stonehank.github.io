(window.webpackJsonp=window.webpackJsonp||[]).push([[332],{1130:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for singly-linked list.\\n * function ListNode(val) {\\n *     this.val = val;\\n *     this.next = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{ListNode}</span> <span class=\\"hljs-variable\\">head</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{ListNode}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> removeZeroSumSublists = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">head</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> preNode=<span class=\\"hljs-keyword\\">new</span> ListNode(<span class=\\"hljs-literal\\">null</span>)\\n  <span class=\\"hljs-keyword\\">let</span> node=head\\n  <span class=\\"hljs-keyword\\">let</span> preHead=[]\\n  <span class=\\"hljs-keyword\\">let</span> preSum=[]\\n  preNode.next=node\\n  <span class=\\"hljs-keyword\\">let</span> lastNode=preNode\\n  \\n  <span class=\\"hljs-keyword\\">while</span>(node){\\n    <span class=\\"hljs-keyword\\">if</span>(node.val===<span class=\\"hljs-number\\">0</span>){\\n      lastNode.next=node.next\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      lastNode=node\\n    }\\n\\n    node=node.next\\n  }\\n  lastNode=preNode\\n  node=head\\n  \\n  <span class=\\"hljs-keyword\\">while</span>(node){\\n    <span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> found=<span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">for</span>(;i&lt;preSum.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(node.val+preSum[i]===<span class=\\"hljs-number\\">0</span>){\\n        preHead[i].next=node.next\\n        found=<span class=\\"hljs-literal\\">true</span>\\n        <span class=\\"hljs-keyword\\">break</span>\\n      }\\n    }\\n\\n   <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;preSum.length;j++){\\n      preSum[j]+=node.val\\n    }\\n\\n    <span class=\\"hljs-keyword\\">if</span>(found){\\n      preSum=preSum.slice(<span class=\\"hljs-number\\">0</span>,i+<span class=\\"hljs-number\\">1</span>)\\n      preHead=preHead.slice(<span class=\\"hljs-number\\">0</span>,i+<span class=\\"hljs-number\\">1</span>)      \\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      preSum.push(node.val)\\n      preHead.push(lastNode)     \\n    }\\n  \\n    lastNode=node\\n    node=node.next\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> preNode.next\\n};\\n</code></pre>\\n"],"querySlug":"remove-zero-sum-consecutive-nodes-from-linked-list","created_at":"2019-08-25","timeArr":[2019,7,25,11,34,51,0],"hasThinking":false,"content":"<p>给你一个链表的头节点&nbsp;<code>head</code>，请你编写代码，反复删去链表中由 <strong>总和</strong>&nbsp;值为 <code>0</code> 的连续节点组成的序列，直到不存在这样的序列为止。</p>\\n\\n<p>删除完毕后，请你返回最终结果链表的头节点。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p>你可以返回任何满足题目要求的答案。</p>\\n\\n<p>（注意，下面示例中的所有序列，都是对&nbsp;<code>ListNode</code>&nbsp;对象序列化的表示。）</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>head = [1,2,-3,3,1]\\n<strong>输出：</strong>[3,1]\\n<strong>提示：</strong>答案 [1,2,1] 也是正确的。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>head = [1,2,3,-3,4]\\n<strong>输出：</strong>[1,2,4]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>head = [1,2,3,-3,-2]\\n<strong>输出：</strong>[1]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>给你的链表中可能有 <code>1</code> 到&nbsp;<code>1000</code>&nbsp;个节点。</li>\\n\\t<li>对于链表中的每个节点，节点的值：<code>-1000 &lt;= node.val &lt;= 1000</code>.</li>\\n</ul>\\n","title":"1171. 从链表中删去总和值为零的连续节点","relatedTags":["哈希表","链表"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1171","slug":"1171-Remove-Zero-Sum-Consecutive-Nodes-from-Linked-List"}')}}]);