(window.webpackJsonp=window.webpackJsonp||[]).push([[488],{1286:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxScore = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">str</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> init=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> max=<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">if</span>(str[<span class=\\"hljs-number\\">0</span>]===<span class=\\"hljs-string\\">\'0\'</span>)init=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;str.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(str[i]===<span class=\\"hljs-string\\">\'1\'</span>)init++\\n  }\\n  max=init\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;str.length<span class=\\"hljs-number\\">-1</span>;i++){\\n    <span class=\\"hljs-keyword\\">let</span> s=str[i]\\n    s===<span class=\\"hljs-string\\">\'0\'</span> ? init++ : init--\\n    max=<span class=\\"hljs-built_in\\">Math</span>.max(max,init)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> max\\n};\\n</code></pre>\\n"],"querySlug":"maximum-score-after-splitting-a-string","created_at":"2020-04-26","timeArr":[2020,3,26,10,36,48,0],"hasThinking":false,"content":"<p>给你一个由若干 0 和 1 组成的字符串 <code>s</code> ，请你计算并返回将该字符串分割成两个 <strong>非空</strong> 子字符串（即&nbsp;<strong>左</strong> 子字符串和 <strong>右</strong> 子字符串）所能获得的最大得分。</p>\\n\\n<p>「分割字符串的得分」为 <strong>左</strong> 子字符串中 <strong>0</strong> 的数量加上 <strong>右</strong> 子字符串中 <strong>1</strong> 的数量。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;011101&quot;\\n<strong>输出：</strong>5 \\n<strong>解释：</strong>\\n将字符串 s 划分为两个非空子字符串的可行方案有：\\n左子字符串 = &quot;0&quot; 且 右子字符串 = &quot;11101&quot;，得分 = 1 + 4 = 5 \\n左子字符串 = &quot;01&quot; 且 右子字符串 = &quot;1101&quot;，得分 = 1 + 3 = 4 \\n左子字符串 = &quot;011&quot; 且 右子字符串 = &quot;101&quot;，得分 = 1 + 2 = 3 \\n左子字符串 = &quot;0111&quot; 且 右子字符串 = &quot;01&quot;，得分 = 1 + 1 = 2 \\n左子字符串 = &quot;01110&quot; 且 右子字符串 = &quot;1&quot;，得分 = 2 + 1 = 3\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;00111&quot;\\n<strong>输出：</strong>5\\n<strong>解释：</strong>当 左子字符串 = &quot;00&quot; 且 右子字符串 = &quot;111&quot; 时，我们得到最大得分 = 2 + 3 = 5\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;1111&quot;\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 &lt;= s.length &lt;= 500</code></li>\\n\\t<li>字符串 <code>s</code> 仅由字符 <code>&#39;0&#39;</code> 和 <code>&#39;1&#39;</code> 组成。</li>\\n</ul>\\n","title":"1422. 分割字符串的最大得分","relatedTags":["字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1422","slug":"1422-Maximum-Score-After-Splitting-a-String"}')}}]);