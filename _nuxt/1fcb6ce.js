(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{645:function(e){e.exports=JSON.parse('{"content":"<h2 id=\\"jie-xi-blob-shi-xian-tu-pian-yu-lan\\">解析blob实现图片预览</h2>\\n<p>原理很简单，<code>blob</code>是一个储存了二进制的大对象，而<code>createObjectURL</code>可以解析blob成为一个url格式，\\n再用<code>img</code>标签渲染即可。</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code>  <span class=\\"hljs-keyword\\">if</span>(blob.type.indexOf(<span class=\\"hljs-string\\">\'image\'</span>)!==<span class=\\"hljs-number\\">-1</span>){\\n    newURL=<span class=\\"hljs-built_in\\">window</span>.URL.createObjectURL(blob)\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  }<span class=\\"hljs-keyword\\">else</span>{\\n    alert(<span class=\\"hljs-string\\">\\"选择图片\\"</span>)\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span></code></pre></code></pre>\\n<p>注意：<code>input type=file</code>标签的属性files就是blob对象的集合，不需要再另外创建blob对象。</p>\\n<p>另外，还可以使用<code>FileReader</code>对blob进行解析，其中也包括解析成url格式</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code> fr=<span class=\\"hljs-keyword\\">new</span> FileReader()\\n  <span class=\\"hljs-keyword\\">if</span>(blob.type.indexOf(<span class=\\"hljs-string\\">\'image\'</span>)!==<span class=\\"hljs-number\\">-1</span>){\\n    fr.readAsDataURL(blob);\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  }<span class=\\"hljs-keyword\\">else</span>{\\n    alert(<span class=\\"hljs-string\\">\\"选择图片\\"</span>)\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span></code></pre></code></pre>\\n<p>但由于<code>FileReader</code>的解析过程使异步的，必须在它的监听函数内调用解析值<code>result</code></p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code>fr.onload=<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>)</span>{\\n  newURL=fr.result\\n  createIMG()\\n}</code></pre></code></pre>\\n<p>代码地址：<a href=\\"https://gist.github.com/stonehank/113b2164e4c7fc4bdefdab96d34ad917\\">https://gist.github.com/stonehank/113b2164e4c7fc4bdefdab96d34ad917</a></p>\\n","toc":[{"anchor":"jie-xi-blob-shi-xian-tu-pian-yu-lan","level":2,"text":"解析blob实现图片预览"}],"relatedTags":null,"created_at":"2018-07-25","timeArr":[2018,6,25,0,0,0,0],"title":"通过解析blob实现图片预览","uuid":"c210dfbee9273c04ed715f0cf70a75b648672b17","summary":"<h4>解析blob实现图片预览</h4>\\n<p>原理很简单，<code>blob</code>是一个储存了二进制的大对象，而<code>createObjectURL</code>可以解析blob成为一个url格式，\\n再用<code>img</code>标签渲染即可。</p>\\n<pre class=\\"hljs\\"><code>  <span class=\\"hljs-keyword\\">if</span>(blob.type.indexOf(<span class=\\"hljs-string\\">\'image\'</span>)!==<span class=\\"hljs-number\\">-1</span>){\\n    newURL=<span class=\\"hljs-built_in\\">window</span>.U...</code></pre>","slug":"tong-guo-jie-xi-blob-shi-xian-tu-pian-yu-lan","sha":"bf946078e90730d7d626fe3573c4adad5f9cd0e2"}')}}]);