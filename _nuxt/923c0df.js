(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{1066:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">matrix</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxEqualRowsAfterFlips = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">matrix</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> m=matrix.length,n=matrix[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">let</span> max=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n    <span class=\\"hljs-keyword\\">let</span> flips=flip(matrix[i])\\n    <span class=\\"hljs-comment\\">// console.log(flips)</span>\\n    max=<span class=\\"hljs-built_in\\">Math</span>.max(max,checkSameLine(matrix,flips))\\n    <span class=\\"hljs-comment\\">// console.log(max)</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> max\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">flip</span>(<span class=\\"hljs-params\\">line</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> count1=<span class=\\"hljs-number\\">0</span>,count0=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> to1=<span class=\\"hljs-built_in\\">Array</span>(n).fill(<span class=\\"hljs-literal\\">null</span>),to0=<span class=\\"hljs-built_in\\">Array</span>(n).fill(<span class=\\"hljs-literal\\">null</span>)\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;line.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(line[i]===<span class=\\"hljs-number\\">0</span>){\\n        to1[i]=<span class=\\"hljs-literal\\">true</span>\\n        count1++\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        to0[i]=<span class=\\"hljs-literal\\">true</span>\\n        count0++\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(count1&lt;count0)<span class=\\"hljs-keyword\\">return</span> to1\\n    <span class=\\"hljs-keyword\\">return</span> to0\\n  }\\n  \\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">checkSameLine</span>(<span class=\\"hljs-params\\">matrix,flip</span>)</span>{\\n    <span class=\\"hljs-comment\\">// console.log(matrix,flip)</span>\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n      <span class=\\"hljs-keyword\\">let</span> isSame=<span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">1</span>;j&lt;n;j++){\\n        <span class=\\"hljs-comment\\">// console.log(flip[j],flip[j-1],j)</span>\\n          <span class=\\"hljs-keyword\\">if</span>((flip[j] &amp;&amp; flip[j<span class=\\"hljs-number\\">-1</span>]) || (!flip[j] &amp;&amp; !flip[j<span class=\\"hljs-number\\">-1</span>])){\\n            <span class=\\"hljs-keyword\\">if</span>(matrix[i][j<span class=\\"hljs-number\\">-1</span>]!==matrix[i][j]){\\n              isSame=<span class=\\"hljs-literal\\">false</span>\\n              <span class=\\"hljs-keyword\\">break</span>\\n            }\\n          }<span class=\\"hljs-keyword\\">else</span>{\\n             <span class=\\"hljs-keyword\\">if</span>(matrix[i][j<span class=\\"hljs-number\\">-1</span>]===matrix[i][j]){\\n              isSame=<span class=\\"hljs-literal\\">false</span>\\n              <span class=\\"hljs-keyword\\">break</span>\\n            }\\n          }\\n      }\\n      <span class=\\"hljs-keyword\\">if</span>(isSame)count++\\n      <span class=\\"hljs-comment\\">// console.log(i,count,isSame)</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> count\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"flip-columns-for-maximum-number-of-equal-rows","created_at":"2019-06-02","timeArr":[2019,5,2,11,9,45,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>遍历每一行，假设当前行在结果当中，意思就是找出所有与当前行中每一列的异或值都相等(都为<code>1</code>或者都为<code>0</code>)的所有行，</p>\\n<p>例如，当前行为<code>[1,0,1,0,1]</code></p>\\n<p>那么<code>[1,0,1,0,1]</code>和<code>[0,1,0,1,0]</code>都是与它异或值相等的行，异或值分别为<code>[0,0,0,0,0]</code>和<code>[1,1,1,1,1]</code>，</p>\\n<p>而<code>[1,1,1,0,1]</code>则不是，异或值为<code>[0,1,0,0,0]</code>；</p>\\n<p>对于每一次找到异或值相等的行，使用一个<code>hash</code>将行的索引保存起来，后面遇到直接跳过（避免重复计算），因为如果不跳过，那么此行再次找到相同的异或值，一定是已经包含在之前计算的最大结果内。</p>\\n","content":"<p>给定由若干 0 和 1 组成的矩阵 <code>matrix</code>，从中选出任意数量的列并翻转其上的 <strong>每个 </strong>单元格。翻转后，单元格的值从 0 变成 1，或者从 1 变为 0 。</p>\\n\\n<p>回经过一些翻转后，行与行之间所有值都相等的最大行数。</p>\\n\\n<p> </p>\\n\\n<ol>\\n</ol>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>[[0,1],[1,1]]\\n<strong>输出：</strong>1\\n<strong>解释：</strong>不进行翻转，有 1 行所有值都相等。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>[[0,1],[1,0]]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>翻转第一列的值之后，这两行都由相等的值组成。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>[[0,0,0],[0,0,1],[1,1,0]]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>翻转前两列的值之后，后两行由相等的值组成。</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 <= matrix.length <= 300</code></li>\\n\\t<li><code>1 <= matrix[i].length <= 300</code></li>\\n\\t<li>所有 <code>matrix[i].length</code> 都相等</li>\\n\\t<li><code>matrix[i][j]</code> 为 <code>0</code> 或 <code>1</code></li>\\n</ol>\\n","title":"1072. 按列翻转得到最大值等行数","relatedTags":["数组","哈希表","矩阵"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1072","slug":"1072-Flip-Columns-For-Maximum-Number-of-Equal-Rows"}')}}]);