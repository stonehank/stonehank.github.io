(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{1020:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxScoreSightseeingPair = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> aux=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A.length;i++){\\n    aux[i]=[A[i],i]\\n  }\\n  aux.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>b[<span class=\\"hljs-number\\">0</span>]-a[<span class=\\"hljs-number\\">0</span>])\\n  <span class=\\"hljs-keyword\\">let</span> maxP=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;aux.length;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=i+<span class=\\"hljs-number\\">1</span>;j&lt;aux.length;j++){\\n      <span class=\\"hljs-keyword\\">let</span> mainP=aux[i][<span class=\\"hljs-number\\">0</span>]+aux[j][<span class=\\"hljs-number\\">0</span>]\\n      <span class=\\"hljs-keyword\\">let</span> curP=mainP-(<span class=\\"hljs-built_in\\">Math</span>.abs(aux[i][<span class=\\"hljs-number\\">1</span>]-aux[j][<span class=\\"hljs-number\\">1</span>]))\\n      <span class=\\"hljs-keyword\\">if</span>(curP&gt;maxP){\\n        maxP=curP\\n      }\\n      <span class=\\"hljs-keyword\\">if</span>(mainP&lt;maxP)<span class=\\"hljs-keyword\\">break</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> maxP\\n};\\n</code></pre>\\n"],"querySlug":"best-sightseeing-pair","created_at":"2019-03-24","timeArr":[2019,2,24,10,31,30,0],"hasThinking":false,"content":"<p>给你一个正整数数组 <code>values</code>，其中 <code>values[i]</code> 表示第 <code>i</code> 个观光景点的评分，并且两个景点 <code>i</code> 和 <code>j</code> 之间的 <strong>距离</strong> 为 <code>j - i</code>。</p>\\n\\n<p>一对景点（<code>i < j</code>）组成的观光组合的得分为 <code>values[i] + values[j] + i - j</code> ，也就是景点的评分之和<strong> 减去 </strong>它们两者之间的距离。</p>\\n\\n<p>返回一对观光景点能取得的最高分。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>values = [8,1,5,2,6]\\n<strong>输出：</strong>11\\n<strong>解释：</strong>i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>values = [1,2]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 <= values.length <= 5 * 10<sup>4</sup></code></li>\\n\\t<li><code>1 <= values[i] <= 1000</code></li>\\n</ul>\\n","title":"1014. 最佳观光组合","relatedTags":["数组","动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1014","slug":"1014-Best-Sightseeing-Pair"}')}}]);