(window.webpackJsonp=window.webpackJsonp||[]).push([[1204],{2002:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> longestMountain = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> down1=<span class=\\"hljs-number\\">0</span>,down2=<span class=\\"hljs-number\\">-1</span>,up=<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">let</span> maxLen=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;A.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(A[i]&gt;A[i<span class=\\"hljs-number\\">-1</span>]){\\n      <span class=\\"hljs-keyword\\">if</span>(down2!==<span class=\\"hljs-number\\">-1</span>){\\n        down1=i<span class=\\"hljs-number\\">-1</span>\\n        down2=<span class=\\"hljs-number\\">-1</span>\\n        up=i\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        up=i\\n      }\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(A[i]&lt;A[i<span class=\\"hljs-number\\">-1</span>]){\\n      <span class=\\"hljs-keyword\\">if</span>(up===<span class=\\"hljs-number\\">-1</span>){\\n        down1=i\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        down2=i        \\n      }\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      down1=i\\n      down2=<span class=\\"hljs-number\\">-1</span>\\n      up=<span class=\\"hljs-number\\">-1</span>     \\n    }\\n    maxLen=<span class=\\"hljs-built_in\\">Math</span>.max(maxLen,down2-down1+<span class=\\"hljs-number\\">1</span>)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-built_in\\">Math</span>.max(maxLen,down2-down1+<span class=\\"hljs-number\\">1</span>)\\n};\\n</code></pre>\\n"],"querySlug":"longest-mountain-in-array","created_at":"2019-04-12","timeArr":[2019,3,12,15,22,5,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>定义3个变量：</p>\\n<p><code>down1</code>表示最左边的山谷索引</p>\\n<p><code>up</code>表示山峰索引</p>\\n<p><code>down2</code>表示最右边山谷索引</p>\\n<p>接下来几种情况：</p>\\n<ul>\\n<li>\\n<p><code>A[i]&gt;A[i-1]</code>，</p>\\n<p>这时如果<code>down2</code>存在，说明之前已经存在一个<code>山脉</code>，这时需要重置为一个新的上坡：<code>up=i, down1=i-1, down2=-1</code>；</p>\\n<p>如果<code>down2</code>不存在，说明当前正处于一个上坡，更新<code>up=i</code>即可。</p>\\n</li>\\n<li>\\n<p><code>A[i]&lt;A[i-1]</code>，</p>\\n<p>如果<code>up</code>不存在，说明之前的不存在山峰，不符合要求，直接更新<code>down1=i</code>，以<code>i</code>作为最左边重新开始。</p>\\n<p>如果<code>up</code>存在，说明开始下坡，更新<code>down2=i</code>。</p>\\n</li>\\n<li>\\n<p><code>A[i]===A[i-1]</code></p>\\n<p>相等是不符合要求的，直接完全重置<code>down1=i, down2=-1, up=-1</code>。</p>\\n</li>\\n</ul>\\n<p>最后再每次遍历都更新<code>maxLen=Math.max(maxLen,down2-down1+1)</code>。</p>\\n","content":"<p>我们把数组 A 中符合下列属性的任意连续子数组 B 称为 &ldquo;<em>山脉&rdquo;</em>：</p>\\n\\n<ul>\\n\\t<li><code>B.length &gt;= 3</code></li>\\n\\t<li>存在 <code>0 &lt; i&nbsp;&lt; B.length - 1</code> 使得 <code>B[0] &lt; B[1] &lt; ... B[i-1] &lt; B[i] &gt; B[i+1] &gt; ... &gt; B[B.length - 1]</code></li>\\n</ul>\\n\\n<p>（注意：B 可以是 A 的任意子数组，包括整个数组 A。）</p>\\n\\n<p>给出一个整数数组 <code>A</code>，返回最长 <em>&ldquo;山脉&rdquo;</em>&nbsp;的长度。</p>\\n\\n<p>如果不含有 &ldquo;<em>山脉&rdquo;&nbsp;</em>则返回 <code>0</code>。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[2,1,4,7,3,2,5]\\n<strong>输出：</strong>5\\n<strong>解释：</strong>最长的 &ldquo;山脉&rdquo; 是 [1,4,7,3,2]，长度为 5。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[2,2,2]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>不含 &ldquo;山脉&rdquo;。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>0 &lt;= A.length &lt;= 10000</code></li>\\n\\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\\n</ol>\\n","title":"845. 数组中的最长山脉","relatedTags":["数组","双指针","动态规划","枚举"],"difficult":"Middle","lang":["javascript"],"uniqueID":"845","slug":"845-Longest-Mountain-in-Array"}')}}]);