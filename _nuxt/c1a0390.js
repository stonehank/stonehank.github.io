(window.webpackJsonp=window.webpackJsonp||[]).push([[524],{1322:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">arr</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">k</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> canArrange = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">arr, k</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> modArr=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> n <span class=\\"hljs-keyword\\">of</span> arr){\\n        modArr.push((n+k*<span class=\\"hljs-number\\">10000000</span>) % k)\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> count={}\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> n <span class=\\"hljs-keyword\\">of</span> modArr){\\n        <span class=\\"hljs-keyword\\">if</span>(count[n]==<span class=\\"hljs-literal\\">null</span>)count[n]=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">else</span> count[n]++\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(count,k)</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> key <span class=\\"hljs-keyword\\">in</span> count){\\n        <span class=\\"hljs-keyword\\">let</span> nxt=(k - (+key)) % k\\n        <span class=\\"hljs-keyword\\">while</span>(count[key]&gt;<span class=\\"hljs-number\\">0</span>){\\n            <span class=\\"hljs-keyword\\">if</span>(!count[nxt])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n            count[key]--\\n            <span class=\\"hljs-keyword\\">if</span>(!count[nxt])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n            count[nxt]--\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n};\\n</code></pre>\\n"],"querySlug":"check-if-array-pairs-are-divisible-by-k","created_at":"2020-06-28","timeArr":[2020,5,28,11,12,22,0],"hasThinking":false,"content":"<p>给你一个整数数组 <code>arr</code> 和一个整数 <code>k</code> ，其中数组长度是偶数，值为 <code>n</code> 。</p>\\n\\n<p>现在需要把数组恰好分成 <code>n /&nbsp;2</code> 对，以使每对数字的和都能够被 <code>k</code> 整除。</p>\\n\\n<p>如果存在这样的分法，请返回 <em>True</em> ；否则，返回 <em>False</em> 。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [1,2,3,4,5,10,6,7,8,9], k = 5\\n<strong>输出：</strong>true\\n<strong>解释：</strong>划分后的数字对为 (1,9),(2,8),(3,7),(4,6) 以及 (5,10) 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [1,2,3,4,5,6], k = 7\\n<strong>输出：</strong>true\\n<strong>解释：</strong>划分后的数字对为 (1,6),(2,5) 以及 (3,4) 。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [1,2,3,4,5,6], k = 10\\n<strong>输出：</strong>false\\n<strong>解释：</strong>无法在将数组中的数字分为三对的同时满足每对数字和能够被 10 整除的条件。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [-10,10], k = 2\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [-1,1,-2,2,-3,3,-4,4], k = 3\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>arr.length == n</code></li>\\n\\t<li><code>1 &lt;= n &lt;= 10^5</code></li>\\n\\t<li><code>n</code> 为偶数</li>\\n\\t<li><code>-10^9 &lt;= arr[i] &lt;= 10^9</code></li>\\n\\t<li><code>1 &lt;= k &lt;= 10^5</code></li>\\n</ul>\\n","title":"1497. 检查数组对是否可以被 k 整除","relatedTags":["数组","哈希表","计数"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1497","slug":"1497-Check-If-Array-Pairs-Are-Divisible-by-k"}')}}]);