(window.webpackJsonp=window.webpackJsonp||[]).push([[1141],{1939:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> rotatedDigits = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> a=[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">5</span>,<span class=\\"hljs-number\\">6</span>,<span class=\\"hljs-number\\">8</span>,<span class=\\"hljs-number\\">9</span>],b=[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">8</span>]\\n  <span class=\\"hljs-keyword\\">let</span> str=N+<span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">calcCounts</span>(<span class=\\"hljs-params\\">str,All7</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(str===<span class=\\"hljs-string\\">\'\'</span>) <span class=\\"hljs-keyword\\">return</span> All7 ? <span class=\\"hljs-number\\">1</span> : <span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>, head=+str[<span class=\\"hljs-number\\">0</span>]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;a.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(a[i]&lt;head){\\n        res+=<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">7</span>,str.length<span class=\\"hljs-number\\">-1</span>)\\n        <span class=\\"hljs-keyword\\">if</span>(!All7 &amp;&amp; b.includes(a[i])){\\n          res-=<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">3</span>,str.length<span class=\\"hljs-number\\">-1</span>)\\n        }\\n      }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(a[i]===head){\\n        res+=calcCounts(str.substring(<span class=\\"hljs-number\\">1</span>), All7 || !b.includes(a[i]))\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> calcCounts(str,<span class=\\"hljs-literal\\">false</span>)\\n};\\n</code></pre>\\n"],"querySlug":"rotated-digits","created_at":"2019-03-27","timeArr":[2019,2,27,22,52,26,0],"hasThinking":false,"content":"<p>我们称一个数 X 为好数, 如果它的每位数字逐个地被旋转 180 度后，我们仍可以得到一个有效的，且和 X 不同的数。要求每位数字都要被旋转。</p>\\n\\n<p>如果一个数的每位数字被旋转以后仍然还是一个数字，&nbsp;则这个数是有效的。0, 1, 和 8 被旋转后仍然是它们自己；2 和 5 可以互相旋转成对方（在这种情况下，它们以不同的方向旋转，换句话说，2 和 5 互为镜像）；6 和 9 同理，除了这些以外其他的数字旋转以后都不再是有效的数字。</p>\\n\\n<p>现在我们有一个正整数&nbsp;<code>N</code>, 计算从&nbsp;<code>1</code> 到&nbsp;<code>N</code> 中有多少个数&nbsp;X 是好数？</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre><strong>输入:</strong> 10\\n<strong>输出:</strong> 4\\n<strong>解释:</strong> \\n在[1, 10]中有四个好数： 2, 5, 6, 9。\\n注意 1 和 10 不是好数, 因为他们在旋转之后不变。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>N&nbsp;的取值范围是&nbsp;<code>[1, 10000]</code>。</li>\\n</ul>\\n","title":"788. 旋转数字","relatedTags":["数学","动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"788","slug":"788-Rotated-Digits"}')}}]);