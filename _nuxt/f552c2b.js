(window.webpackJsonp=window.webpackJsonp||[]).push([[1161],{1959:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">widths</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">S</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numberOfLines = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">widths, S</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> len=<span class=\\"hljs-number\\">0</span>,row=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;S.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> code=S.charCodeAt(i)<span class=\\"hljs-number\\">-97</span>\\n    <span class=\\"hljs-keyword\\">if</span>(len+widths[code]&gt;<span class=\\"hljs-number\\">100</span>){\\n      row++\\n      len=<span class=\\"hljs-number\\">0</span>\\n    }\\n    len+=widths[code] \\n  }\\n  <span class=\\"hljs-keyword\\">return</span> [row,len]\\n};\\n</code></pre>\\n"],"querySlug":"number-of-lines-to-write-string","created_at":"2019-04-30","timeArr":[2019,3,30,13,13,14,0],"hasThinking":false,"content":"<p>我们要把给定的字符串 <code>S</code>&nbsp;从左到右写到每一行上，每一行的最大宽度为100个单位，如果我们在写某个字母的时候会使这行超过了100 个单位，那么我们应该把这个字母写到下一行。我们给定了一个数组&nbsp;<code>widths</code>&nbsp;，这个数组&nbsp;widths[0] 代表 &#39;a&#39; 需要的单位，&nbsp;widths[1] 代表 &#39;b&#39; 需要的单位，...，&nbsp;widths[25] 代表 &#39;z&#39; 需要的单位。</p>\\n\\n<p>现在回答两个问题：至少多少行能放下<code>S</code>，以及最后一行使用的宽度是多少个单位？将你的答案作为长度为2的整数列表返回。</p>\\n\\n<pre>\\n<strong>示例 1:</strong>\\n<strong>输入:</strong> \\nwidths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\\nS = &quot;abcdefghijklmnopqrstuvwxyz&quot;\\n<strong>输出:</strong> [3, 60]\\n<strong>解释: \\n</strong>所有的字符拥有相同的占用单位10。所以书写所有的26个字母，\\n我们需要2个整行和占用60个单位的一行。\\n</pre>\\n\\n<pre>\\n<strong>示例 2:</strong>\\n<strong>输入:</strong> \\nwidths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\\nS = &quot;bbbcccdddaaa&quot;\\n<strong>输出:</strong> [2, 4]\\n<strong>解释: \\n</strong>除去字母&#39;a&#39;所有的字符都是相同的单位10，并且字符串 &quot;bbbcccdddaa&quot; 将会覆盖 9 * 10 + 2 * 4 = 98 个单位.\\n最后一个字母 &#39;a&#39; 将会被写到第二行，因为第一行只剩下2个单位了。\\n所以，这个答案是2行，第二行有4个单位宽度。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>注:</strong></p>\\n\\n<ul>\\n\\t<li>字符串&nbsp;<code>S</code> 的长度在&nbsp;[1, 1000] 的范围。</li>\\n\\t<li><code>S</code> 只包含小写字母。</li>\\n\\t<li><code>widths</code> 是长度为&nbsp;<code>26</code>的数组。</li>\\n\\t<li><code>widths[i]</code>&nbsp;值的范围在&nbsp;<code>[2, 10]</code>。</li>\\n</ul>\\n","title":"806. 写字符串需要的行数","relatedTags":["数组","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"806","slug":"806-Number-of-Lines-To-Write-String"}')}}]);