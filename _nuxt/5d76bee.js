(window.webpackJsonp=window.webpackJsonp||[]).push([[485],{1283:function(o){o.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[][]}</span> <span class=\\"hljs-variable\\">orders</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> displayTable = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">orders</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> foods=[]\\n  <span class=\\"hljs-keyword\\">let</span> tables=[]\\n  <span class=\\"hljs-keyword\\">let</span> hashT2F={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;orders.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> [name,tableId,foodName]=orders[i]\\n    foods.push(foodName)\\n    tables.push(+tableId)\\n    <span class=\\"hljs-keyword\\">if</span>(hashT2F[tableId]==<span class=\\"hljs-literal\\">null</span>){\\n      hashT2F[tableId]={}\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(hashT2F[tableId][foodName]==<span class=\\"hljs-literal\\">null</span>){\\n      hashT2F[tableId][foodName]=<span class=\\"hljs-number\\">0</span>\\n    }\\n    hashT2F[tableId][foodName]++\\n  }\\n  foods=<span class=\\"hljs-built_in\\">Array</span>.from(<span class=\\"hljs-keyword\\">new</span> <span class=\\"hljs-built_in\\">Set</span>(foods))\\n  tables=<span class=\\"hljs-built_in\\">Array</span>.from(<span class=\\"hljs-keyword\\">new</span> <span class=\\"hljs-built_in\\">Set</span>(tables))\\n  foods.sort()\\n  tables.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-built_in\\">Array</span>(tables.length+<span class=\\"hljs-number\\">1</span>).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(foods.length+<span class=\\"hljs-number\\">1</span>).fill())\\n  res[<span class=\\"hljs-number\\">0</span>][<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-string\\">\'Table\'</span>\\n  <span class=\\"hljs-keyword\\">let</span> idx2Food={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;res[<span class=\\"hljs-number\\">0</span>].length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> foodName=foods[i<span class=\\"hljs-number\\">-1</span>]\\n    res[<span class=\\"hljs-number\\">0</span>][i]=foodName\\n    idx2Food[i]=foodName\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;res.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> curTableName=tables[i<span class=\\"hljs-number\\">-1</span>]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;res[i].length;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(j===<span class=\\"hljs-number\\">0</span>){\\n        res[i][j]=<span class=\\"hljs-built_in\\">String</span>(curTableName)\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        res[i][j]=hashT2F[curTableName][idx2Food[j]] ? <span class=\\"hljs-built_in\\">String</span>(hashT2F[curTableName][idx2Food[j]]) : <span class=\\"hljs-string\\">\'0\'</span>\\n      }\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"display-table-of-food-orders-in-a-restaurant","created_at":"2020-04-19","timeArr":[2020,3,19,10,56,10,0],"hasThinking":false,"content":"<p>给你一个数组 <code>orders</code>，表示客户在餐厅中完成的订单，确切地说， <code>orders[i]=[customerName<sub>i</sub>,tableNumber<sub>i</sub>,foodItem<sub>i</sub>]</code> ，其中 <code>customerName<sub>i</sub></code> 是客户的姓名，<code>tableNumber<sub>i</sub></code> 是客户所在餐桌的桌号，而 <code>foodItem<sub>i</sub></code> 是客户点的餐品名称。</p>\\n\\n<p>请你返回该餐厅的 <strong>点菜展示表</strong><em> 。</em>在这张表中，表中第一行为标题，其第一列为餐桌桌号 &ldquo;Table&rdquo; ，后面每一列都是按字母顺序排列的餐品名称。接下来每一行中的项则表示每张餐桌订购的相应餐品数量，第一列应当填对应的桌号，后面依次填写下单的餐品数量。</p>\\n\\n<p>注意：客户姓名不是点菜展示表的一部分。此外，表中的数据行应该按餐桌桌号升序排列。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>orders = [[&quot;David&quot;,&quot;3&quot;,&quot;Ceviche&quot;],[&quot;Corina&quot;,&quot;10&quot;,&quot;Beef Burrito&quot;],[&quot;David&quot;,&quot;3&quot;,&quot;Fried Chicken&quot;],[&quot;Carla&quot;,&quot;5&quot;,&quot;Water&quot;],[&quot;Carla&quot;,&quot;5&quot;,&quot;Ceviche&quot;],[&quot;Rous&quot;,&quot;3&quot;,&quot;Ceviche&quot;]]\\n<strong>输出：</strong>[[&quot;Table&quot;,&quot;Beef Burrito&quot;,&quot;Ceviche&quot;,&quot;Fried Chicken&quot;,&quot;Water&quot;],[&quot;3&quot;,&quot;0&quot;,&quot;2&quot;,&quot;1&quot;,&quot;0&quot;],[&quot;5&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;1&quot;],[&quot;10&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;0&quot;]] \\n<strong>解释：\\n</strong>点菜展示表如下所示：\\n<strong>Table,Beef Burrito,Ceviche,Fried Chicken,Water</strong>\\n3    ,0           ,2      ,1            ,0\\n5    ,0           ,1      ,0            ,1\\n10   ,1           ,0      ,0            ,0\\n对于餐桌 3：David 点了 &quot;Ceviche&quot; 和 &quot;Fried Chicken&quot;，而 Rous 点了 &quot;Ceviche&quot;\\n而餐桌 5：Carla 点了 &quot;Water&quot; 和 &quot;Ceviche&quot;\\n餐桌 10：Corina 点了 &quot;Beef Burrito&quot; \\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>orders = [[&quot;James&quot;,&quot;12&quot;,&quot;Fried Chicken&quot;],[&quot;Ratesh&quot;,&quot;12&quot;,&quot;Fried Chicken&quot;],[&quot;Amadeus&quot;,&quot;12&quot;,&quot;Fried Chicken&quot;],[&quot;Adam&quot;,&quot;1&quot;,&quot;Canadian Waffles&quot;],[&quot;Brianna&quot;,&quot;1&quot;,&quot;Canadian Waffles&quot;]]\\n<strong>输出：</strong>[[&quot;Table&quot;,&quot;Canadian Waffles&quot;,&quot;Fried Chicken&quot;],[&quot;1&quot;,&quot;2&quot;,&quot;0&quot;],[&quot;12&quot;,&quot;0&quot;,&quot;3&quot;]] \\n<strong>解释：</strong>\\n对于餐桌 1：Adam 和 Brianna 都点了 &quot;Canadian Waffles&quot;\\n而餐桌 12：James, Ratesh 和 Amadeus 都点了 &quot;Fried Chicken&quot;\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>orders = [[&quot;Laura&quot;,&quot;2&quot;,&quot;Bean Burrito&quot;],[&quot;Jhon&quot;,&quot;2&quot;,&quot;Beef Burrito&quot;],[&quot;Melissa&quot;,&quot;2&quot;,&quot;Soda&quot;]]\\n<strong>输出：</strong>[[&quot;Table&quot;,&quot;Bean Burrito&quot;,&quot;Beef Burrito&quot;,&quot;Soda&quot;],[&quot;2&quot;,&quot;1&quot;,&quot;1&quot;,&quot;1&quot;]]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;=&nbsp;orders.length &lt;= 5 * 10^4</code></li>\\n\\t<li><code>orders[i].length == 3</code></li>\\n\\t<li><code>1 &lt;= customerName<sub>i</sub>.length, foodItem<sub>i</sub>.length &lt;= 20</code></li>\\n\\t<li><code>customerName<sub>i</sub></code> 和 <code>foodItem<sub>i</sub></code> 由大小写英文字母及空格字符 <code>&#39; &#39;</code> 组成。</li>\\n\\t<li><code>tableNumber<sub>i</sub></code> 是 <code>1</code> 到 <code>500</code> 范围内的整数。</li>\\n</ul>\\n","title":"1418. 点菜展示表","relatedTags":["数组","哈希表","字符串","有序集合","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1418","slug":"1418-Display-Table-of-Food-Orders-in-a-Restaurant"}')}}]);