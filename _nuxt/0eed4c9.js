(window.webpackJsonp=window.webpackJsonp||[]).push([[704],{1502:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">num</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> addDigits = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">num</span>) </span>{\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>+(num<span class=\\"hljs-number\\">-1</span>)%<span class=\\"hljs-number\\">9</span>\\n};\\n</code></pre>\\n"],"querySlug":"add-digits","created_at":"2019-03-30","timeArr":[2019,2,30,22,47,11,0],"hasThinking":false,"content":"<p>给定一个非负整数 <code>num</code>，反复将各个位上的数字相加，直到结果为一位数。</p>\\n\\n<p><strong>示例:</strong></p>\\n\\n<pre><strong>输入:</strong> <code>38</code>\\n<strong>输出:</strong> 2 \\n<strong>解释: </strong>各位相加的过程为<strong>：</strong><code>3 + 8 = 11</code>, <code>1 + 1 = 2</code>。 由于&nbsp;<code>2</code> 是一位数，所以返回 2。\\n</pre>\\n\\n<p><strong>进阶:</strong><br>\\n你可以不使用循环或者递归，且在 O(1) 时间复杂度内解决这个问题吗？</p>\\n","title":"258. 各位相加","relatedTags":["数学","数论","模拟"],"difficult":"Easy","lang":["javascript"],"uniqueID":"258","slug":"258-Add-Digits"}')}}]);