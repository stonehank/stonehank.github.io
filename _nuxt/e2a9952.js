(window.webpackJsonp=window.webpackJsonp||[]).push([[853],{1651:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for singly-linked list.\\n * function ListNode(val) {\\n *     this.val = val;\\n *     this.next = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{ListNode}</span> <span class=\\"hljs-variable\\">l1</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{ListNode}</span> <span class=\\"hljs-variable\\">l2</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{ListNode}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> addTwoNumbers = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">l1, l2</span>) </span>{\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">reverse</span>(<span class=\\"hljs-params\\">list</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> node=list,p=<span class=\\"hljs-literal\\">null</span>\\n    <span class=\\"hljs-keyword\\">while</span>(node){\\n      <span class=\\"hljs-keyword\\">let</span> nxt=node.next\\n      node.next=p\\n      p=node\\n      node=nxt\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> p\\n  }\\n  l1=reverse(l1)\\n  l2=reverse(l2)\\n  <span class=\\"hljs-keyword\\">let</span> node1=l1,node2=l2\\n  <span class=\\"hljs-keyword\\">let</span> carry=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> root=<span class=\\"hljs-keyword\\">new</span> ListNode(<span class=\\"hljs-literal\\">null</span>),res=root\\n  <span class=\\"hljs-keyword\\">while</span>(node1 || node2){\\n    <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(!node1)sum=node2.val+carry\\n    <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(!node2)sum=node1.val+carry\\n    <span class=\\"hljs-keyword\\">else</span> sum=node1.val+node2.val+carry\\n    carry=~~(sum/<span class=\\"hljs-number\\">10</span>)\\n    sum %= <span class=\\"hljs-number\\">10</span>\\n    res.next=<span class=\\"hljs-keyword\\">new</span> ListNode(sum)\\n    res=res.next\\n    <span class=\\"hljs-keyword\\">if</span>(node1)node1=node1.next\\n    <span class=\\"hljs-keyword\\">if</span>(node2)node2=node2.next\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(carry&gt;<span class=\\"hljs-number\\">0</span>)res.next=<span class=\\"hljs-keyword\\">new</span> ListNode(carry)\\n  <span class=\\"hljs-keyword\\">return</span> reverse(root.next)\\n};\\n</code></pre>\\n"],"querySlug":"add-two-numbers-ii","created_at":"2019-04-20","timeArr":[2019,3,20,17,55,18,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<ol>\\n<li>\\n<p>反转输入，然后正常处理<code>加法</code>，最后再反转输出，关于反转参考<code>NO.206</code>。</p>\\n</li>\\n<li>\\n<p>使用<code>stack</code>，先将<code>l1</code>和<code>l2</code>的所有<code>val</code>放入两个<code>stack</code>，在不断出栈处理加法。</p>\\n</li>\\n</ol>\\n","content":"<p>给你两个 <strong>非空 </strong>链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。</p>\\n\\n<p>你可以假设除了数字 0 之外，这两个数字都不会以零开头。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://pic.leetcode-cn.com/1626420025-fZfzMX-image.png\\" style=\\"width: 302px; \\" /></p>\\n\\n<pre>\\n<strong>输入：</strong>l1 = [7,2,4,3], l2 = [5,6,4]\\n<strong>输出：</strong>[7,8,0,7]\\n</pre>\\n\\n<p><strong>示例2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>l1 = [2,4,3], l2 = [5,6,4]\\n<strong>输出：</strong>[8,0,7]\\n</pre>\\n\\n<p><strong>示例3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>l1 = [0], l2 = [0]\\n<strong>输出：</strong>[0]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>链表的长度范围为<code> [1, 100]</code></li>\\n\\t<li><code>0 <= node.val <= 9</code></li>\\n\\t<li>输入数据保证链表代表的数字无前导 0</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong>如果输入链表不能修改该如何处理？换句话说，不能对列表中的节点进行翻转。</p>\\n","title":"445. 两数相加 II","relatedTags":["栈","链表","数学"],"difficult":"Middle","lang":["javascript"],"uniqueID":"445","slug":"445-Add-Two-Numbers-II"}')}}]);