(window.webpackJsonp=window.webpackJsonp||[]).push([[1195],{1993:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">K</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">W</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> new21Game = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N, K, W</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(K==<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">let</span> dp=<span class=\\"hljs-built_in\\">Array</span>(N+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">0</span>)\\n  dp[<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;dp.length;i++){\\n    dp[i]=sum/W\\n    <span class=\\"hljs-keyword\\">if</span>(i&lt;K){\\n      sum+=dp[i]\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(i&gt;=W){\\n      sum-=dp[i-W]\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> result=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=K;i&lt;=N;i++){\\n    result+=dp[i]\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> result\\n};\\n</code></pre>\\n","<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">new21Game</span><span class=\\"hljs-params\\">(self, N, K, W)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type N: int\\n        :type K: int\\n        :type W: int\\n        :rtype: float\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-keyword\\">return</span> self.dfs(N, K, W, <span class=\\"hljs-number\\">0</span>, {})\\n    \\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">dfs</span><span class=\\"hljs-params\\">(self, N, K, W, cur, memo)</span>:</span>\\n        \\n        <span class=\\"hljs-keyword\\">if</span> cur == K<span class=\\"hljs-number\\">-1</span>:\\n            <span class=\\"hljs-keyword\\">return</span> min(N-K+<span class=\\"hljs-number\\">1</span>, W) / W\\n        <span class=\\"hljs-keyword\\">if</span> cur &gt; N:\\n            <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n        <span class=\\"hljs-keyword\\">elif</span> cur &gt;= K:\\n            <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1.0</span>\\n        \\n        <span class=\\"hljs-keyword\\">if</span> cur <span class=\\"hljs-keyword\\">in</span> memo:\\n            <span class=\\"hljs-keyword\\">return</span> memo[cur]\\n        \\n        prob = self.dfs(N, K, W, cur+<span class=\\"hljs-number\\">1</span>, memo) - (self.dfs(N, K, W, cur+<span class=\\"hljs-number\\">1</span>+W, memo) - self.dfs(N, K, W, cur+<span class=\\"hljs-number\\">1</span>, memo)) / W\\n        \\n        memo[cur] = prob\\n        \\n        <span class=\\"hljs-keyword\\">return</span> prob\\n</code></pre>\\n"],"querySlug":"new-21-game","hasThinking":false,"content":"<p>爱丽丝参与一个大致基于纸牌游戏 &ldquo;21点&rdquo; 规则的游戏，描述如下：</p>\\n\\n<p>爱丽丝以 <code>0</code> 分开始，并在她的得分少于 <code>K</code> 分时抽取数字。 抽取时，她从 <code>[1, W]</code> 的范围中随机获得一个整数作为分数进行累计，其中 <code>W</code> 是整数。 每次抽取都是独立的，其结果具有相同的概率。</p>\\n\\n<p>当爱丽丝获得不少于 <code>K</code> 分时，她就停止抽取数字。 爱丽丝的分数不超过 <code>N</code> 的概率是多少？</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例</strong><strong> 1</strong><strong>：</strong></p>\\n\\n<pre><strong>输入：</strong>N = 10, K = 1, W = 10\\n<strong>输出：</strong>1.00000\\n<strong>说明：</strong>爱丽丝得到一张卡，然后停止。</pre>\\n\\n<p><strong>示例 </strong><strong>2</strong><strong>：</strong></p>\\n\\n<pre><strong>输入：</strong>N = 6, K = 1, W = 10\\n<strong>输出：</strong>0.60000\\n<strong>说明：</strong>爱丽丝得到一张卡，然后停止。\\n在 W = 10 的 6 种可能下，她的得分不超过 N = 6 分。</pre>\\n\\n<p><strong>示例 </strong><strong>3</strong><strong>：</strong></p>\\n\\n<pre><strong>输入：</strong>N = 21, K = 17, W = 10\\n<strong>输出：</strong>0.73278</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>0 &lt;= K &lt;= N &lt;= 10000</code></li>\\n\\t<li><code>1 &lt;= W &lt;= 10000</code></li>\\n\\t<li>如果答案与正确答案的误差不超过 <code>10^-5</code>，则该答案将被视为正确答案通过。</li>\\n\\t<li>此问题的判断限制时间已经减少。</li>\\n</ol>\\n","title":"837. 新21点","relatedTags":["数学","动态规划","滑动窗口","概率与统计"],"difficult":"Middle","lang":["javascript","python"],"uniqueID":"837","slug":"837-New-21-Game"}')}}]);