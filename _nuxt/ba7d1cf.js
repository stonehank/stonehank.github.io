(window.webpackJsonp=window.webpackJsonp||[]).push([[819],{1617:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">num</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> toHex = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">num</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(num===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'0\'</span>\\n  <span class=\\"hljs-keyword\\">let</span> h=[<span class=\\"hljs-string\\">\'0\'</span>,<span class=\\"hljs-string\\">\'1\'</span>,<span class=\\"hljs-string\\">\'2\'</span>,<span class=\\"hljs-string\\">\'3\'</span>,<span class=\\"hljs-string\\">\'4\'</span>,<span class=\\"hljs-string\\">\'5\'</span>,<span class=\\"hljs-string\\">\'6\'</span>,<span class=\\"hljs-string\\">\'7\'</span>,<span class=\\"hljs-string\\">\'8\'</span>,<span class=\\"hljs-string\\">\'9\'</span>,<span class=\\"hljs-string\\">\'a\'</span>,<span class=\\"hljs-string\\">\'b\'</span>,<span class=\\"hljs-string\\">\'c\'</span>,<span class=\\"hljs-string\\">\'d\'</span>,<span class=\\"hljs-string\\">\'e\'</span>,<span class=\\"hljs-string\\">\'f\'</span>]\\n  <span class=\\"hljs-keyword\\">let</span> neg=num&lt;<span class=\\"hljs-number\\">0</span>\\n  num=<span class=\\"hljs-built_in\\">Math</span>.abs(num)\\n  <span class=\\"hljs-keyword\\">if</span>(neg)num--\\n  <span class=\\"hljs-keyword\\">let</span> str=<span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-keyword\\">while</span>(num&gt;<span class=\\"hljs-number\\">0</span>){\\n    <span class=\\"hljs-keyword\\">if</span>(neg){\\n      str=h[<span class=\\"hljs-number\\">15</span>-num%<span class=\\"hljs-number\\">16</span>]+str\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      str=h[num%<span class=\\"hljs-number\\">16</span>]+str      \\n    }\\n    num=<span class=\\"hljs-built_in\\">Math</span>.floor(num/<span class=\\"hljs-number\\">16</span>)\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(neg){\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'f\'</span>.repeat(<span class=\\"hljs-number\\">8</span>-str.length)+str\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> str\\n  <span class=\\"hljs-comment\\">// console.log(str)</span>\\n  \\n};\\n</code></pre>\\n"],"querySlug":"convert-a-number-to-hexadecimal","created_at":"2019-04-22","timeArr":[2019,3,22,1,5,3,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>这里主要有个负数需要<code>补码</code>，这里可以通过先加上<code>Math.pow(2,32)</code>再进行处理。</p>\\n","content":"<p>给定一个整数，编写一个算法将这个数转换为十六进制数。对于负整数，我们通常使用&nbsp;<a href=\\"https://baike.baidu.com/item/%E8%A1%A5%E7%A0%81/6854613?fr=aladdin\\">补码运算</a>&nbsp;方法。</p>\\n\\n<p><strong>注意:</strong></p>\\n\\n<ol>\\n\\t<li>十六进制中所有字母(<code>a-f</code>)都必须是小写。</li>\\n\\t<li>十六进制字符串中不能包含多余的前导零。如果要转化的数为0，那么以单个字符<code>&#39;0&#39;</code>来表示；对于其他情况，十六进制字符串中的第一个字符将不会是0字符。&nbsp;</li>\\n\\t<li>给定的数确保在32位有符号整数范围内。</li>\\n\\t<li><strong>不能使用任何由库提供的将数字直接转换或格式化为十六进制的方法。</strong></li>\\n</ol>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n输入:\\n26\\n\\n输出:\\n&quot;1a&quot;\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n输入:\\n-1\\n\\n输出:\\n&quot;ffffffff&quot;\\n</pre>\\n","title":"405. 数字转换为十六进制数","relatedTags":["位运算","数学"],"difficult":"Easy","lang":["javascript"],"uniqueID":"405","slug":"405-Convert-a-Number-to-Hexadecimal"}')}}]);