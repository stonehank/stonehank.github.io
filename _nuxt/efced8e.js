(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{1079:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">count</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> sampleStats = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">count</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> min,max,aver,most,mostV=-<span class=\\"hljs-literal\\">Infinity</span>,sum=<span class=\\"hljs-number\\">0</span>,averCount=<span class=\\"hljs-number\\">0</span>,mid\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;count.length;i++){\\n    sum+=(count[i]*i)\\n    averCount+=count[i]\\n    <span class=\\"hljs-keyword\\">if</span>(count[i]&gt;mostV){\\n      mostV=count[i]\\n      most=i\\n    }\\n  }\\n\\n  aver=sum/averCount\\n  <span class=\\"hljs-keyword\\">let</span> nums={}\\n  <span class=\\"hljs-keyword\\">let</span> l=<span class=\\"hljs-number\\">0</span>,r=<span class=\\"hljs-number\\">255</span>\\n  <span class=\\"hljs-keyword\\">while</span>(count[l]===<span class=\\"hljs-number\\">0</span>){\\n    l++\\n  }\\n  <span class=\\"hljs-keyword\\">while</span>(count[r]===<span class=\\"hljs-number\\">0</span>)r--\\n  \\n  min=l\\n  max=r\\n  \\n  <span class=\\"hljs-comment\\">// console.log(l,r)</span>\\n\\n  <span class=\\"hljs-keyword\\">while</span>(l&lt;r){\\n    <span class=\\"hljs-keyword\\">if</span>(count[l]===count[r]){\\n      mid=(l+r)/<span class=\\"hljs-number\\">2</span>\\n    }\\n    <span class=\\"hljs-comment\\">// if(count[l]===1 &amp;&amp; count[r]===1){</span>\\n    <span class=\\"hljs-comment\\">//   mid=(count[l]+count[r])/2</span>\\n    <span class=\\"hljs-comment\\">//   break</span>\\n    <span class=\\"hljs-comment\\">// }</span>\\n    <span class=\\"hljs-keyword\\">let</span> curMin=<span class=\\"hljs-built_in\\">Math</span>.min(count[l],count[r])\\n    count[l]-=curMin\\n    count[r]-=curMin\\n    <span class=\\"hljs-keyword\\">while</span>(count[l]===<span class=\\"hljs-number\\">0</span>)l++\\n    <span class=\\"hljs-keyword\\">while</span>(count[r]===<span class=\\"hljs-number\\">0</span>)r--\\n    <span class=\\"hljs-comment\\">// console.log(mid,l,r,\'---\')</span>\\n  }\\n \\n  <span class=\\"hljs-keyword\\">if</span>(mid==<span class=\\"hljs-literal\\">null</span>)mid=l\\n  \\n  <span class=\\"hljs-keyword\\">return</span> [min,max,aver,mid,most]\\n  \\n};\\n</code></pre>\\n"],"querySlug":"statistics-from-a-large-sample","created_at":"2019-06-23","timeArr":[2019,5,23,10,53,44,0],"hasThinking":false,"content":"<p>我们对&nbsp;<code>0</code>&nbsp;到&nbsp;<code>255</code>&nbsp;之间的整数进行采样，并将结果存储在数组&nbsp;<code>count</code>&nbsp;中：<code>count[k]</code>&nbsp;就是整数&nbsp;<code>k</code> 的采样个数。</p>\\n\\n<p>我们以&nbsp;<strong>浮点数&nbsp;</strong>数组的形式，分别返回样本的最小值、最大值、平均值、中位数和众数。其中，众数是保证唯一的。</p>\\n\\n<p>我们先来回顾一下中位数的知识：</p>\\n\\n<ul>\\n\\t<li>如果样本中的元素有序，并且元素数量为奇数时，中位数为最中间的那个元素；</li>\\n\\t<li>如果样本中的元素有序，并且元素数量为偶数时，中位数为中间的两个元素的平均值。</li>\\n</ul>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\\n<strong>输出：</strong>[1.00000,3.00000,2.37500,2.50000,3.00000]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\\n<strong>输出：</strong>[1.00000,4.00000,2.18182,2.00000,1.00000]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>count.length == 256</code></li>\\n\\t<li><code>1 &lt;= sum(count) &lt;= 10^9</code></li>\\n\\t<li>计数表示的众数是唯一的</li>\\n\\t<li>答案与真实值误差在&nbsp;<code>10^-5</code>&nbsp;以内就会被视为正确答案</li>\\n</ol>\\n","title":"1093. 大样本统计","relatedTags":["数学","双指针","概率与统计"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1093","slug":"1093-Statistics-from-a-Large-Sample"}')}}]);