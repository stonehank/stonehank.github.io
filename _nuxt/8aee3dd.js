(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{1008:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">S</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isValid = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">S</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> stack=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;S.length;i++){\\n    stack.push(S[i])\\n    <span class=\\"hljs-keyword\\">if</span>(stack.length&gt;<span class=\\"hljs-number\\">2</span> &amp;&amp; stack.slice(stack.length<span class=\\"hljs-number\\">-3</span>).join(<span class=\\"hljs-string\\">\\"\\"</span>)===<span class=\\"hljs-string\\">\\"abc\\"</span>){\\n      stack=stack.slice(<span class=\\"hljs-number\\">0</span>,stack.length<span class=\\"hljs-number\\">-3</span>)\\n    }\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(stack)</span>\\n  <span class=\\"hljs-keyword\\">if</span>(stack.length===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n};\\n</code></pre>\\n"],"querySlug":"check-if-word-is-valid-after-substitutions","created_at":"2019-03-03","timeArr":[2019,2,3,11,12,49,0],"hasThinking":false,"content":"给你一个字符串 <code>s</code> ，请你判断它是否 <strong>有效</strong> 。\\n<p>字符串 <code>s</code> <strong>有效</strong> 需要满足：假设开始有一个空字符串 <code>t = \\"\\"</code> ，你可以执行 <strong>任意次</strong> 下述操作将<strong> </strong><code>t</code><strong> 转换为 </strong><code>s</code> ：</p>\\n\\n<ul>\\n\\t<li>将字符串 <code>\\"abc\\"</code> 插入到 <code>t</code> 中的任意位置。形式上，<code>t</code> 变为 <code>t<sub>left</sub> + \\"abc\\" + t<sub>right</sub></code>，其中 <code>t == t<sub>left</sub> + t<sub>right</sub></code> 。注意，<code>t<sub>left</sub></code> 和 <code>t<sub>right</sub></code> 可能为 <strong>空</strong> 。</li>\\n</ul>\\n\\n<p>如果字符串 <code>s</code> 有效，则返回 <code>true</code>；否则，返回 <code>false</code>。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"aabcbc\\"\\n<strong>输出：</strong>true\\n<strong>解释：</strong>\\n\\"\\" -> \\"<strong>abc</strong>\\" -> \\"a<strong>abc</strong>bc\\"\\n因此，\\"aabcbc\\" 有效。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"abcabcababcc\\"\\n<strong>输出：</strong>true\\n<strong>解释：</strong>\\n\\"\\" -> \\"<strong>abc</strong>\\" -> \\"abc<strong>abc</strong>\\" -> \\"abcabc<strong>abc</strong>\\" -> \\"abcabcab<strong>abc</strong>c\\"\\n因此，\\"abcabcababcc\\" 有效。</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"abccba\\"\\n<strong>输出：</strong>false\\n<strong>解释：</strong>执行操作无法得到 \\"abccba\\" 。</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"cababc\\"\\n<strong>输出：</strong>false\\n<strong>解释：</strong>执行操作无法得到 \\"cababc\\" 。</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= s.length <= 2 * 10<sup>4</sup></code></li>\\n\\t<li><code>s</code> 由字母 <code>\'a\'</code>、<code>\'b\'</code> 和 <code>\'c\'</code> 组成</li>\\n</ul>\\n","title":"1003. 检查替换后的词是否有效","relatedTags":["栈","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1003","slug":"1003-Check-If-Word-Is-Valid-After-Substitutions"}')}}]);