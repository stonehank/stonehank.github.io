(window.webpackJsonp=window.webpackJsonp||[]).push([[349],{1147:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">a</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">b</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">c</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> nthUglyNumber = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n, a, b, c</span>) </span>{\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">gcd</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">return</span> b ? gcd(b,a%b) : a\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> l=<span class=\\"hljs-number\\">1</span>,r=<span class=\\"hljs-number\\">2</span>*<span class=\\"hljs-number\\">1e9</span>\\n  <span class=\\"hljs-keyword\\">let</span> ab=a*b/gcd(a,b),\\n      bc=b*c/gcd(b,c),\\n      ac=a*c/gcd(a,c),\\n      abc=ab*c/gcd(ab,c)\\n  <span class=\\"hljs-comment\\">// console.log(ab,bc,ac,abc)</span>\\n  <span class=\\"hljs-keyword\\">while</span>(l&lt;r){\\n    <span class=\\"hljs-keyword\\">let</span> mid=<span class=\\"hljs-built_in\\">Math</span>.floor((l+r)/<span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">let</span> na=<span class=\\"hljs-built_in\\">Math</span>.floor(mid/a)\\n    <span class=\\"hljs-keyword\\">let</span> nb=<span class=\\"hljs-built_in\\">Math</span>.floor(mid/b)\\n    <span class=\\"hljs-keyword\\">let</span> nc=<span class=\\"hljs-built_in\\">Math</span>.floor(mid/c)\\n    <span class=\\"hljs-keyword\\">let</span> count=na+nb+nc-<span class=\\"hljs-built_in\\">Math</span>.floor(mid/ab)-<span class=\\"hljs-built_in\\">Math</span>.floor(mid/bc)-<span class=\\"hljs-built_in\\">Math</span>.floor(mid/ac)+<span class=\\"hljs-built_in\\">Math</span>.floor(mid/abc)\\n    <span class=\\"hljs-comment\\">// console.log(mid,count,ab,bc,ac,na,nb,nc)</span>\\n    <span class=\\"hljs-keyword\\">if</span>(count&lt;n)l=mid+<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">else</span> r=mid\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> r\\n};\\n</code></pre>\\n"],"querySlug":"ugly-number-iii","created_at":"2019-09-22","timeArr":[2019,8,22,12,32,58,0],"hasThinking":false,"content":"<p>给你四个整数：<code>n</code> 、<code>a</code> 、<code>b</code> 、<code>c</code> ，请你设计一个算法来找出第 <code>n</code> 个丑数。</p>\\n\\n<p>丑数是可以被 <code>a</code> <strong>或</strong> <code>b</code> <strong>或</strong> <code>c</code> 整除的 <strong>正整数</strong> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 3, a = 2, b = 3, c = 5\\n<strong>输出：</strong>4\\n<strong>解释：</strong>丑数序列为 2, 3, 4, 5, 6, 8, 9, 10... 其中第 3 个是 4。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 4, a = 2, b = 3, c = 4\\n<strong>输出：</strong>6\\n<strong>解释：</strong>丑数序列为 2, 3, 4, 6, 8, 9, 10, 12... 其中第 4 个是 6。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 5, a = 2, b = 11, c = 13\\n<strong>输出：</strong>10\\n<strong>解释：</strong>丑数序列为 2, 4, 6, 8, 10, 11, 12, 13... 其中第 5 个是 10。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 1000000000, a = 2, b = 217983653, c = 336916467\\n<strong>输出：</strong>1999999984\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n, a, b, c <= 10^9</code></li>\\n\\t<li><code>1 <= a * b * c <= 10^18</code></li>\\n\\t<li>本题结果在 <code>[1, 2 * 10^9]</code> 的范围内</li>\\n</ul>\\n","title":"1201. 丑数 III","relatedTags":["数学","二分查找","数论"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1201","slug":"1201-Ugly-Number-III"}')}}]);