(window.webpackJsonp=window.webpackJsonp||[]).push([[620],{1418:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">digits</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> letterCombinations = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">digits</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(digits===<span class=\\"hljs-string\\">\'\'</span>)<span class=\\"hljs-keyword\\">return</span> []\\n  <span class=\\"hljs-keyword\\">let</span> buttons={\\n    <span class=\\"hljs-number\\">2</span>:<span class=\\"hljs-string\\">\'abc\'</span>,<span class=\\"hljs-number\\">3</span>:<span class=\\"hljs-string\\">\'def\'</span>,<span class=\\"hljs-number\\">4</span>:<span class=\\"hljs-string\\">\'ghi\'</span>,<span class=\\"hljs-number\\">5</span>:<span class=\\"hljs-string\\">\'jkl\'</span>,<span class=\\"hljs-number\\">6</span>:<span class=\\"hljs-string\\">\'mno\'</span>,<span class=\\"hljs-number\\">7</span>:<span class=\\"hljs-string\\">\'pqrs\'</span>,<span class=\\"hljs-number\\">8</span>:<span class=\\"hljs-string\\">\'tuv\'</span>,<span class=\\"hljs-number\\">9</span>:<span class=\\"hljs-string\\">\'wxyz\'</span>\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;buttons[digits[<span class=\\"hljs-number\\">0</span>]].length;i++){\\n    res.push(buttons[digits[<span class=\\"hljs-number\\">0</span>]][i])\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;digits.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> aux=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;res.length;j++){\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k=<span class=\\"hljs-number\\">0</span>;k&lt;buttons[digits[i]].length;k++){\\n        aux.push(res[j]+buttons[digits[i]][k])\\n      }\\n    }\\n    res=aux\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"letter-combinations-of-a-phone-number","created_at":"2019-03-21","timeArr":[2019,2,21,19,7,50,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p><code>回溯算法</code>，对每一个数字上的每一个字母都要进行全排列处理。</p>\\n","content":"<p>给定一个仅包含数字 <code>2-9</code> 的字符串，返回所有它能表示的字母组合。答案可以按 <strong>任意顺序</strong> 返回。</p>\\n\\n<p>给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p>\\n\\n<p><img src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/original_images/17_telephone_keypad.png\\" style=\\"width: 200px;\\" /></p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>digits = \\"23\\"\\n<strong>输出：</strong>[\\"ad\\",\\"ae\\",\\"af\\",\\"bd\\",\\"be\\",\\"bf\\",\\"cd\\",\\"ce\\",\\"cf\\"]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>digits = \\"\\"\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>digits = \\"2\\"\\n<strong>输出：</strong>[\\"a\\",\\"b\\",\\"c\\"]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 <= digits.length <= 4</code></li>\\n\\t<li><code>digits[i]</code> 是范围 <code>[\'2\', \'9\']</code> 的一个数字。</li>\\n</ul>\\n","title":"17. 电话号码的字母组合","relatedTags":["哈希表","字符串","回溯"],"difficult":"Middle","lang":["javascript"],"uniqueID":"17","slug":"17-Letter-Combinations-of-a-Phone-Number"}')}}]);