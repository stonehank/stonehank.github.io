(window.webpackJsonp=window.webpackJsonp||[]).push([[1022],{1820:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isPossible = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> subs=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> num <span class=\\"hljs-keyword\\">of</span> nums){\\n    <span class=\\"hljs-keyword\\">let</span> find=<span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=subs.length<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n      <span class=\\"hljs-keyword\\">if</span>(subs[i][<span class=\\"hljs-number\\">0</span>]===num){\\n        find=<span class=\\"hljs-literal\\">true</span>\\n        subs[i][<span class=\\"hljs-number\\">0</span>]++\\n        subs[i][<span class=\\"hljs-number\\">1</span>]++\\n        <span class=\\"hljs-keyword\\">break</span>\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(!find)subs.push([num+<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">1</span>])\\n    <span class=\\"hljs-comment\\">// 提早返回</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;subs.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(subs[i][<span class=\\"hljs-number\\">1</span>]&lt;<span class=\\"hljs-number\\">3</span> &amp;&amp; num-subs[i][<span class=\\"hljs-number\\">0</span>]&gt;=<span class=\\"hljs-number\\">2</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [n,len] <span class=\\"hljs-keyword\\">of</span> subs){\\n    <span class=\\"hljs-keyword\\">if</span>(len&lt;<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n};\\n</code></pre>\\n"],"querySlug":"split-array-into-consecutive-subsequences","created_at":"2019-04-14","timeArr":[2019,3,14,0,43,0,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>用一个<code>subs</code>记录连续子序列，其中<code>subs[i][0]</code>记录连续子序列的下一个数，<code>subs[i][1]</code>记录连续子序列的长度。</p>\\n<p>依次检查<code>nums</code>，对于每个<code>num</code>，倒序检查<code>subs</code>，倒序能保证先将残缺的子序列完成，如果能放入某个子序列，则放入，如果不能，\\n则说明需要添加一个新的子序列，放到<code>subs</code>末尾。</p>\\n<p>最后，再正序检查一遍<code>subs</code>，如果发现<code>subs[i][1]&lt;3</code>(子序列个数小于3) 并且 <code>subs[i][0]</code>(子序列下一个数字)和当前数字相差2或者以上，\\n说明这个子序列不可能再被填充，立刻返回<code>false</code>。</p>\\n","content":"<p>给你一个按升序排序的整数数组 <code>num</code>（可能包含重复数字），请你将它们分割成一个或多个长度至少为 3 的子序列，其中每个子序列都由连续整数组成。</p>\\n\\n<p>如果可以完成上述分割，则返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> [1,2,3,3,4,5]\\n<strong>输出:</strong> True\\n<strong>解释:</strong>\\n你可以分割出这样两个连续子序列 : \\n1, 2, 3\\n3, 4, 5\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> [1,2,3,3,4,4,5,5]\\n<strong>输出:</strong> True\\n<strong>解释:</strong>\\n你可以分割出这样两个连续子序列 : \\n1, 2, 3, 4, 5\\n3, 4, 5\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> [1,2,3,4,4,5]\\n<strong>输出:</strong> False\\n</pre>\\n\\n<p> </p>\\n\\n<p><b>提示：</b></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 10000</code></li>\\n</ul>\\n","title":"659. 分割数组为连续子序列","relatedTags":["贪心","数组","哈希表","堆（优先队列）"],"difficult":"Middle","lang":["javascript"],"uniqueID":"659","slug":"659-Split-Array-into-Consecutive-Subsequences"}')}}]);