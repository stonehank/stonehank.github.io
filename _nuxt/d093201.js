(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{654:function(n){n.exports=JSON.parse('{"content":"<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">tco</span>(<span class=\\"hljs-params\\">f</span>) </span>{\\n            <span class=\\"hljs-keyword\\">var</span> value;\\n            <span class=\\"hljs-keyword\\">var</span> active = <span class=\\"hljs-literal\\">false</span>;\\n            <span class=\\"hljs-keyword\\">var</span> accumulated = [];\\n            <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">accumulator</span>(<span class=\\"hljs-params\\"></span>) </span>{\\n                accumulated.push(<span class=\\"hljs-built_in\\">arguments</span>);\\n                <span class=\\"hljs-comment\\">// 当递归的时候，检查active，清除调用栈</span>\\n                <span class=\\"hljs-keyword\\">if</span> (!active) {\\n                    active = <span class=\\"hljs-literal\\">true</span>;\\n                    <span class=\\"hljs-keyword\\">while</span> (accumulated.length) {\\n                        value = f.apply(<span class=\\"hljs-keyword\\">this</span>, accumulated.shift());\\n                        <span class=\\"hljs-built_in\\">console</span>.log(value)\\n                    }\\n                    active = <span class=\\"hljs-literal\\">false</span>;\\n                    <span class=\\"hljs-keyword\\">return</span> value;\\n                }\\n            };\\n        }\\n\\n        <span class=\\"hljs-keyword\\">var</span> sum = tco(<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\">x, y</span>) </span>{\\n            <span class=\\"hljs-keyword\\">if</span> (y &gt; <span class=\\"hljs-number\\">0</span>) {\\n                <span class=\\"hljs-keyword\\">return</span> sum(x + <span class=\\"hljs-number\\">1</span>, y - <span class=\\"hljs-number\\">1</span>)\\n            } <span class=\\"hljs-keyword\\">else</span> {\\n                <span class=\\"hljs-keyword\\">return</span> x\\n            }\\n        });\\n\\n        <span class=\\"hljs-built_in\\">console</span>.log(sum(<span class=\\"hljs-number\\">1</span>, <span class=\\"hljs-number\\">3</span>))</code></pre></code></pre>\\n","toc":[],"relatedTags":null,"created_at":"2018-09-17","timeArr":[2018,8,17,0,0,0,0],"title":"一段模拟尾调用的代码","uuid":"486e17cd17cf6034e71874e022bd9b11474cb15f","summary":"<pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">tco</span>(<span class=\\"hljs-params\\">f</span>) </span>{\\n            <span class=\\"hljs-keyword\\">var</span> value;\\n            <span class=\\"hljs-keyword\\">var</span> active = <span class=\\"hljs-literal\\">false</span>;\\n            <span class=\\"hljs-keyword\\">var</span> accumulated = [];\\n            <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">accumulator</span>(<span class=\\"hljs-params\\"></span>) </span>{\\n   ...</code></pre>","slug":"yi-duan-mo-ni-wei-diao-yong-de-dai-ma","sha":"d4ccfc9c818cb82435d9ad49679ef1c39a597b27"}')}}]);