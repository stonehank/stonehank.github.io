(window.webpackJsonp=window.webpackJsonp||[]).push([[594],{1392:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">word1</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">word2</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> closeStrings = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">word1, word2</span>) </span>{\\n    <span class=\\"hljs-keyword\\">if</span>(word1.length!==word2.length)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">let</span> count1=getCountArr(word1)\\n    <span class=\\"hljs-keyword\\">let</span> count2=getCountArr(word2)\\n    <span class=\\"hljs-keyword\\">if</span>(count1.length!==count2.length)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;count1.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(count1[i]!==count2[i])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> obj1={}\\n    <span class=\\"hljs-keyword\\">let</span> obj2={}\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> w1 <span class=\\"hljs-keyword\\">of</span> word1){\\n        obj1[w1]=<span class=\\"hljs-literal\\">true</span>\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> w2 <span class=\\"hljs-keyword\\">of</span> word2){\\n        obj2[w2]=<span class=\\"hljs-literal\\">true</span>\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> w <span class=\\"hljs-keyword\\">of</span> word2){\\n        <span class=\\"hljs-keyword\\">if</span>(!obj1[w])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> w <span class=\\"hljs-keyword\\">of</span> word1){\\n        <span class=\\"hljs-keyword\\">if</span>(!obj2[w])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">getCountArr</span>(<span class=\\"hljs-params\\">word</span>)</span>{\\n        <span class=\\"hljs-keyword\\">let</span> obj1={}\\n        <span class=\\"hljs-keyword\\">let</span> countArr=[]\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> w1 <span class=\\"hljs-keyword\\">of</span> word){\\n            <span class=\\"hljs-keyword\\">if</span>(!obj1[w1]){\\n                obj1[w1]=<span class=\\"hljs-number\\">1</span>\\n            }<span class=\\"hljs-keyword\\">else</span>{\\n                obj1[w1]++\\n            }\\n        }\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> obj1){\\n            countArr.push(obj1[k])\\n        }\\n        <span class=\\"hljs-keyword\\">return</span> countArr.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n    }\\n\\n};\\n</code></pre>\\n"],"querySlug":"determine-if-two-strings-are-close","created_at":"2020-11-22","timeArr":[2020,10,22,10,37,38,0],"hasThinking":false,"content":"<p>如果可以使用以下操作从一个字符串得到另一个字符串，则认为两个字符串 <strong>接近</strong> ：</p>\\n\\n<ul>\\n\\t<li>操作 1：交换任意两个 <strong>现有</strong> 字符。\\n\\n\\t<ul>\\n\\t\\t<li>例如，<code>a<strong>b</strong>cd<strong>e</strong> -> a<strong>e</strong>cd<strong>b</strong></code></li>\\n\\t</ul>\\n\\t</li>\\n\\t<li>操作 2：将一个 <strong>现有</strong> 字符的每次出现转换为另一个 <strong>现有</strong> 字符，并对另一个字符执行相同的操作。\\n\\t<ul>\\n\\t\\t<li>例如，<code><strong>aa</strong>c<strong>abb</strong> -> <strong>bb</strong>c<strong>baa</strong></code>（所有 <code>a</code> 转化为 <code>b</code> ，而所有的 <code>b</code> 转换为 <code>a</code> ）</li>\\n\\t</ul>\\n\\t</li>\\n</ul>\\n\\n<p>你可以根据需要对任意一个字符串多次使用这两种操作。</p>\\n\\n<p>给你两个字符串，<code>word1</code> 和 <code>word2</code> 。如果<em> </em><code>word1</code><em> </em>和<em> </em><code>word2</code><em> </em><strong>接近 </strong>，就返回 <code>true</code> ；否则，返回<em> </em><code>false</code><em> </em>。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>word1 = \\"abc\\", word2 = \\"bca\\"\\n<strong>输出：</strong>true\\n<strong>解释：</strong>2 次操作从 word1 获得 word2 。\\n执行操作 1：\\"a<strong>bc</strong>\\" -> \\"a<strong>cb</strong>\\"\\n执行操作 1：\\"<strong>a</strong>c<strong>b</strong>\\" -> \\"<strong>b</strong>c<strong>a</strong>\\"\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>word1 = \\"a\\", word2 = \\"aa\\"\\n<strong>输出：</strong>false\\n<strong>解释：</strong>不管执行多少次操作，都无法从 word1 得到 word2 ，反之亦然。</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>word1 = \\"cabbba\\", word2 = \\"abbccc\\"\\n<strong>输出：</strong>true\\n<strong>解释：</strong>3 次操作从 word1 获得 word2 。\\n执行操作 1：\\"ca<strong>b</strong>bb<strong>a</strong>\\" -> \\"ca<strong>a</strong>bb<strong>b</strong>\\"\\n执行操作 2：<code>\\"</code><strong>c</strong>aa<strong>bbb</strong>\\" -> \\"<strong>b</strong>aa<strong>ccc</strong>\\"\\n执行操作 2：\\"<strong>baa</strong>ccc\\" -> \\"<strong>abb</strong>ccc\\"\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>word1 = \\"cabbba\\", word2 = \\"aabbss\\"\\n<strong>输出：</strong>false\\n<strong>解释：</strong>不管执行多少次操作，都无法从 word1 得到 word2 ，反之亦然。</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= word1.length, word2.length <= 10<sup>5</sup></code></li>\\n\\t<li><code>word1</code> 和 <code>word2</code> 仅包含小写英文字母</li>\\n</ul>\\n","title":"1657. 确定两个字符串是否接近","relatedTags":["哈希表","字符串","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1657","slug":"1657-Determine-if-Two-Strings-Are-Close"}')}}]);