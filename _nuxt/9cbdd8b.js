(window.webpackJsonp=window.webpackJsonp||[]).push([[1021],{1819:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">findClosestElements</span><span class=\\"hljs-params\\">(self, arr, k, x)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type arr: List[int]\\n        :type k: int\\n        :type x: int\\n        :rtype: List[int]\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-comment\\"># O(lgN+K)</span>\\n        <span class=\\"hljs-comment\\"># N=len(arr)</span>\\n        <span class=\\"hljs-comment\\"># lo,hi=0,N-1</span>\\n        <span class=\\"hljs-comment\\"># while lo&lt;hi:</span>\\n        <span class=\\"hljs-comment\\">#   mid=(lo+hi)//2</span>\\n        <span class=\\"hljs-comment\\">#   if arr[mid]&lt;x:lo=mid+1</span>\\n        <span class=\\"hljs-comment\\">#   else:hi=mid</span>\\n        <span class=\\"hljs-comment\\"># ans=[]</span>\\n        <span class=\\"hljs-comment\\"># left,right=lo-1,lo</span>\\n        <span class=\\"hljs-comment\\"># while (left&gt;=0 or right&lt;N) and k&gt;0:</span>\\n        <span class=\\"hljs-comment\\">#   k-=1</span>\\n        <span class=\\"hljs-comment\\">#   if left&lt;0:</span>\\n        <span class=\\"hljs-comment\\">#     ans.append(arr[right])</span>\\n        <span class=\\"hljs-comment\\">#     right+=1</span>\\n        <span class=\\"hljs-comment\\">#   elif right&gt;=N:</span>\\n        <span class=\\"hljs-comment\\">#     ans.append(arr[left])</span>\\n        <span class=\\"hljs-comment\\">#     left-=1</span>\\n        <span class=\\"hljs-comment\\">#   else:</span>\\n        <span class=\\"hljs-comment\\">#     l=x-arr[left]</span>\\n        <span class=\\"hljs-comment\\">#     r=arr[right]-x</span>\\n        <span class=\\"hljs-comment\\">#     if l&lt;=r:</span>\\n        <span class=\\"hljs-comment\\">#       ans.append(arr[left])</span>\\n        <span class=\\"hljs-comment\\">#       left-=1</span>\\n        <span class=\\"hljs-comment\\">#     elif l&gt;r :</span>\\n        <span class=\\"hljs-comment\\">#       ans.append(arr[right])</span>\\n        <span class=\\"hljs-comment\\">#       right+=1</span>\\n        <span class=\\"hljs-comment\\"># ans.sort()</span>\\n        <span class=\\"hljs-comment\\"># return ans</span>\\n        <span class=\\"hljs-comment\\"># O(lg(N-K))</span>\\n        N=len(arr)\\n        lo,hi=<span class=\\"hljs-number\\">0</span>,N-k\\n        <span class=\\"hljs-keyword\\">while</span> lo&lt;hi:\\n          mid=(lo+hi)//<span class=\\"hljs-number\\">2</span>\\n          <span class=\\"hljs-keyword\\">if</span> x-arr[mid]&gt;arr[mid+k]-x:\\n            lo=mid+<span class=\\"hljs-number\\">1</span>\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            hi=mid\\n        <span class=\\"hljs-keyword\\">return</span> arr[lo:lo+k]\\n</code></pre>\\n"],"querySlug":"find-k-closest-elements","created_at":"2019-02-26","timeArr":[2019,1,26,11,19,21,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<ol>\\n<li>因为接近<code>x</code>的<code>k</code>个数一定是连续的，因此我们只需要确定这个连续数组的起始点，就可以返回结果。</li>\\n<li>起点的索引一定处于<code>[0,N-k]</code>的范围内，因此我们使用二分法，只要判断出起点与<code>x</code>的差不大于终点(起点+<code>k</code>)与<code>x</code>的差即可。</li>\\n</ol>\\n","content":"<p>给定一个排序好的数组 <code>arr</code> ，两个整数 <code>k</code> 和 <code>x</code> ，从数组中找到最靠近 <code>x</code>（两数之差最小）的 <code>k</code> 个数。返回的结果必须要是按升序排好的。</p>\\n\\n<p>整数 <code>a</code> 比整数 <code>b</code> 更接近 <code>x</code> 需要满足：</p>\\n\\n<ul>\\n\\t<li><code>|a - x| < |b - x|</code> 或者</li>\\n\\t<li><code>|a - x| == |b - x|</code> 且 <code>a < b</code></li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [1,2,3,4,5], k = 4, x = 3\\n<strong>输出：</strong>[1,2,3,4]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [1,2,3,4,5], k = 4, x = -1\\n<strong>输出：</strong>[1,2,3,4]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= k <= arr.length</code></li>\\n\\t<li><code>1 <= arr.length <= 10<sup>4</sup></code></li>\\n\\t<li>数组里的每个元素与 <code>x</code> 的绝对值不超过 <code>10<sup>4</sup></code></li>\\n</ul>\\n","title":"658. 找到 K 个最接近的元素","relatedTags":["数组","双指针","二分查找","排序","堆（优先队列）"],"difficult":"Middle","lang":["python"],"uniqueID":"658","slug":"658-Find-K-Closest-Elements"}')}}]);