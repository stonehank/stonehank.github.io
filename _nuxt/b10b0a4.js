(window.webpackJsonp=window.webpackJsonp||[]).push([[869],{1667:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> permute = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">let</span> N=nums.length\\n  <span class=\\"hljs-keyword\\">let</span> used=<span class=\\"hljs-built_in\\">Array</span>(N).fill(<span class=\\"hljs-literal\\">false</span>)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">backtrack</span>(<span class=\\"hljs-params\\">arr</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(arr.length===N){\\n      <span class=\\"hljs-keyword\\">return</span> res.push(arr.slice())\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(used[i])<span class=\\"hljs-keyword\\">continue</span>\\n      used[i]=<span class=\\"hljs-literal\\">true</span>\\n      arr.push(nums[i])\\n      backtrack(arr)\\n      arr.pop()\\n      used[i]=<span class=\\"hljs-literal\\">false</span>\\n    }\\n  }\\n  backtrack([])\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"permutations","created_at":"2019-04-17","timeArr":[2019,3,17,23,23,26,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>无重复，最基础的回溯，用一个数组<code>used</code>保存已经使用过的数字，再用一个数组<code>arr</code>跟踪当前的排列状态，如果<code>arr.length===nums.length</code>，说明已经完成，\\n添加到结果<code>res</code>中，注意每次递归返回需要回复<code>used</code>和<code>arr</code>，以便下次继续使用。</p>\\n","content":"<p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <strong>所有可能的全排列</strong> 。你可以 <strong>按任意顺序</strong> 返回答案。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1,2,3]\\n<strong>输出：</strong>[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [0,1]\\n<strong>输出：</strong>[[0,1],[1,0]]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1]\\n<strong>输出：</strong>[[1]]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 6</code></li>\\n\\t<li><code>-10 <= nums[i] <= 10</code></li>\\n\\t<li><code>nums</code> 中的所有整数 <strong>互不相同</strong></li>\\n</ul>\\n","title":"46. 全排列","relatedTags":["数组","回溯"],"difficult":"Middle","lang":["javascript"],"uniqueID":"46","slug":"46-Permutations"}')}}]);