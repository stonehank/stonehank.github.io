(window.webpackJsonp=window.webpackJsonp||[]).push([[206],{1004:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for a binary tree node.\\n * function TreeNode(val) {\\n *     this.val = val;\\n *     this.left = this.right = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">p</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">q</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isSameTree = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">p, q</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(!p &amp;&amp; !q)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">if</span>(!p || !q)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">if</span>(p.val!==q.val)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">return</span> isSameTree(p.left,q.left) &amp;&amp; isSameTree(p.right,q.right)\\n};\\n</code></pre>\\n"],"querySlug":"same-tree","created_at":"2019-03-18","timeArr":[2019,2,18,11,47,56,0],"hasThinking":false,"content":"<p>给你两棵二叉树的根节点 <code>p</code> 和 <code>q</code> ，编写一个函数来检验这两棵树是否相同。</p>\\n\\n<p>如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/12/20/ex1.jpg\\" style=\\"width: 622px; height: 182px;\\" />\\n<pre>\\n<strong>输入：</strong>p = [1,2,3], q = [1,2,3]\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/12/20/ex2.jpg\\" style=\\"width: 382px; height: 182px;\\" />\\n<pre>\\n<strong>输入：</strong>p = [1,2], q = [1,null,2]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/12/20/ex3.jpg\\" style=\\"width: 622px; height: 182px;\\" />\\n<pre>\\n<strong>输入：</strong>p = [1,2,1], q = [1,1,2]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>两棵树上的节点数目都在范围 <code>[0, 100]</code> 内</li>\\n\\t<li><code>-10<sup>4</sup> <= Node.val <= 10<sup>4</sup></code></li>\\n</ul>\\n","title":"100. 相同的树","relatedTags":["树","深度优先搜索","广度优先搜索","二叉树"],"difficult":"Easy","lang":["javascript"],"uniqueID":"100","slug":"100-Same-Tree"}')}}]);