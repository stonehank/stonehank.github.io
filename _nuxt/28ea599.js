(window.webpackJsonp=window.webpackJsonp||[]).push([[947],{1745:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">M</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findCircleNum = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">M</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> N=M.length\\n  <span class=\\"hljs-keyword\\">let</span> uf=<span class=\\"hljs-built_in\\">Array</span>(N).fill().map(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">n,i</span>)=&gt;</span>i)\\n  <span class=\\"hljs-keyword\\">let</span> count=N\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">find</span>(<span class=\\"hljs-params\\">i</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(i!==uf[i]){\\n      uf[i]=find(uf[i])\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> uf[i]\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">union</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> i=find(a),\\n        j=find(b)\\n    <span class=\\"hljs-keyword\\">if</span>(i===j)<span class=\\"hljs-keyword\\">return</span> \\n    count--\\n    uf[i]=j\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;N;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(i===j)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(M[i][j]===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      union(i,j)\\n    }\\n  }\\n  \\n  <span class=\\"hljs-keyword\\">return</span> count\\n};\\n</code></pre>\\n"],"querySlug":"number-of-provinces","created_at":"2019-04-09","timeArr":[2019,3,9,23,41,42,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>一道典型的<code>union find</code>算法题。</p>\\n<p>假设最初朋友圈<code>count</code>有<code>N</code>个，当<code>M[i][j]===1</code>的时候，<code>union(i,j)</code>，如果发现之前未曾连接，说明两个朋友圈变为1个，<code>count--</code>。</p>\\n<p>最后返回<code>count</code>。</p>\\n","content":"<div class=\\"original__bRMd\\">\\n<div>\\n<p>有 <code>n</code> 个城市，其中一些彼此相连，另一些没有相连。如果城市 <code>a</code> 与城市 <code>b</code> 直接相连，且城市 <code>b</code> 与城市 <code>c</code> 直接相连，那么城市 <code>a</code> 与城市 <code>c</code> 间接相连。</p>\\n\\n<p><strong>省份</strong> 是一组直接或间接相连的城市，组内不含其他没有相连的城市。</p>\\n\\n<p>给你一个 <code>n x n</code> 的矩阵 <code>isConnected</code> ，其中 <code>isConnected[i][j] = 1</code> 表示第 <code>i</code> 个城市和第 <code>j</code> 个城市直接相连，而 <code>isConnected[i][j] = 0</code> 表示二者不直接相连。</p>\\n\\n<p>返回矩阵中 <strong>省份</strong> 的数量。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/12/24/graph1.jpg\\" style=\\"width: 222px; height: 142px;\\" />\\n<pre>\\n<strong>输入：</strong>isConnected = [[1,1,0],[1,1,0],[0,0,1]]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/12/24/graph2.jpg\\" style=\\"width: 222px; height: 142px;\\" />\\n<pre>\\n<strong>输入：</strong>isConnected = [[1,0,0],[0,1,0],[0,0,1]]\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n <= 200</code></li>\\n\\t<li><code>n == isConnected.length</code></li>\\n\\t<li><code>n == isConnected[i].length</code></li>\\n\\t<li><code>isConnected[i][j]</code> 为 <code>1</code> 或 <code>0</code></li>\\n\\t<li><code>isConnected[i][i] == 1</code></li>\\n\\t<li><code>isConnected[i][j] == isConnected[j][i]</code></li>\\n</ul>\\n</div>\\n</div>\\n","title":"547. 省份数量","relatedTags":["深度优先搜索","广度优先搜索","并查集","图"],"difficult":"Middle","lang":["javascript"],"uniqueID":"547","slug":"547-Number-of-Provinces"}')}}]);