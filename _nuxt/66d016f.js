(window.webpackJsonp=window.webpackJsonp||[]).push([[1212],{2010:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">peakIndexInMountainArray</span><span class=\\"hljs-params\\">(self, A)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type A: List[int]\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-comment\\"># for i in range(1,len(A)-1):</span>\\n        <span class=\\"hljs-comment\\">#   if A[i-1]&lt;A[i]&gt;A[i+1]:</span>\\n        <span class=\\"hljs-comment\\">#     return i</span>\\n        first, last = <span class=\\"hljs-number\\">0</span>, len(A) - <span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">while</span> first&lt;last:\\n            mid = (first + last) // <span class=\\"hljs-number\\">2</span>\\n            <span class=\\"hljs-keyword\\">if</span> A[mid - <span class=\\"hljs-number\\">1</span>] &lt; A[mid]: \\n                first = mid +<span class=\\"hljs-number\\">1</span>\\n            <span class=\\"hljs-keyword\\">else</span>: \\n                last = mid \\n            \\n        <span class=\\"hljs-keyword\\">return</span> first<span class=\\"hljs-number\\">-1</span>\\n</code></pre>\\n"],"querySlug":"peak-index-in-a-mountain-array","created_at":"2019-02-26","timeArr":[2019,1,26,20,55,17,0],"hasThinking":false,"content":"符合下列属性的数组 <code>arr</code> 称为 <strong>山脉数组</strong> ：\\n<ul>\\n\\t<li><code>arr.length >= 3</code></li>\\n\\t<li>存在 <code>i</code>（<code>0 < i < arr.length - 1</code>）使得：\\n\\t<ul>\\n\\t\\t<li><code>arr[0] < arr[1] < ... arr[i-1] < arr[i] </code></li>\\n\\t\\t<li><code>arr[i] > arr[i+1] > ... > arr[arr.length - 1]</code></li>\\n\\t</ul>\\n\\t</li>\\n</ul>\\n\\n<p>给你由整数组成的山脉数组 <code>arr</code> ，返回任何满足 <code>arr[0] < arr[1] < ... arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1]</code> 的下标 <code>i</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,1,0]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,2,1,0]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,10,5,2]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [3,4,5,1]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [24,69,100,99,79,78,67,36,26,19]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>3 <= arr.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>0 <= arr[i] <= 10<sup>6</sup></code></li>\\n\\t<li>题目数据保证 <code>arr</code> 是一个山脉数组</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong>很容易想到时间复杂度 <code>O(n)</code> 的解决方案，你可以设计一个 <code>O(log(n))</code> 的解决方案吗？</p>\\n","title":"852. 山脉数组的峰顶索引","relatedTags":["数组","二分查找"],"difficult":"Easy","lang":["python"],"uniqueID":"852","slug":"852-Peak-Index-in-a-Mountain-Array"}')}}]);