(window.webpackJsonp=window.webpackJsonp||[]).push([[636],{1434:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for singly-linked list.\\n * function ListNode(val, next) {\\n *     this.val = (val===undefined ? 0 : val)\\n *     this.next = (next===undefined ? null : next)\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{ListNode}</span> <span class=\\"hljs-variable\\">head</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">k</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{ListNode}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> swapNodes = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">head, k</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> first=head\\n    <span class=\\"hljs-keyword\\">let</span> allLen=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">while</span>(first){\\n        first=first.next\\n        allLen++\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> x1=k, x2=allLen-k+<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(x1==x2)<span class=\\"hljs-keyword\\">return</span> head\\n    <span class=\\"hljs-keyword\\">if</span>(x1&gt;x2){\\n        <span class=\\"hljs-keyword\\">let</span> t=x1\\n        x1=x2\\n        x2=t\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-keyword\\">new</span> ListNode(<span class=\\"hljs-literal\\">null</span>)\\n    res.next=head\\n    <span class=\\"hljs-keyword\\">let</span> root=res\\n    <span class=\\"hljs-keyword\\">let</span> nextStep=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> r1,r2,r3,r4,a,b\\n    <span class=\\"hljs-comment\\">// console.log(root,x1,x2)</span>\\n    <span class=\\"hljs-keyword\\">while</span>(root){\\n        nextStep++\\n        <span class=\\"hljs-keyword\\">if</span>(nextStep===x1){\\n            r1=root\\n            a=root.next\\n            <span class=\\"hljs-keyword\\">if</span>(x2-x1&gt;<span class=\\"hljs-number\\">2</span>){\\n                r2=a.next\\n            }\\n        }\\n        <span class=\\"hljs-keyword\\">if</span>(nextStep===x2){\\n            <span class=\\"hljs-keyword\\">if</span>(x2-x1&gt;<span class=\\"hljs-number\\">1</span>){\\n                r3=root\\n            }\\n            b=root.next\\n            r4=b.next\\n        }\\n        root=root.next\\n    }\\n    r1.next=b\\n    <span class=\\"hljs-keyword\\">if</span>(r2 &amp;&amp; r3){\\n        b.next=r2\\n        r3.next=a\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(r3){\\n        b.next=r3\\n        r3.next=a\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n        b.next=a\\n    }\\n    a.next=r4\\n    <span class=\\"hljs-keyword\\">return</span> res.next\\n\\n<span class=\\"hljs-comment\\">/*\\n\\nx 1 a 2 x 3 b 4 x x\\n1.next=b\\nb.next=2\\n3.next=a\\na.next=4\\n\\nx 1 a b 2 x x\\n1.next=b\\nb.next=a\\na.next=2\\n\\n*/</span> \\n    \\n};\\n</code></pre>\\n"],"querySlug":"swapping-nodes-in-a-linked-list","created_at":"2021-02-27","timeArr":[2021,1,27,11,54,12,0],"hasThinking":false,"content":"<p>给你链表的头节点 <code>head</code> 和一个整数 <code>k</code> 。</p>\\n\\n<p><strong>交换</strong> 链表正数第 <code>k</code> 个节点和倒数第 <code>k</code> 个节点的值后，返回链表的头节点（链表 <strong>从 1 开始索引</strong>）。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/01/10/linked1.jpg\\" style=\\"width: 722px; height: 202px;\\" />\\n<pre>\\n<strong>输入：</strong>head = [1,2,3,4,5], k = 2\\n<strong>输出：</strong>[1,4,3,2,5]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>head = [7,9,6,6,7,8,3,0,9,5], k = 5\\n<strong>输出：</strong>[7,9,6,6,8,7,3,0,9,5]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>head = [1], k = 1\\n<strong>输出：</strong>[1]\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>head = [1,2], k = 1\\n<strong>输出：</strong>[2,1]\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>head = [1,2,3], k = 2\\n<strong>输出：</strong>[1,2,3]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>链表中节点的数目是 <code>n</code></li>\\n\\t<li><code>1 <= k <= n <= 10<sup>5</sup></code></li>\\n\\t<li><code>0 <= Node.val <= 100</code></li>\\n</ul>\\n","title":"1721. 交换链表中的节点","relatedTags":["链表","双指针"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1721","slug":"1721-Swapping-Nodes-in-a-Linked-List"}')}}]);