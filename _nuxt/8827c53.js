(window.webpackJsonp=window.webpackJsonp||[]).push([[1155],{1953:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> removeDuplicates = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> idx=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nums.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(idx&lt;<span class=\\"hljs-number\\">2</span> || nums[i]!==nums[idx<span class=\\"hljs-number\\">-2</span>]){\\n            nums[idx]=nums[i]\\n            idx++\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> idx\\n};\\n</code></pre>\\n"],"querySlug":"remove-duplicates-from-sorted-array-ii","created_at":"2021-04-06","timeArr":[2021,3,6,7,47,20,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>因为已经排序，并且要求最多2个重复，因此检查<code>nums[i]&gt;nums[k-2]</code>，如果条件成立，说明<code>nums[i]</code>要么没有重复，要么有重复不超过2个，</p>\\n<p>替换<code>nums[k++]</code>，其中<code>k</code>为一个索引，<code>k</code>之前代表都是符合条件的数值。</p>\\n","content":"<p>给你一个有序数组 <code>nums</code> ，请你<strong><a href=\\"http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\\" target=\\"_blank\\"> 原地</a></strong> 删除重复出现的元素，使每个元素 <strong>最多出现两次</strong> ，返回删除后数组的新长度。</p>\\n\\n<p>不要使用额外的数组空间，你必须在 <strong><a href=\\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\\" target=\\"_blank\\">原地 </a>修改输入数组 </strong>并在使用 O(1) 额外空间的条件下完成。</p>\\n\\n<p> </p>\\n\\n<p><strong>说明：</strong></p>\\n\\n<p>为什么返回数值是整数，但输出的答案是数组呢？</p>\\n\\n<p>请注意，输入数组是以<strong>「引用」</strong>方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。</p>\\n\\n<p>你可以想象内部操作如下:</p>\\n\\n<pre>\\n// <strong>nums</strong> 是以“引用”方式传递的。也就是说，不对实参做任何拷贝\\nint len = removeDuplicates(nums);\\n\\n// 在函数里修改输入数组对于调用者是可见的。\\n// 根据你的函数返回的长度, 它会打印出数组中<strong> 该长度范围内</strong> 的所有元素。\\nfor (int i = 0; i < len; i++) {\\n    print(nums[i]);\\n}\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1,1,1,2,2,3]\\n<strong>输出：</strong>5, nums = [1,1,2,2,3]\\n<strong>解释：</strong>函数应返回新长度 length = <strong><code>5</code></strong>, 并且原数组的前五个元素被修改为 <strong><code>1, 1, 2, 2,</code></strong> <strong>3 </strong>。 不需要考虑数组中超出新长度后面的元素。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [0,0,1,1,1,1,2,3,3]\\n<strong>输出：</strong>7, nums = [0,0,1,1,2,3,3]\\n<strong>解释：</strong>函数应返回新长度 length = <strong><code>7</code></strong>, 并且原数组的前五个元素被修改为 <strong><code>0</code></strong>, <strong>0</strong>, <strong>1</strong>, <strong>1</strong>, <strong>2</strong>, <strong>3</strong>, <strong>3 。</strong> 不需要考虑数组中超出新长度后面的元素。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 3 * 10<sup>4</sup></code></li>\\n\\t<li><code>-10<sup>4</sup> <= nums[i] <= 10<sup>4</sup></code></li>\\n\\t<li><code>nums</code> 已按升序排列</li>\\n</ul>\\n","title":"80. 删除有序数组中的重复项 II","relatedTags":["数组","双指针"],"difficult":"Middle","lang":["javascript"],"uniqueID":"80","slug":"80-Remove-Duplicates-from-Sorted-Array-II"}')}}]);