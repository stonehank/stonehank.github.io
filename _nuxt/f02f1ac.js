(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{1197:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">status</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">candies</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">keys</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">containedBoxes</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">initialBoxes</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxCandies = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">status, candies, keys, containedBoxes, initialBoxes</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> arr=[]\\n  <span class=\\"hljs-keyword\\">let</span> hasFetch={}\\n  <span class=\\"hljs-keyword\\">let</span> hasKey={}\\n  <span class=\\"hljs-keyword\\">let</span> hasBox={}\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;initialBoxes.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> id=initialBoxes[i]\\n    <span class=\\"hljs-keyword\\">if</span>(status[id]===<span class=\\"hljs-number\\">1</span>){\\n      arr.push(id)\\n      hasFetch[id]=<span class=\\"hljs-literal\\">true</span>\\n     \\n    }\\n     hasBox[id]=<span class=\\"hljs-literal\\">true</span>\\n  }\\n  \\n  \\n  <span class=\\"hljs-keyword\\">while</span>(arr.length&gt;<span class=\\"hljs-number\\">0</span>){\\n    <span class=\\"hljs-keyword\\">let</span> len=arr.length\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len;i++){\\n      <span class=\\"hljs-keyword\\">let</span> id=arr.shift()\\n      res+=candies[id]\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> key <span class=\\"hljs-keyword\\">of</span> keys[id]){\\n        hasKey[key]=<span class=\\"hljs-literal\\">true</span>\\n      }\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> boxId <span class=\\"hljs-keyword\\">of</span> containedBoxes[id]){\\n        hasBox[boxId]=<span class=\\"hljs-literal\\">true</span>\\n      }\\n    \\n      status[id]=<span class=\\"hljs-number\\">1</span>\\n      candies[id]=<span class=\\"hljs-number\\">0</span>\\n      keys[id]=[]\\n      containedBoxes[id]=[]\\n    }\\n    <span class=\\"hljs-built_in\\">console</span>.log(hasBox)\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> boxKey <span class=\\"hljs-keyword\\">in</span> hasBox){\\n      <span class=\\"hljs-keyword\\">let</span> boxId=+boxKey\\n      <span class=\\"hljs-keyword\\">if</span>(hasFetch[boxId]){\\n        <span class=\\"hljs-keyword\\">continue</span>\\n        <span class=\\"hljs-keyword\\">delete</span>(hasBox[boxId])\\n      }\\n      <span class=\\"hljs-keyword\\">if</span>(hasKey[boxId] || (status[boxId]===<span class=\\"hljs-number\\">1</span> &amp;&amp; !hasFetch[boxId])){\\n        hasFetch[boxId]=<span class=\\"hljs-literal\\">true</span>\\n        arr.push(boxId)\\n      }\\n      <span class=\\"hljs-comment\\">// hasBox[boxId]=true</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"maximum-candies-you-can-get-from-boxes","created_at":"2019-12-22","timeArr":[2019,11,22,11,59,10,0],"hasThinking":false,"content":"<p>给你&nbsp;<code>n</code>&nbsp;个盒子，每个盒子的格式为&nbsp;<code>[status, candies, keys, containedBoxes]</code>&nbsp;，其中：</p>\\n\\n<ul>\\n\\t<li>状态字&nbsp;<code>status[i]</code>：整数，如果&nbsp;<code>box[i]</code>&nbsp;是开的，那么是 <strong>1&nbsp;</strong>，否则是 <strong>0&nbsp;</strong>。</li>\\n\\t<li>糖果数&nbsp;<code>candies[i]</code>: 整数，表示&nbsp;<code>box[i]</code> 中糖果的数目。</li>\\n\\t<li>钥匙&nbsp;<code>keys[i]</code>：数组，表示你打开&nbsp;<code>box[i]</code>&nbsp;后，可以得到一些盒子的钥匙，每个元素分别为该钥匙对应盒子的下标。</li>\\n\\t<li>内含的盒子&nbsp;<code>containedBoxes[i]</code>：整数，表示放在&nbsp;<code>box[i]</code>&nbsp;里的盒子所对应的下标。</li>\\n</ul>\\n\\n<p>给你一个&nbsp;<code>initialBoxes</code> 数组，表示你现在得到的盒子，你可以获得里面的糖果，也可以用盒子里的钥匙打开新的盒子，还可以继续探索从这个盒子里找到的其他盒子。</p>\\n\\n<p>请你按照上述规则，返回可以获得糖果的 <strong>最大数目&nbsp;</strong>。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>status = [1,0,1,0], candies = [7,5,4,100], keys = [[],[],[1],[]], containedBoxes = [[1,2],[3],[],[]], initialBoxes = [0]\\n<strong>输出：</strong>16\\n<strong>解释：\\n</strong>一开始你有盒子 0 。你将获得它里面的 7 个糖果和盒子 1 和 2。\\n盒子 1 目前状态是关闭的，而且你还没有对应它的钥匙。所以你将会打开盒子 2 ，并得到里面的 4 个糖果和盒子 1 的钥匙。\\n在盒子 1 中，你会获得 5 个糖果和盒子 3 ，但是你没法获得盒子 3 的钥匙所以盒子 3 会保持关闭状态。\\n你总共可以获得的糖果数目 = 7 + 4 + 5 = 16 个。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>status = [1,0,0,0,0,0], candies = [1,1,1,1,1,1], keys = [[1,2,3,4,5],[],[],[],[],[]], containedBoxes = [[1,2,3,4,5],[],[],[],[],[]], initialBoxes = [0]\\n<strong>输出：</strong>6\\n<strong>解释：\\n</strong>你一开始拥有盒子 0 。打开它你可以找到盒子 1,2,3,4,5 和它们对应的钥匙。\\n打开这些盒子，你将获得所有盒子的糖果，所以总糖果数为 6 个。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>status = [1,1,1], candies = [100,1,100], keys = [[],[0,2],[]], containedBoxes = [[],[],[]], initialBoxes = [1]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>status = [1], candies = [100], keys = [[]], containedBoxes = [[]], initialBoxes = []\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>status = [1,1,1], candies = [2,3,2], keys = [[],[],[]], containedBoxes = [[],[],[]], initialBoxes = [2,1,0]\\n<strong>输出：</strong>7\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= status.length &lt;= 1000</code></li>\\n\\t<li><code>status.length == candies.length == keys.length == containedBoxes.length == n</code></li>\\n\\t<li><code>status[i]</code> 要么是&nbsp;<code>0</code>&nbsp;要么是&nbsp;<code>1</code> 。</li>\\n\\t<li><code>1 &lt;= candies[i] &lt;= 1000</code></li>\\n\\t<li><code>0 &lt;= keys[i].length &lt;= status.length</code></li>\\n\\t<li><code>0 &lt;= keys[i][j] &lt; status.length</code></li>\\n\\t<li><code>keys[i]</code>&nbsp;中的值都是互不相同的。</li>\\n\\t<li><code>0 &lt;= containedBoxes[i].length &lt;= status.length</code></li>\\n\\t<li><code>0 &lt;= containedBoxes[i][j] &lt; status.length</code></li>\\n\\t<li><code>containedBoxes[i]</code>&nbsp;中的值都是互不相同的。</li>\\n\\t<li>每个盒子最多被一个盒子包含。</li>\\n\\t<li><code>0 &lt;= initialBoxes.length&nbsp;&lt;= status.length</code></li>\\n\\t<li><code>0 &lt;= initialBoxes[i] &lt; status.length</code></li>\\n</ul>\\n","title":"1298. 你能从盒子里获得的最大糖果数","relatedTags":["广度优先搜索","数组"],"difficult":"Hard","lang":["javascript"],"uniqueID":"1298","slug":"1298-Maximum-Candies-You-Can-Get-from-Boxes"}')}}]);