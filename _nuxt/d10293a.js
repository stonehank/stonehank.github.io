(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{1098:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for a binary tree node.\\n * function TreeNode(val) {\\n *     this.val = val;\\n *     this.left = this.right = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">root</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">sum</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> hasPathSum = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">root, sum</span>) </span>{\\n  <span class=\\"hljs-comment\\">// function hasPath(root,rest){</span>\\n    <span class=\\"hljs-keyword\\">if</span>(!root)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">if</span>(!root.left &amp;&amp; !root.right)<span class=\\"hljs-keyword\\">return</span> sum===root.val\\n    <span class=\\"hljs-keyword\\">return</span> hasPathSum(root.left,sum-root.val) || hasPathSum(root.right,sum-root.val)\\n  <span class=\\"hljs-comment\\">// }</span>\\n};\\n</code></pre>\\n"],"querySlug":"path-sum","created_at":"2019-03-18","timeArr":[2019,2,18,14,53,24,0],"hasThinking":false,"content":"<p>给你二叉树的根节点 <code>root</code> 和一个表示目标和的整数 <code>targetSum</code> ，判断该树中是否存在 <strong>根节点到叶子节点</strong> 的路径，这条路径上所有节点值相加等于目标和 <code>targetSum</code> 。</p>\\n\\n<p><strong>叶子节点</strong> 是指没有子节点的节点。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2021/01/18/pathsum1.jpg\\" style=\\"width: 500px; height: 356px;\\" />\\n<pre>\\n<strong>输入：</strong>root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\\" />\\n<pre>\\n<strong>输入：</strong>root = [1,2,3], targetSum = 5\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>root = [1,2], targetSum = 0\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>树中节点的数目在范围 <code>[0, 5000]</code> 内</li>\\n\\t<li><code>-1000 <= Node.val <= 1000</code></li>\\n\\t<li><code>-1000 <= targetSum <= 1000</code></li>\\n</ul>\\n","title":"112. 路径总和","relatedTags":["树","深度优先搜索","二叉树"],"difficult":"Easy","lang":["javascript"],"uniqueID":"112","slug":"112-Path-Sum"}')}}]);