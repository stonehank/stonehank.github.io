(window.webpackJsonp=window.webpackJsonp||[]).push([[1061],{1859:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">x</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> reverse = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">x</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> symbol=x&lt;<span class=\\"hljs-number\\">0</span> ? <span class=\\"hljs-number\\">-1</span> : <span class=\\"hljs-number\\">1</span>\\n  x=<span class=\\"hljs-built_in\\">Math</span>.abs(x)\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">while</span>(x&gt;<span class=\\"hljs-number\\">0</span>){\\n    <span class=\\"hljs-keyword\\">let</span> t=x%<span class=\\"hljs-number\\">10</span>\\n    res=res*<span class=\\"hljs-number\\">10</span>+t\\n    x=<span class=\\"hljs-built_in\\">Math</span>.floor(x/<span class=\\"hljs-number\\">10</span>)\\n  }\\n  res*=symbol\\n  <span class=\\"hljs-keyword\\">if</span>(res&lt;-<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">31</span>) || res&gt;<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">31</span>)<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"reverse-integer","created_at":"2019-03-29","timeArr":[2019,2,29,10,14,11,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>使用字符串在反转并不是最好的选择，因为还需要处理负号和<code>0</code>的情况，用数字运算方式反转比较适合。</p>\\n<p>每次找到当前数的最后一位，然后作为反转数字的第一位，例如<code>123</code>：</p>\\n<pre class=\\"hljs\\"><code>123 --&gt; 0*10  + 3\\n12  --&gt; 3*10  + 2\\n1   --&gt; 32*10 + 1\\n</code></pre>\\n<p>再注意保存开始的正负状态和结果的限制<code>[−2^31,  2^31 − 1]</code>。</p>\\n","content":"<p>给你一个 32 位的有符号整数 <code>x</code> ，返回将 <code>x</code> 中的数字部分反转后的结果。</p>\\n\\n<p>如果反转后整数超过 32 位的有符号整数的范围 <code>[−2<sup>31</sup>,  2<sup>31 </sup>− 1]</code> ，就返回 0。</p>\\n<strong>假设环境不允许存储 64 位整数（有符号或无符号）。</strong>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>x = 123\\n<strong>输出：</strong>321\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>x = -123\\n<strong>输出：</strong>-321\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>x = 120\\n<strong>输出：</strong>21\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>x = 0\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>-2<sup>31</sup> <= x <= 2<sup>31</sup> - 1</code></li>\\n</ul>\\n","title":"7. 整数反转","relatedTags":["数学"],"difficult":"Easy","lang":["javascript"],"uniqueID":"7","slug":"7-Reverse-Integer"}')}}]);