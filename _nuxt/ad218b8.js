(window.webpackJsonp=window.webpackJsonp||[]).push([[854],{1652:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">numberOfArithmeticSlices</span><span class=\\"hljs-params\\">(self, A)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type A: List[int]\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        N=len(A)\\n        ans=<span class=\\"hljs-number\\">0</span>\\n        dp=[{} <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(N)]\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(N):\\n          <span class=\\"hljs-keyword\\">for</span> j <span class=\\"hljs-keyword\\">in</span> range(i):\\n            delta=A[i]-A[j]\\n            <span class=\\"hljs-keyword\\">if</span> <span class=\\"hljs-keyword\\">not</span> delta <span class=\\"hljs-keyword\\">in</span> dp[i]:\\n              dp[i][delta]=<span class=\\"hljs-number\\">0</span>\\n            <span class=\\"hljs-keyword\\">if</span> <span class=\\"hljs-keyword\\">not</span> delta <span class=\\"hljs-keyword\\">in</span> dp[j]:\\n              dp[j][delta]=<span class=\\"hljs-number\\">0</span>\\n            prev=dp[j][delta]\\n            \\n            dp[i][delta]+=prev+<span class=\\"hljs-number\\">1</span>\\n            ans+=prev\\n        \\n        <span class=\\"hljs-keyword\\">return</span> ans\\n</code></pre>\\n"],"querySlug":"arithmetic-slices-ii-subsequence","created_at":"2019-03-03","timeArr":[2019,2,3,17,17,1,0],"hasThinking":false,"content":"<p>给你一个整数数组 <code>nums</code> ，返回 <code>nums</code> 中所有 <strong>等差子序列</strong> 的数目。</p>\\n\\n<p>如果一个序列中 <strong>至少有三个元素</strong> ，并且任意两个相邻元素之差相同，则称该序列为等差序列。</p>\\n\\n<ul>\\n\\t<li>例如，<code>[1, 3, 5, 7, 9]</code>、<code>[7, 7, 7, 7]</code> 和 <code>[3, -1, -5, -9]</code> 都是等差序列。</li>\\n\\t<li>再例如，<code>[1, 1, 2, 5, 7]</code> 不是等差序列。</li>\\n</ul>\\n\\n<p>数组中的子序列是从数组中删除一些元素（也可能不删除）得到的一个序列。</p>\\n\\n<ul>\\n\\t<li>例如，<code>[2,5,10]</code> 是 <code>[1,2,1,<em><strong>2</strong></em>,4,1,<strong><em>5</em></strong>,<em><strong>10</strong></em>]</code> 的一个子序列。</li>\\n</ul>\\n\\n<p>题目数据保证答案是一个 <strong>32-bit</strong> 整数。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [2,4,6,8,10]\\n<strong>输出：</strong>7\\n<strong>解释：</strong>所有的等差子序列为：\\n[2,4,6]\\n[4,6,8]\\n[6,8,10]\\n[2,4,6,8]\\n[4,6,8,10]\\n[2,4,6,8,10]\\n[2,6,10]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [7,7,7,7,7]\\n<strong>输出：</strong>16\\n<strong>解释：</strong>数组中的任意子序列都是等差子序列。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1&nbsp; &lt;= nums.length &lt;= 1000</code></li>\\n\\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\\n</ul>\\n","title":"446. 等差数列划分 II - 子序列","relatedTags":["数组","动态规划"],"difficult":"Hard","lang":["python"],"uniqueID":"446","slug":"446-Arithmetic-Slices-II-Subsequence"}')}}]);