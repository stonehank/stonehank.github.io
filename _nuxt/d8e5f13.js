(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{1051:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">paths</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> gardenNoAdj = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N, paths</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> graph=<span class=\\"hljs-built_in\\">Array</span>(N).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span>[])\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [v,w] <span class=\\"hljs-keyword\\">of</span> paths){\\n    graph[v<span class=\\"hljs-number\\">-1</span>].push(w<span class=\\"hljs-number\\">-1</span>)\\n    graph[w<span class=\\"hljs-number\\">-1</span>].push(v<span class=\\"hljs-number\\">-1</span>)\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> color=<span class=\\"hljs-built_in\\">Array</span>(N).fill(<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n    fill(i)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> color\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">fill</span>(<span class=\\"hljs-params\\">v</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> adj=graph[v]\\n    <span class=\\"hljs-keyword\\">let</span> noValid=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;adj.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(color[adj[i]]!==<span class=\\"hljs-number\\">0</span>)noValid[color[adj[i]]]=<span class=\\"hljs-literal\\">true</span>\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;=<span class=\\"hljs-number\\">4</span>;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(noValid[i])<span class=\\"hljs-keyword\\">continue</span>\\n      color[v]=i\\n      <span class=\\"hljs-keyword\\">break</span>\\n    }\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"flower-planting-with-no-adjacent","created_at":"2019-05-12","timeArr":[2019,4,12,12,24,29,0],"hasThinking":false,"content":"<p>有 <code>n</code> 个花园，按从 <code>1</code> 到 <code>n</code> 标记。另有数组 <code>paths</code> ，其中 <code>paths[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> 描述了花园 <code>x<sub>i</sub></code> 到花园 <code>y<sub>i</sub></code> 的双向路径。在每个花园中，你打算种下四种花之一。</p>\\n\\n<p>另外，所有花园 <strong>最多</strong> 有 3 条路径可以进入或离开.</p>\\n\\n<p>你需要为每个花园选择一种花，使得通过路径相连的任何两个花园中的花的种类互不相同。</p>\\n\\n<p>以数组形式返回 <strong>任一</strong> 可行的方案作为答案 <code>answer</code>，其中 <code>answer[i]</code> 为在第 <code>(i+1)</code> 个花园中种植的花的种类。花的种类用  1、2、3、4 表示。保证存在答案。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 3, paths = [[1,2],[2,3],[3,1]]\\n<strong>输出：</strong>[1,2,3]\\n<strong>解释：</strong>\\n花园 1 和 2 花的种类不同。\\n花园 2 和 3 花的种类不同。\\n花园 3 和 1 花的种类不同。\\n因此，[1,2,3] 是一个满足题意的答案。其他满足题意的答案有 [1,2,4]、[1,4,2] 和 [3,2,1]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 4, paths = [[1,2],[3,4]]\\n<strong>输出：</strong>[1,2,1,2]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]\\n<strong>输出：</strong>[1,2,3,4]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n <= 10<sup>4</sup></code></li>\\n\\t<li><code>0 <= paths.length <= 2 * 10<sup>4</sup></code></li>\\n\\t<li><code>paths[i].length == 2</code></li>\\n\\t<li><code>1 <= x<sub>i</sub>, y<sub>i</sub> <= n</code></li>\\n\\t<li><code>x<sub>i</sub> != y<sub>i</sub></code></li>\\n\\t<li>每个花园 <strong>最多</strong> 有 3 条路径可以进入或离开</li>\\n</ul>\\n","title":"1042. 不邻接植花","relatedTags":["深度优先搜索","广度优先搜索","图"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1042","slug":"1042-Flower-Planting-With-No-Adjacent"}')}}]);