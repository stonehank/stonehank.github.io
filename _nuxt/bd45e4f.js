(window.webpackJsonp=window.webpackJsonp||[]).push([[839],{1637:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">num1</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">num2</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> multiply = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">num1, num2</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(num1===<span class=\\"hljs-string\\">\\"0\\"</span> || num2===<span class=\\"hljs-string\\">\\"0\\"</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\\"0\\"</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">mult</span>(<span class=\\"hljs-params\\">s1,s2</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> carry=<span class=\\"hljs-number\\">0</span>,res=<span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=s2.length<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n      <span class=\\"hljs-keyword\\">let</span> n=s2[i]*s1 + carry\\n      carry=<span class=\\"hljs-built_in\\">Math</span>.floor(n / <span class=\\"hljs-number\\">10</span>)\\n      n %=<span class=\\"hljs-number\\">10</span>\\n      res=n+<span class=\\"hljs-string\\">\'\'</span>+res\\n    }\\n\\t  <span class=\\"hljs-keyword\\">if</span>(carry&gt;<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> carry+<span class=\\"hljs-string\\">\'\'</span>+res\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">plus</span>(<span class=\\"hljs-params\\">s1,s2</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'\'</span>,carry=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> i=s1.length<span class=\\"hljs-number\\">-1</span>,j=s2.length<span class=\\"hljs-number\\">-1</span>\\n    <span class=\\"hljs-keyword\\">while</span>(i&gt;=<span class=\\"hljs-number\\">0</span> || j&gt;=<span class=\\"hljs-number\\">0</span>){\\n      <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>\\n      <span class=\\"hljs-keyword\\">if</span>(i===<span class=\\"hljs-number\\">-1</span>) sum=carry+(+s2[j--])\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(j===<span class=\\"hljs-number\\">-1</span>) sum=carry+(+s1[i--])\\n      <span class=\\"hljs-keyword\\">else</span> sum=carry+(+s1[i--])+(+s2[j--])\\n      carry=<span class=\\"hljs-built_in\\">Math</span>.floor(sum / <span class=\\"hljs-number\\">10</span>)\\n      sum %= <span class=\\"hljs-number\\">10</span>\\n      res=sum + <span class=\\"hljs-string\\">\'\'</span> +res\\n    }\\n\\t  <span class=\\"hljs-keyword\\">if</span>(carry&gt;<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> carry+res\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'0\'</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=num1.length<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n    <span class=\\"hljs-keyword\\">let</span> m=mult(num1[i],num2)+<span class=\\"hljs-string\\">\\"0\\"</span>.repeat(num1.length<span class=\\"hljs-number\\">-1</span>-i)\\n    res=plus(res,m)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"multiply-strings","created_at":"2019-03-22","timeArr":[2019,2,22,11,34,7,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>按照小学算乘法的步骤，关键点是使用<strong>数组</strong>来保存进位值，数组的长度最长不会超过<code>num1.length+num2.length</code>。</p>\\n<p>例如： 计算<code>18*45</code></p>\\n<pre class=\\"hljs\\"><code>      1 8\\n      4 5\\n   ---------\\n      4 0     [0,0,4,0]\\n      5       [0,0,9,0]\\n    3 2       [0,4,1,0]\\n    4         [0,8,1,0]\\n   ----------\\n    8 1 0   \\n</code></pre>\\n","content":"<p>给定两个以字符串形式表示的非负整数&nbsp;<code>num1</code>&nbsp;和&nbsp;<code>num2</code>，返回&nbsp;<code>num1</code>&nbsp;和&nbsp;<code>num2</code>&nbsp;的乘积，它们的乘积也表示为字符串形式。</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre><strong>输入:</strong> num1 = &quot;2&quot;, num2 = &quot;3&quot;\\n<strong>输出:</strong> &quot;6&quot;</pre>\\n\\n<p><strong>示例&nbsp;2:</strong></p>\\n\\n<pre><strong>输入:</strong> num1 = &quot;123&quot;, num2 = &quot;456&quot;\\n<strong>输出:</strong> &quot;56088&quot;</pre>\\n\\n<p><strong>说明：</strong></p>\\n\\n<ol>\\n\\t<li><code>num1</code>&nbsp;和&nbsp;<code>num2</code>&nbsp;的长度小于110。</li>\\n\\t<li><code>num1</code> 和&nbsp;<code>num2</code> 只包含数字&nbsp;<code>0-9</code>。</li>\\n\\t<li><code>num1</code> 和&nbsp;<code>num2</code>&nbsp;均不以零开头，除非是数字 0 本身。</li>\\n\\t<li><strong>不能使用任何标准库的大数类型（比如 BigInteger）</strong>或<strong>直接将输入转换为整数来处理</strong>。</li>\\n</ol>\\n","title":"43. 字符串相乘","relatedTags":["数学","字符串","模拟"],"difficult":"Middle","lang":["javascript"],"uniqueID":"43","slug":"43-Multiply-Strings"}')}}]);