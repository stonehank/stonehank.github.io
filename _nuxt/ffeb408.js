(window.webpackJsonp=window.webpackJsonp||[]).push([[1196],{1994:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">dominoes</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> pushDominoes = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">dominoes</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> N=dominoes.length\\n  <span class=\\"hljs-keyword\\">let</span> arr=<span class=\\"hljs-built_in\\">Array</span>(N).fill(<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(dominoes[i]===<span class=\\"hljs-string\\">\\"R\\"</span>){\\n      <span class=\\"hljs-keyword\\">let</span> count=N,idx=i+<span class=\\"hljs-number\\">1</span>\\n      arr[i]=count--\\n      <span class=\\"hljs-keyword\\">while</span>(idx&lt;N &amp;&amp; dominoes[idx]===<span class=\\"hljs-string\\">\\".\\"</span>){\\n        arr[idx]+=count--\\n        idx++\\n      }\\n      i=idx<span class=\\"hljs-number\\">-1</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=N<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n    <span class=\\"hljs-keyword\\">if</span>(dominoes[i]===<span class=\\"hljs-string\\">\\"L\\"</span>){\\n      <span class=\\"hljs-keyword\\">let</span> count=-N,idx=i<span class=\\"hljs-number\\">-1</span>\\n      arr[i]=count++\\n      <span class=\\"hljs-keyword\\">while</span>(idx&gt;=<span class=\\"hljs-number\\">0</span> &amp;&amp; dominoes[idx]===<span class=\\"hljs-string\\">\\".\\"</span>){\\n        arr[idx]+=count++\\n        idx--\\n      }\\n      i=idx+<span class=\\"hljs-number\\">1</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> result=<span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(arr[i]===<span class=\\"hljs-number\\">0</span>)result+=<span class=\\"hljs-string\\">\\".\\"</span>\\n    <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(arr[i]&gt;<span class=\\"hljs-number\\">0</span>)result+=<span class=\\"hljs-string\\">\\"R\\"</span>\\n    <span class=\\"hljs-keyword\\">else</span> result+=<span class=\\"hljs-string\\">\\"L\\"</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> result\\n};\\n</code></pre>\\n"],"querySlug":"push-dominoes","created_at":"2019-03-08","timeArr":[2019,2,8,20,45,50,0],"hasThinking":false,"content":"<p>一行中有 <code>N</code> 张多米诺骨牌，我们将每张多米诺骨牌垂直竖立。</p>\\n\\n<p>在开始时，我们同时把一些多米诺骨牌向左或向右推。</p>\\n\\n<p><img alt=\\"\\" src=\\"https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/05/19/domino.png\\" style=\\"height: 160px; width: 418px;\\"></p>\\n\\n<p>每过一秒，倒向左边的多米诺骨牌会推动其左侧相邻的多米诺骨牌。</p>\\n\\n<p>同样地，倒向右边的多米诺骨牌也会推动竖立在其右侧的相邻多米诺骨牌。</p>\\n\\n<p>如果同时有多米诺骨牌落在一张垂直竖立的多米诺骨牌的两边，由于受力平衡， 该骨牌仍然保持不变。</p>\\n\\n<p>就这个问题而言，我们会认为正在下降的多米诺骨牌不会对其它正在下降或已经下降的多米诺骨牌施加额外的力。</p>\\n\\n<p>给定表示初始状态的字符串 &quot;S&quot; 。如果第 i 张多米诺骨牌被推向左边，则 <code>S[i] = &#39;L&#39;</code>；如果第 i 张多米诺骨牌被推向右边，则 <code>S[i] = &#39;R&#39;</code>；如果第 i 张多米诺骨牌没有被推动，则 <code>S[i] = &#39;.&#39;</code>。</p>\\n\\n<p>返回表示最终状态的字符串。</p>\\n\\n<p><strong>示例 </strong><strong>1</strong><strong>：</strong></p>\\n\\n<pre><strong>输入：</strong>&quot;.L.R...LR..L..&quot;\\n<strong>输出：</strong>&quot;LL.RR.LLRRLL..&quot;</pre>\\n\\n<p><strong>示例 </strong><strong>2</strong><strong>：</strong></p>\\n\\n<pre><strong>输入：</strong>&quot;RR.L&quot;\\n<strong>输出：</strong>&quot;RR.L&quot;\\n<strong>说明：</strong>第一张多米诺骨牌没有给第二张施加额外的力。</pre>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>0 &lt;= N &lt;= 10^5</code></li>\\n\\t<li>表示多米诺骨牌状态的字符串只含有 <code>&#39;L&#39;</code>，<code>&#39;R&#39;</code>; 以及 <code>&#39;.&#39;</code>;</li>\\n</ol>\\n","title":"838. 推多米诺","relatedTags":["双指针","字符串","动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"838","slug":"838-Push-Dominoes"}')}}]);