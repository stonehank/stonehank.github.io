(window.webpackJsonp=window.webpackJsonp||[]).push([[886],{1684:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">radius</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">x_center</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">y_center</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> Solution = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">radius, x_center, y_center</span>) </span>{\\n  <span class=\\"hljs-keyword\\">this</span>.radius=radius\\n  <span class=\\"hljs-keyword\\">this</span>.calcRand=<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">r,angle</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> radian=angle*<span class=\\"hljs-built_in\\">Math</span>.PI/<span class=\\"hljs-number\\">180</span>\\n    <span class=\\"hljs-keyword\\">let</span> y=r*<span class=\\"hljs-built_in\\">Math</span>.sin(radian)\\n    <span class=\\"hljs-keyword\\">let</span> x=r*<span class=\\"hljs-built_in\\">Math</span>.cos(radian)\\n    <span class=\\"hljs-keyword\\">return</span> [x_center+x,y_center+y]\\n  }\\n};\\n\\n<span class=\\"hljs-comment\\">/**\\n * @return {number[]}\\n */</span>\\nSolution.prototype.randPoint = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> ranR=<span class=\\"hljs-built_in\\">Math</span>.sqrt(<span class=\\"hljs-built_in\\">Math</span>.random())*<span class=\\"hljs-keyword\\">this</span>.radius\\n  <span class=\\"hljs-keyword\\">let</span> ranA=<span class=\\"hljs-built_in\\">Math</span>.random()*<span class=\\"hljs-number\\">360</span>\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-keyword\\">this</span>.calcRand(ranR,ranA)\\n};\\n\\n<span class=\\"hljs-comment\\">/** \\n * Your Solution object will be instantiated and called as such:\\n * var obj = new Solution(radius, x_center, y_center)\\n * var param_1 = obj.randPoint()\\n */</span>\\n</code></pre>\\n"],"querySlug":"generate-random-point-in-a-circle","created_at":"2019-04-03","timeArr":[2019,3,3,13,24,29,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>2种解法</p>\\n<ul>\\n<li>\\n<p>解法1</p>\\n<p>对半径<code>radius</code>随机取一点，注意必须使用<code>Math.sqrt(Math.random())*raidus</code>，因为圆的面积计算公式是<code>PI*r^2</code>，\\n与<code>raduis</code>的平方成正比。</p>\\n<p>然后对<code>360</code>度随机选一个角度，可以假设这个角度就是要<strong>输出的点与圆心连成的线</strong>与<strong>纵轴</strong>的夹角，\\n因此可以通过<code>sin</code>和<code>cos</code>求出输出的点<code>[x,y]</code>。</p>\\n</li>\\n<li>\\n<p>解法2</p>\\n<p>把圆当做正方形，正方形的边长就是<code>radius*2</code>，求这个正方形内的随机点<code>[rdx,rdy]</code></p>\\n<p>检查<code>rdx</code>和<code>rdy</code>，如果<code>rdx^2+rdy^2&gt;radius^2</code>，则继续递归执行，否则返回<code>[rdx,rdy]</code>。</p>\\n</li>\\n</ul>\\n","content":"<p>给定圆的半径和圆心的 x、y 坐标，写一个在圆中产生均匀随机点的函数&nbsp;<code>randPoint</code>&nbsp;。</p>\\n\\n<p>说明:</p>\\n\\n<ol>\\n\\t<li>输入值和输出值都将是<a href=\\"https://baike.baidu.com/item/%E6%B5%AE%E7%82%B9%E6%95%B0/6162520\\">浮点数</a>。</li>\\n\\t<li>圆的半径和圆心的 x、y 坐标将作为参数传递给类的构造函数。</li>\\n\\t<li>圆周上的点也认为是在圆中。</li>\\n\\t<li><code>randPoint</code>&nbsp;返回一个包含随机点的x坐标和y坐标的大小为2的数组。</li>\\n</ol>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入: \\n</strong>[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\\n[[1,0,0],[],[],[]]\\n<strong>输出: </strong>[null,[-0.72939,-0.65505],[-0.78502,-0.28626],[-0.83119,-0.19803]]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入: \\n</strong>[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\\n[[10,5,-7.5],[],[],[]]\\n<strong>输出: </strong>[null,[11.52438,-8.33273],[2.46992,-16.21705],[11.13430,-12.42337]]</pre>\\n\\n<p><strong>输入语法说明：</strong></p>\\n\\n<p>输入是两个列表：调用成员函数名和调用的参数。<code>Solution</code>&nbsp;的构造函数有三个参数，圆的半径、圆心的 x 坐标、圆心的 y 坐标。<code>randPoint</code>&nbsp;没有参数。输入参数是一个列表，即使参数为空，也会输入一个 [] 空列表。</p>\\n","title":"478. 在圆内随机生成点","relatedTags":["几何","数学","拒绝采样","随机化"],"difficult":"Middle","lang":["javascript"],"uniqueID":"478","slug":"478-Generate-Random-Point-in-a-Circle"}')}}]);