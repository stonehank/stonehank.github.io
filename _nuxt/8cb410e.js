(window.webpackJsonp=window.webpackJsonp||[]).push([[329],{1127:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">transactions</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> invalidTransactions = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">transactions</span>) </span>{\\n  transactions=transactions.map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">str</span>=&gt;</span>str.split(<span class=\\"hljs-string\\">\',\'</span>))\\n  transactions.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>+a[<span class=\\"hljs-number\\">1</span>]- +b[<span class=\\"hljs-number\\">1</span>])\\n  <span class=\\"hljs-keyword\\">let</span> used=<span class=\\"hljs-built_in\\">Array</span>(transactions.length).fill(<span class=\\"hljs-literal\\">false</span>)\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;transactions.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> [name,time,amount,city]=transactions[i]\\n    <span class=\\"hljs-keyword\\">if</span>(hash[name]!=<span class=\\"hljs-literal\\">null</span>){\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;hash[name].length;j++){\\n        <span class=\\"hljs-keyword\\">let</span> id=hash[name][j]\\n         <span class=\\"hljs-keyword\\">if</span>(time-transactions[id][<span class=\\"hljs-number\\">1</span>]&lt;=<span class=\\"hljs-number\\">60</span> &amp;&amp; transactions[id][<span class=\\"hljs-number\\">3</span>]!==city){\\n          used[id]=<span class=\\"hljs-literal\\">true</span>\\n          used[i]=<span class=\\"hljs-literal\\">true</span>\\n        }\\n      }\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      hash[name]=[]\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(amount&gt;<span class=\\"hljs-number\\">1000</span>){\\n        used[i]=<span class=\\"hljs-literal\\">true</span> \\n    }\\n    hash[name].push(i)\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;used.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(used[i])res.push(transactions[i].join(<span class=\\"hljs-string\\">\',\'</span>))\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"invalid-transactions","created_at":"2019-08-25","timeArr":[2019,7,25,10,58,15,0],"hasThinking":false,"content":"<p>如果出现下述两种情况，交易 <strong>可能无效</strong>：</p>\\n\\n<ul>\\n\\t<li>交易金额超过 &yen;1000</li>\\n\\t<li>或者，它和另一个城市中同名的另一笔交易相隔不超过 60 分钟（包含 60 分钟整）</li>\\n</ul>\\n\\n<p>每个交易字符串&nbsp;<code>transactions[i]</code>&nbsp;由一些用逗号分隔的值组成，这些值分别表示交易的名称，时间（以分钟计），金额以及城市。</p>\\n\\n<p>给你一份交易清单&nbsp;<code>transactions</code>，返回可能无效的交易列表。你可以按任何顺序返回答案。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\\n<strong>输出：</strong>[&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\\n<strong>解释：</strong>第一笔交易是无效的，因为第二笔交易和它间隔不超过 60 分钟、名称相同且发生在不同的城市。同样，第二笔交易也是无效的。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,1200,mtv&quot;]\\n<strong>输出：</strong>[&quot;alice,50,1200,mtv&quot;]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>transactions = [&quot;alice,20,800,mtv&quot;,&quot;bob,50,1200,mtv&quot;]\\n<strong>输出：</strong>[&quot;bob,50,1200,mtv&quot;]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>transactions.length &lt;= 1000</code></li>\\n\\t<li>每笔交易&nbsp;<code>transactions[i]</code>&nbsp;按&nbsp;<code>&quot;{name},{time},{amount},{city}&quot;</code>&nbsp;的格式进行记录</li>\\n\\t<li>每个交易名称&nbsp;<code>{name}</code>&nbsp;和城市&nbsp;<code>{city}</code>&nbsp;都由小写英文字母组成，长度在&nbsp;<code>1</code>&nbsp;到&nbsp;<code>10</code>&nbsp;之间</li>\\n\\t<li>每个交易时间&nbsp;<code>{time}</code>&nbsp;由一些数字组成，表示一个&nbsp;<code>0</code>&nbsp;到&nbsp;<code>1000</code>&nbsp;之间的整数</li>\\n\\t<li>每笔交易金额&nbsp;<code>{amount}</code>&nbsp;由一些数字组成，表示一个&nbsp;<code>0</code> 到&nbsp;<code>2000</code>&nbsp;之间的整数</li>\\n</ul>\\n","title":"1169. 查询无效交易","relatedTags":["数组","哈希表","字符串","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1169","slug":"1169-Invalid-Transactions"}')}}]);