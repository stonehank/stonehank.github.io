(window.webpackJsonp=window.webpackJsonp||[]).push([[556],{1354:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">rounds</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> mostVisited = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n, rounds</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-built_in\\">Array</span>(n).fill(<span class=\\"hljs-number\\">0</span>)\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;rounds.length;i++){\\n        <span class=\\"hljs-keyword\\">let</span> start=rounds[i<span class=\\"hljs-number\\">-1</span>]<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">let</span> end=rounds[i]<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=start;j!==end;j++){\\n            <span class=\\"hljs-keyword\\">if</span>(j&gt;end){\\n                j=(j+n) % n   \\n            }\\n            <span class=\\"hljs-keyword\\">if</span>(j===end)<span class=\\"hljs-keyword\\">break</span>\\n            count[j]++\\n        }\\n    }\\n    count[rounds[rounds.length<span class=\\"hljs-number\\">-1</span>]<span class=\\"hljs-number\\">-1</span>]++\\n    <span class=\\"hljs-keyword\\">let</span> max=<span class=\\"hljs-built_in\\">Math</span>.max.apply(<span class=\\"hljs-built_in\\">Math</span>,count)\\n    <span class=\\"hljs-keyword\\">let</span> res=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;count.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(count[i]===max){\\n            res.push(i+<span class=\\"hljs-number\\">1</span>)\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"most-visited-sector-in-a-circular-track","created_at":"2020-08-23","timeArr":[2020,7,23,17,16,43,0],"hasThinking":false,"content":"<p>给你一个整数 <code>n</code> 和一个整数数组 <code>rounds</code> 。有一条圆形赛道由 <code>n</code> 个扇区组成，扇区编号从 <code>1</code> 到 <code>n</code> 。现将在这条赛道上举办一场马拉松比赛，该马拉松全程由 <code>m</code> 个阶段组成。其中，第 <code>i</code> 个阶段将会从扇区 <code>rounds[i - 1]</code> 开始，到扇区 <code>rounds[i]</code> 结束。举例来说，第 <code>1</code> 阶段从&nbsp;<code>rounds[0]</code>&nbsp;开始，到&nbsp;<code>rounds[1]</code>&nbsp;结束。</p>\\n\\n<p>请你以数组形式返回经过次数最多的那几个扇区，按扇区编号 <strong>升序</strong> 排列。</p>\\n\\n<p>注意，赛道按扇区编号升序逆时针形成一个圆（请参见第一个示例）。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/08/22/3rd45e.jpg\\" style=\\"height: 341px; width: 433px;\\"></p>\\n\\n<pre><strong>输入：</strong>n = 4, rounds = [1,3,1,2]\\n<strong>输出：</strong>[1,2]\\n<strong>解释：</strong>本场马拉松比赛从扇区 1 开始。经过各个扇区的次序如下所示：\\n1 --&gt; 2 --&gt; 3（阶段 1 结束）--&gt; 4 --&gt; 1（阶段 2 结束）--&gt; 2（阶段 3 结束，即本场马拉松结束）\\n其中，扇区 1 和 2 都经过了两次，它们是经过次数最多的两个扇区。扇区 3 和 4 都只经过了一次。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 2, rounds = [2,1,2,1,2,1,2,1,2]\\n<strong>输出：</strong>[2]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 7, rounds = [1,3,5,7]\\n<strong>输出：</strong>[1,2,3,4,5,6,7]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 &lt;= n &lt;= 100</code></li>\\n\\t<li><code>1 &lt;= m &lt;= 100</code></li>\\n\\t<li><code>rounds.length == m + 1</code></li>\\n\\t<li><code>1 &lt;= rounds[i] &lt;= n</code></li>\\n\\t<li><code>rounds[i] != rounds[i + 1]</code> ，其中 <code>0 &lt;= i &lt; m</code></li>\\n</ul>\\n","title":"1560. 圆形赛道上经过次数最多的扇区","relatedTags":["数组","模拟"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1560","slug":"1560-Most-Visited-Sector-in-a-Circular-Track"}')}}]);