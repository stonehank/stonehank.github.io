(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{626:function(n){n.exports=JSON.parse('{"content":"<p>使用4种方式：props传递，父组件公用，hoc，render-prop</p>\\n<p>定义需求，cur符合auth才能查看组件内容，否则进入NotAccess</p>\\n<pre><code><pre class=\\"hljs\\"><code>const cur = &quot;a&quot;;\\nconst auth = {\\n  com1: [&quot;a&quot;, &quot;b&quot;],\\n  com2: [&quot;b&quot;, &quot;c&quot;],\\n  com3: [&quot;c&quot;, &quot;d&quot;]\\n};\\nconst NotAccess = () =&gt; &lt;div&gt;Not Access&lt;/div&gt;;</code></pre></code></pre><h2 id=\\"props-chuan-di\\">props传递</h2>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">const</span> Component1 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">props</span> =&gt;</span> {\\n  <span class=\\"hljs-keyword\\">const</span> { comId } = props;\\n  <span class=\\"hljs-keyword\\">const</span> isValid = auth[comId].includes(cur);\\n  <span class=\\"hljs-keyword\\">return</span> isValid ? &lt;div&gt;Component1&lt;/div&gt; : &lt;NotAccess /&gt;;\\n};\\n<span class=\\"hljs-keyword\\">const</span> Component2 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">props</span> =&gt;</span> {\\n  <span class=\\"hljs-keyword\\">const</span> { comId } = props;\\n  <span class=\\"hljs-keyword\\">const</span> isValid = auth[comId].includes(cur);\\n  <span class=\\"hljs-keyword\\">return</span> isValid ? &lt;div&gt;Component2&lt;/div&gt; : &lt;NotAccess /&gt;;\\n};\\n<span class=\\"hljs-keyword\\">const</span> Component3 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">props</span> =&gt;</span> {\\n  <span class=\\"hljs-keyword\\">const</span> { comId } = props;\\n  <span class=\\"hljs-keyword\\">const</span> isValid = auth[comId].includes(cur);\\n  <span class=\\"hljs-keyword\\">return</span> isValid ? &lt;div&gt;Component3&lt;/div&gt; : &lt;NotAccess /&gt;;\\n};\\n\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">App</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n  render() {\\n    <span class=\\"hljs-keyword\\">return</span> (\\n      &lt;div&gt;\\n        &lt;Component1 comId={\\"com1\\"} /&gt;\\n        &lt;Component2 comId={\\"com2\\"} /&gt;\\n        &lt;Component3 comId={\\"com3\\"} /&gt;\\n      &lt;/div&gt;\\n    );\\n  }\\n}</code></pre></code></pre>\\n<p><a href=\\"https://codesandbox.io/s/04nxrzzm1v\\">在线例子</a></p>\\n<h2 id=\\"zu-jian-fu-yong-children\\">组件复用+Children</h2>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">const</span> Component1 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component1&lt;/div&gt;;\\n<span class=\\"hljs-keyword\\">const</span> Component2 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component2&lt;/div&gt;;\\n<span class=\\"hljs-keyword\\">const</span> Component3 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component3&lt;/div&gt;;\\n\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">AuthComponent</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n  render() {\\n    <span class=\\"hljs-keyword\\">const</span> { comId } = <span class=\\"hljs-keyword\\">this</span>.props;\\n    <span class=\\"hljs-keyword\\">const</span> isValid = auth[comId].includes(cur);\\n    <span class=\\"hljs-keyword\\">return</span> isValid ? <span class=\\"hljs-keyword\\">this</span>.props.children : &lt;NotAccess /&gt;;\\n  }\\n}\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">App</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n  render() {\\n    <span class=\\"hljs-keyword\\">return</span> (\\n      &lt;div&gt;\\n        &lt;AuthComponent comId={\\"com1\\"}&gt;\\n          &lt;Component1 /&gt;\\n        &lt;/AuthComponent&gt;\\n        &lt;AuthComponent comId={\\"com2\\"}&gt;\\n          &lt;Component2 /&gt;\\n        &lt;/AuthComponent&gt;\\n        &lt;AuthComponent comId={\\"com3\\"}&gt;\\n          &lt;Component3 /&gt;\\n        &lt;/AuthComponent&gt;\\n      &lt;/div&gt;\\n    );\\n  }\\n}</code></pre></code></pre>\\n<p><a href=\\"https://codesandbox.io/s/zvo23629m\\">在线例子</a></p>\\n<h2 id=\\"gao-jie-zu-jian--hoc\\">高阶组件 HOC</h2>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">const</span> Component1 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component1&lt;/div&gt;;\\n<span class=\\"hljs-keyword\\">const</span> Component2 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component2&lt;/div&gt;;\\n<span class=\\"hljs-keyword\\">const</span> Component3 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component3&lt;/div&gt;;\\n\\n<span class=\\"hljs-keyword\\">const</span> Auth = <span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">Component, comId</span>) =&gt;</span> {\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n    render() {\\n      <span class=\\"hljs-keyword\\">const</span> isValid = auth[comId].includes(cur);\\n      <span class=\\"hljs-keyword\\">return</span> isValid ? &lt;Component /&gt; : &lt;NotAccess /&gt;;\\n    }\\n  };\\n};\\n\\n<span class=\\"hljs-keyword\\">let</span> AuthCom1 = Auth(Component1, <span class=\\"hljs-string\\">\\"com1\\"</span>);\\n<span class=\\"hljs-keyword\\">let</span> AuthCom2 = Auth(Component2, <span class=\\"hljs-string\\">\\"com2\\"</span>);\\n<span class=\\"hljs-keyword\\">let</span> AuthCom3 = Auth(Component3, <span class=\\"hljs-string\\">\\"com3\\"</span>);\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">App</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n  render() {\\n    <span class=\\"hljs-keyword\\">return</span> (\\n      &lt;div&gt;\\n        &lt;AuthCom1 /&gt;\\n        &lt;AuthCom2 /&gt;\\n        &lt;AuthCom3 /&gt;\\n      &lt;/div&gt;\\n    );\\n  }\\n}</code></pre></code></pre>\\n<p><a href=\\"https://codesandbox.io/s/9oz40znmvy\\">在线例子</a></p>\\n<h2 id=\\"render-prop\\">render-prop</h2>\\n<p>App组件可以轻松的获取任何子组件里的参数</p>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">const</span> Component1 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component1&lt;/div&gt;;\\n<span class=\\"hljs-keyword\\">const</span> Component2 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component2&lt;/div&gt;;\\n<span class=\\"hljs-keyword\\">const</span> Component3 = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> &lt;div&gt;Component3&lt;/div&gt;;\\n\\n<span class=\\"hljs-keyword\\">const</span> AuthCom = <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">props</span> =&gt;</span> {\\n  <span class=\\"hljs-keyword\\">const</span> validEles = React.Children.map(props.children, e =&gt; {\\n    <span class=\\"hljs-keyword\\">const</span> { comId } = e.props;\\n    <span class=\\"hljs-keyword\\">return</span> auth[comId].includes(cur) ? e : &lt;NotAccess /&gt;;\\n  });\\n  <span class=\\"hljs-keyword\\">return</span> props.render(validEles);\\n};\\n\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">App</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n  render() {\\n    <span class=\\"hljs-keyword\\">return</span> (\\n      &lt;AuthCom\\n        render={validEles =&gt; {\\n          return validEles.map(e =&gt; e);\\n        }}\\n      &gt;\\n        &lt;Component1 comId=\\"com1\\" /&gt;\\n        &lt;Component2 comId=\\"com2\\" /&gt;\\n        &lt;Component3 comId=\\"com3\\" /&gt;\\n      &lt;/AuthCom&gt;\\n    );\\n  }\\n}</code></pre></code></pre>\\n<p><a href=\\"https://codesandbox.io/s/l27ljm781q\\">在线例子</a></p>\\n","toc":[{"anchor":"props-chuan-di","level":2,"text":"props传递"},{"anchor":"zu-jian-fu-yong-children","level":2,"text":"组件复用+Children"},{"anchor":"gao-jie-zu-jian--hoc","level":2,"text":"高阶组件 HOC"},{"anchor":"render-prop","level":2,"text":"render-prop"}],"relatedTags":null,"created_at":"2018-08-04","timeArr":[2018,7,4,0,0,0,0],"title":"react的编写模式","uuid":"6fd675137d4fc7c9017a5d49e6617b15a17ace30","summary":"<p>使用4种方式：props传递，父组件公用，hoc，render-prop</p>\\n<p>定义需求，cur符合auth才能查看组件内容，否则进入NotAccess</p>\\n<pre class=\\"hljs\\"><code>const cur = &quot;a&quot;;\\nconst auth = {\\n  com1: [&quot;a&quot;, &quot;b&quot;],\\n  com2: [&quot;b&quot;, &quot;c&quot;],\\n  com3: [...</code></pre>","slug":"react-de-bian-xie-mo-shi","sha":"ac63fa5d204d619196b3d6c6134d623fb670d2f1"}')}}]);