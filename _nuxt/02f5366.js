(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{661:function(n){n.exports=JSON.parse('{"content":"<p>一些JS基础(2)</p>\\n<h4 id=\\"object-dui-xiang-de-key\\">Object对象的key</h4>\\n<p>一般来说，obj的key属性会自动转换成字符串（调用默认toString方法），然后再读取</p>\\n<p>例如：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> myObject = { };\\nmyObject[<span class=\\"hljs-literal\\">true</span>] = <span class=\\"hljs-string\\">\\"foo\\"</span>;\\nmyObject[<span class=\\"hljs-number\\">3</span>] = <span class=\\"hljs-string\\">\\"bar\\"</span>;\\n\\nmyObject[<span class=\\"hljs-string\\">\\"true\\"</span>]; <span class=\\"hljs-comment\\">// \\"foo\\"</span>\\nmyObject[<span class=\\"hljs-string\\">\\"3\\"</span>]; <span class=\\"hljs-comment\\">// \\"bar\\"</span></code></pre></code></pre>\\n<p>对于object也是如此：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> myObject = { };\\n<span class=\\"hljs-keyword\\">var</span> a={<span class=\\"hljs-attr\\">x</span>:<span class=\\"hljs-number\\">1</span>};\\n<span class=\\"hljs-keyword\\">var</span> b={<span class=\\"hljs-attr\\">x</span>:<span class=\\"hljs-number\\">2</span>}\\n\\nmyObject[a]=<span class=\\"hljs-number\\">1</span>;\\nmyObject[b]=<span class=\\"hljs-number\\">2</span>;\\n\\nmyObject[<span class=\\"hljs-string\\">\\"[object Object]\\"</span>]; <span class=\\"hljs-comment\\">// 2</span>\\nmyObject; <span class=\\"hljs-comment\\">// {[object Object]: 2}</span></code></pre></code></pre>\\n<p>但如果使用Symbol，则会破坏这个规则，只有唯一值：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> myObject = { };\\n<span class=\\"hljs-keyword\\">var</span> a={<span class=\\"hljs-attr\\">x</span>:<span class=\\"hljs-number\\">1</span>};\\n<span class=\\"hljs-keyword\\">var</span> b={<span class=\\"hljs-attr\\">x</span>:<span class=\\"hljs-number\\">2</span>};\\n\\na=<span class=\\"hljs-built_in\\">Symbol</span>(a);\\nb=<span class=\\"hljs-built_in\\">Symbol</span>(b);\\n\\nmyObject[a]=<span class=\\"hljs-number\\">1</span>;\\nmyObject[b]=<span class=\\"hljs-number\\">2</span>;\\n\\nmyObject[<span class=\\"hljs-string\\">\\"Symbol([object Object])\\"</span>]; <span class=\\"hljs-comment\\">// undefined</span>\\nmyObject; <span class=\\"hljs-comment\\">// {Symbol([object Object]): 1, Symbol([object Object]): 2}</span>\\nmyObject[a]; <span class=\\"hljs-comment\\">// 1</span>\\nmyObject[b]; <span class=\\"hljs-comment\\">// 2</span></code></pre></code></pre>\\n<h4 id=\\"yi-xie-xian-zhi-dui-xiang-de-fang-fa\\">一些限制对象的方法</h4>\\n<ul>\\n<li>限制扩展 <code>Object.preventExtensions</code></li>\\n</ul>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> myObject = {\\n  <span class=\\"hljs-attr\\">a</span>:<span class=\\"hljs-number\\">2</span>\\n};\\n<span class=\\"hljs-built_in\\">Object</span>.preventExtensions( myObject );\\nmyObject.b = <span class=\\"hljs-number\\">3</span>;\\nmyObject.b; <span class=\\"hljs-comment\\">// undefined</span></code></pre></code></pre>\\n<ul>\\n<li><p>密封（限制扩展的基础上，添加<code>configurable:false</code>)</p>\\n</li>\\n<li><p>冻结（密封的基础上，添加<code>wirtable:false</code>）</p>\\n<p>  note:对象内部为引用，即使对象冻结，引用变化，也会变化：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> obj={}\\n<span class=\\"hljs-keyword\\">var</span> a=[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">2</span>]\\nobj.x=a;\\n<span class=\\"hljs-built_in\\">Object</span>.freeze(obj);\\n</code></pre></code></pre>\\n</li>\\n</ul>\\n<p>a.push(3)\\nobj.x; // [1,2,3]</p>\\n<p>```</p>\\n<ul>\\n<li>完全冻结（冻结的基础行，遍历内部引用对象也进行冻结）</li>\\n</ul>\\n","toc":[{"anchor":"object-dui-xiang-de-key","level":4,"text":"Object对象的key"},{"anchor":"yi-xie-xian-zhi-dui-xiang-de-fang-fa","level":4,"text":"一些限制对象的方法"}],"relatedTags":null,"created_at":"2018-06-24","timeArr":[2018,5,24,0,0,0,0],"title":"一些被忽略的js知识2","uuid":"cfe39dfd0c96a8f6a8263f7275c5d9f94c1a0480","summary":"<p>一些JS基础(2)</p>\\n<h4>Object对象的key</h4>\\n<p>一般来说，obj的key属性会自动转换成字符串（调用默认toString方法），然后再读取</p>\\n<p>例如：</p>\\n<pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> myObject = { };\\nmyObject[<span class=\\"hljs-literal\\">true</span>] = <span class=\\"hljs-string\\">\\"foo\\"</span>;\\nmyObject[<span class=\\"hljs-number\\">3</span>] = <span class=\\"hljs-string\\">\\"bar\\"</span>;\\n\\nmyObjec...</code></pre>","slug":"yi-xie-bei-hu-lve-de-js-zhi-shi-2","sha":"d923bf5ea77aeead80931e8ae800e2382bec4caf"}')}}]);