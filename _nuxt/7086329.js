(window.webpackJsonp=window.webpackJsonp||[]).push([[331],{1129:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">queries</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">words</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numSmallerByFrequency = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">queries, words</span>) </span>{\\n  \\n  <span class=\\"hljs-keyword\\">let</span> wordF=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> word <span class=\\"hljs-keyword\\">of</span> words){\\n    wordF.push(f(word))\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(wordF)</span>\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;queries.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> curF=f(queries[i])\\n    <span class=\\"hljs-comment\\">// console.log(i,curF)</span>\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;wordF.length;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(curF&lt;wordF[j])count++\\n    }\\n    res.push(count)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">f</span>(<span class=\\"hljs-params\\">s</span>)</span>{\\n    s=s.split(<span class=\\"hljs-string\\">\'\'</span>).sort().join(<span class=\\"hljs-string\\">\'\'</span>)\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;s.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(s[i]!==s[i<span class=\\"hljs-number\\">-1</span>])<span class=\\"hljs-keyword\\">return</span> count\\n      count++\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> count\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"compare-strings-by-frequency-of-the-smallest-character","created_at":"2019-08-25","timeArr":[2019,7,25,11,4,31,0],"hasThinking":false,"content":"<p>定义一个函数 <code>f(s)</code>，统计 <code>s</code>  中<strong>（按字典序比较）最小字母的出现频次</strong> ，其中 <code>s</code> 是一个非空字符串。</p>\\n\\n<p>例如，若 <code>s = \\"dcce\\"</code>，那么 <code>f(s) = 2</code>，因为字典序最小字母是 <code>\\"c\\"</code>，它出现了 2 次。</p>\\n\\n<p>现在，给你两个字符串数组待查表 <code>queries</code> 和词汇表 <code>words</code> 。对于每次查询 <code>queries[i]</code> ，需统计 <code>words</code> 中满足 <code>f(queries[i])</code> < <code>f(W)</code> 的<strong> 词的数目</strong> ，<code>W</code> 表示词汇表 <code>words</code> 中的每个词。</p>\\n\\n<p>请你返回一个整数数组 <code>answer</code> 作为答案，其中每个 <code>answer[i]</code> 是第 <code>i</code> 次查询的结果。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>queries = [\\"cbd\\"], words = [\\"zaaaz\\"]\\n<strong>输出：</strong>[1]\\n<strong>解释：</strong>查询 f(\\"cbd\\") = 1，而 f(\\"zaaaz\\") = 3 所以 f(\\"cbd\\") < f(\\"zaaaz\\")。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>queries = [\\"bbb\\",\\"cc\\"], words = [\\"a\\",\\"aa\\",\\"aaa\\",\\"aaaa\\"]\\n<strong>输出：</strong>[1,2]\\n<strong>解释：</strong>第一个查询 f(\\"bbb\\") < f(\\"aaaa\\")，第二个查询 f(\\"aaa\\") 和 f(\\"aaaa\\") 都 > f(\\"cc\\")。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= queries.length <= 2000</code></li>\\n\\t<li><code>1 <= words.length <= 2000</code></li>\\n\\t<li><code>1 <= queries[i].length, words[i].length <= 10</code></li>\\n\\t<li><code>queries[i][j]</code>、<code>words[i][j]</code> 都由小写英文字母组成</li>\\n</ul>\\n","title":"1170. 比较字符串最小字母出现频次","relatedTags":["数组","哈希表","字符串","二分查找","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1170","slug":"1170-Compare-Strings-by-Frequency-of-the-Smallest-Character"}')}}]);