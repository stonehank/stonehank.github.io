(window.webpackJsonp=window.webpackJsonp||[]).push([[504],{1302:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">k</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxVowels = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s, k</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> f=<span class=\\"hljs-number\\">0</span>,e=k\\n  <span class=\\"hljs-keyword\\">let</span> curVow=<span class=\\"hljs-number\\">0</span>\\n\\n  <span class=\\"hljs-keyword\\">let</span> vow={<span class=\\"hljs-attr\\">a</span>:<span class=\\"hljs-literal\\">true</span>,<span class=\\"hljs-attr\\">e</span>:<span class=\\"hljs-literal\\">true</span>,<span class=\\"hljs-attr\\">i</span>:<span class=\\"hljs-literal\\">true</span>,<span class=\\"hljs-attr\\">o</span>:<span class=\\"hljs-literal\\">true</span>,<span class=\\"hljs-attr\\">u</span>:<span class=\\"hljs-literal\\">true</span>}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=f;i&lt;e;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(vow[s[i]]){\\n      curVow++\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> maxVow=curVow\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=e;i&lt;s.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> h=i-k\\n    <span class=\\"hljs-keyword\\">if</span>(vow[s[h]]){\\n      curVow--\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(vow[s[i]]){\\n      curVow++\\n    }\\n    maxVow=<span class=\\"hljs-built_in\\">Math</span>.max(maxVow,curVow)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> maxVow\\n};\\n</code></pre>\\n"],"querySlug":"maximum-number-of-vowels-in-a-substring-of-given-length","created_at":"2020-05-24","timeArr":[2020,4,24,10,38,14,0],"hasThinking":false,"content":"<p>给你字符串 <code>s</code> 和整数 <code>k</code> 。</p>\\n\\n<p>请返回字符串 <code>s</code> 中长度为 <code>k</code> 的单个子字符串中可能包含的最大元音字母数。</p>\\n\\n<p>英文中的 <strong>元音字母 </strong>为（<code>a</code>, <code>e</code>, <code>i</code>, <code>o</code>, <code>u</code>）。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;abciiidef&quot;, k = 3\\n<strong>输出：</strong>3\\n<strong>解释：</strong>子字符串 &quot;iii&quot; 包含 3 个元音字母。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;aeiou&quot;, k = 2\\n<strong>输出：</strong>2\\n<strong>解释：</strong>任意长度为 2 的子字符串都包含 2 个元音字母。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;leetcode&quot;, k = 3\\n<strong>输出：</strong>2\\n<strong>解释：</strong>&quot;lee&quot;、&quot;eet&quot; 和 &quot;ode&quot; 都包含 2 个元音字母。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;rhythms&quot;, k = 4\\n<strong>输出：</strong>0\\n<strong>解释：</strong>字符串 s 中不含任何元音字母。\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;tryhard&quot;, k = 4\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\\n\\t<li><code>s</code> 由小写英文字母组成</li>\\n\\t<li><code>1 &lt;= k &lt;= s.length</code></li>\\n</ul>\\n","title":"1456. 定长子串中元音的最大数目","relatedTags":["字符串","滑动窗口"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1456","slug":"1456-Maximum-Number-of-Vowels-in-a-Substring-of-Given-Length"}')}}]);