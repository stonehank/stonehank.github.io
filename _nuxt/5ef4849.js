(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{665:function(e){e.exports=JSON.parse('{"content":"<blockquote>\\n<p>./creat-react-app/createReactApp.js</p>\\n</blockquote>\\n<h5 id=\\"oseol\\">os.EOL</h5>\\n<pre><code><pre class=\\"hljs\\"><code>不同系统的行尾符号\\n\\n&gt; A string constant defining the operating system-specific end-of-line marker:\\n\\n`\\\\n` on POSIX\\n\\n`\\\\r\\\\n` on Windows</code></pre></code></pre><h5 id=\\"processcwd\\">process.cwd()</h5>\\n<pre><code><pre class=\\"hljs\\"><code>返回当前node进程的目录\\n\\n&gt; The process.cwd() method returns the current working directory of the Node.js process.</code></pre></code></pre><h5 id=\\"child_processspawn\\">child_process.spawn</h5>\\n<pre><code><pre class=\\"hljs\\"><code>使用给定的 command 和 args 中的命令行参数来衍生一个新进程\\n\\n例如：\\n```js\\nconst {spawn}=require(\'child_process\');\\nconst a=spawn(\'npm.cmd\',[\'config\',\'list\'])\\na.stdout.on(\'data\', (data) =&gt; {\\n  console.log(`stdout: ${data}`);\\n});\\n```\\n\\n注意，windows下要使用npm.cmd，否则会查找不到npm, \\nhttps://github.com/nodejs/node/issues/3675\\n\\n或者使用`cross-spawn`</code></pre></code></pre><h5 id=\\"semver\\">semver</h5>\\n<pre><code><pre class=\\"hljs\\"><code>进行版本号对比，官网例子备忘\\n```js\\nsemver.valid(\'1.2.3\') // \'1.2.3\'\\nsemver.valid(\'a.b.c\') // null\\nsemver.clean(\'  =v1.2.3   \') // \'1.2.3\'\\nsemver.satisfies(\'1.2.3\', \'1.x || &gt;=2.5.0 || 5.0.0 - 7.2.3\') // true\\nsemver.gt(\'1.2.3\', \'9.8.7\') // false\\nsemver.lt(\'1.2.3\', \'9.8.7\') // true\\nsemver.valid(semver.coerce(\'v2\')) // \'2.0.0\'\\nsemver.valid(semver.coerce(\'42.6.7.9.3-alpha\')) // \'42.6.7\'\\n```</code></pre></code></pre><h5 id=\\"pathdelimiter\\">path.delimiter</h5>\\n<pre><code><pre class=\\"hljs\\"><code>对不同平台的路径进行分割成数组\\n\\nWindows 上是 ;(分号)\\n\\nPOSIX 上是 :(冒号)</code></pre></code></pre><h5 id=\\"yi-ge-boolean-de-shi-yong-fang-fa\\">一个Boolean的使用方法</h5>\\n<pre><code><pre class=\\"hljs\\"><code>`process.env.NODE_PATH.split(path.delimiter).filter(Boolean)`\\n\\n这里的意思是先对`NODE_PATH`进行分割，再过滤出存在的值</code></pre></code></pre>","toc":[{"anchor":"oseol","level":5,"text":"os.EOL"},{"anchor":"processcwd","level":5,"text":"process.cwd()"},{"anchor":"child_processspawn","level":5,"text":"child_process.spawn"},{"anchor":"semver","level":5,"text":"semver"},{"anchor":"pathdelimiter","level":5,"text":"path.delimiter"},{"anchor":"yi-ge-boolean-de-shi-yong-fang-fa","level":5,"text":"一个Boolean的使用方法"}],"relatedTags":null,"created_at":"2018-07-28","timeArr":[2018,6,28,0,0,0,0],"title":"源码阅读-create-react-app一些收获(笔记备忘)","uuid":"f433b9ed4007a7781ed42e23c229928ae08ba1d8","summary":"<blockquote>\\n<p>./creat-react-app/createReactApp.js</p>\\n</blockquote>\\n<h5>os.EOL</h5>\\n<pre><code>不同系统的行尾符号\\n\\n&gt; A string constant defining the operating system-specific end-of-line marker:\\n</code></pre>\\n<p>...</p>","slug":"yuan-ma-yue-du-create-react-app-yi-xie-shou-huo-(-bi-ji-bei-wang-)","sha":"fa60cceb50a93e0f44d825b1043da061721c78f2"}')}}]);