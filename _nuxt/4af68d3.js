(window.webpackJsonp=window.webpackJsonp||[]).push([[1043],{1841:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> validPalindrome = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length/<span class=\\"hljs-number\\">2</span>;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(s[i]!==s[s.length-i<span class=\\"hljs-number\\">-1</span>]){\\n      <span class=\\"hljs-keyword\\">return</span> isP(s.substring(<span class=\\"hljs-number\\">0</span>,i)+s.substring(i+<span class=\\"hljs-number\\">1</span>)) ||\\n             isP(s.substring(<span class=\\"hljs-number\\">0</span>,s.length-i<span class=\\"hljs-number\\">-1</span>)+s.substring(s.length-i))\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">isP</span>(<span class=\\"hljs-params\\">str</span>)</span>{\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;str.length/<span class=\\"hljs-number\\">2</span>;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(str[i]!==str[str.length<span class=\\"hljs-number\\">-1</span>-i])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"valid-palindrome-ii","created_at":"2019-03-26","timeArr":[2019,2,26,15,6,3,0],"hasThinking":false,"content":"<p>给定一个非空字符串 <code>s</code>，<strong>最多</strong>删除一个字符。判断是否能成为回文字符串。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> s = \\"aba\\"\\n<strong>输出:</strong> true\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> s = \\"abca\\"\\n<strong>输出:</strong> true\\n<strong>解释:</strong> 你可以删除c字符。\\n</pre>\\n\\n<p><strong>示例 3:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> s = \\"abc\\"\\n<strong>输出:</strong> false</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示:</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= s.length <= 10<sup>5</sup></code></li>\\n\\t<li><code>s</code> 由小写英文字母组成</li>\\n</ul>\\n","title":"680. 验证回文字符串 Ⅱ","relatedTags":["贪心","双指针","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"680","slug":"680-Valid-Palindrome-II"}')}}]);