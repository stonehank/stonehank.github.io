(window.webpackJsonp=window.webpackJsonp||[]).push([[581],{1379:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">findPeakElement</span><span class=\\"hljs-params\\">(self, nums)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        lo=<span class=\\"hljs-number\\">0</span>\\n        hi=len(nums)<span class=\\"hljs-number\\">-1</span>\\n        ninf=float(<span class=\\"hljs-string\\">\'-inf\'</span>)\\n        <span class=\\"hljs-keyword\\">while</span> lo&lt;=hi:\\n            mid=(lo+hi) // <span class=\\"hljs-number\\">2</span>\\n            <span class=\\"hljs-comment\\"># print mid</span>\\n            <span class=\\"hljs-keyword\\">if</span> mid&gt;=<span class=\\"hljs-number\\">1</span>:pre=nums[mid<span class=\\"hljs-number\\">-1</span>]\\n            <span class=\\"hljs-keyword\\">else</span>:pre=ninf\\n            <span class=\\"hljs-keyword\\">if</span> mid&lt;len(nums)<span class=\\"hljs-number\\">-1</span>:post=nums[mid+<span class=\\"hljs-number\\">1</span>]\\n            <span class=\\"hljs-keyword\\">else</span>:post=ninf\\n            \\n            <span class=\\"hljs-keyword\\">if</span> pre&lt;nums[mid] <span class=\\"hljs-keyword\\">and</span> nums[mid]&gt;post:\\n                <span class=\\"hljs-keyword\\">return</span> mid\\n            <span class=\\"hljs-keyword\\">elif</span> nums[mid]&lt;pre:\\n                hi=mid<span class=\\"hljs-number\\">-1</span>\\n            <span class=\\"hljs-keyword\\">elif</span> nums[mid]&lt;post:\\n                lo=mid+<span class=\\"hljs-number\\">1</span>\\n</code></pre>\\n"],"querySlug":"find-peak-element","created_at":"2019-02-23","timeArr":[2019,1,23,16,19,46,0],"hasThinking":false,"content":"<p>峰值元素是指其值大于左右相邻值的元素。</p>\\n\\n<p>给你一个输入数组 <code>nums</code>，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 <strong>任何一个峰值</strong> 所在位置即可。</p>\\n\\n<p>你可以假设 <code>nums[-1] = nums[n] = -∞</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = <code>[1,2,3,1]</code>\\n<strong>输出：</strong>2\\n<strong>解释：</strong>3 是峰值元素，你的函数应该返回其索引 2。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = <code>[</code>1,2,1,3,5,6,4]\\n<strong>输出：</strong>1 或 5 \\n<strong>解释：</strong>你的函数可以返回索引 1，其峰值元素为 2；\\n     或者返回索引 5， 其峰值元素为 6。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 1000</code></li>\\n\\t<li><code>-2<sup>31</sup> <= nums[i] <= 2<sup>31</sup> - 1</code></li>\\n\\t<li>对于所有有效的 <code>i</code> 都有 <code>nums[i] != nums[i + 1]</code></li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong>你可以实现时间复杂度为 <code>O(logN)</code><em> </em>的解决方案吗？</p>\\n","title":"162. 寻找峰值","relatedTags":["数组","二分查找"],"difficult":"Middle","lang":["python"],"uniqueID":"162","slug":"162-Find-Peak-Element"}')}}]);