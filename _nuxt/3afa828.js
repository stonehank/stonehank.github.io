(window.webpackJsonp=window.webpackJsonp||[]).push([[398],{1196:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">maxLetters</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">minSize</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">maxSize</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxFreq = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s, maxLetters, minSize, maxSize</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> start=<span class=\\"hljs-number\\">0</span>,result=<span class=\\"hljs-number\\">0</span>;\\n  <span class=\\"hljs-keyword\\">let</span> count={}\\t\\n  <span class=\\"hljs-keyword\\">let</span> distinct=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> occurence={}\\n\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(count[s[i]]==<span class=\\"hljs-literal\\">null</span>){\\n      count[s[i]]=<span class=\\"hljs-number\\">0</span>\\n      distinct++\\n    }\\n    count[s[i]]++;\\t\\t\\t\\t\\t\\t\\n    <span class=\\"hljs-keyword\\">if</span>(i-start+<span class=\\"hljs-number\\">1</span> &gt; minSize){\\n        count[s[start]]--\\n        <span class=\\"hljs-keyword\\">if</span>(count[s[start]]==<span class=\\"hljs-number\\">0</span>){\\n          <span class=\\"hljs-keyword\\">delete</span>(count[s[start]])\\n          distinct--\\n        }\\n        start++\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(i-start+<span class=\\"hljs-number\\">1</span>==minSize &amp;&amp; distinct &lt;= maxLetters){\\n      <span class=\\"hljs-keyword\\">if</span>(occurence[s.substr(start,i-start+<span class=\\"hljs-number\\">1</span>)]==<span class=\\"hljs-literal\\">null</span>)occurence[s.substr(start,i-start+<span class=\\"hljs-number\\">1</span>)]=<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">else</span> occurence[s.substr(start,i-start+<span class=\\"hljs-number\\">1</span>)]++\\n    } \\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> key <span class=\\"hljs-keyword\\">in</span> occurence){\\n    result=<span class=\\"hljs-built_in\\">Math</span>.max(result,occurence[key])\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> result;\\n};\\n</code></pre>\\n"],"querySlug":"maximum-number-of-occurrences-of-a-substring","created_at":"2019-12-22","timeArr":[2019,11,22,13,24,28,0],"hasThinking":false,"content":"<p>给你一个字符串&nbsp;<code>s</code> ，请你返回满足以下条件且出现次数最大的&nbsp;<strong>任意</strong>&nbsp;子串的出现次数：</p>\\n\\n<ul>\\n\\t<li>子串中不同字母的数目必须小于等于 <code>maxLetters</code> 。</li>\\n\\t<li>子串的长度必须大于等于&nbsp;<code>minSize</code> 且小于等于&nbsp;<code>maxSize</code> 。</li>\\n</ul>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;aababcaab&quot;, maxLetters = 2, minSize = 3, maxSize = 4\\n<strong>输出：</strong>2\\n<strong>解释：</strong>子串 &quot;aab&quot; 在原字符串中出现了 2 次。\\n它满足所有的要求：2 个不同的字母，长度为 3 （在 minSize 和 maxSize 范围内）。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;aaaa&quot;, maxLetters = 1, minSize = 3, maxSize = 3\\n<strong>输出：</strong>2\\n<strong>解释：</strong>子串 &quot;aaa&quot; 在原字符串中出现了 2 次，且它们有重叠部分。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;aabcabcab&quot;, maxLetters = 2, minSize = 2, maxSize = 3\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;abcde&quot;, maxLetters = 2, minSize = 3, maxSize = 3\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\\n\\t<li><code>1 &lt;= maxLetters &lt;= 26</code></li>\\n\\t<li><code>1 &lt;= minSize &lt;= maxSize &lt;= min(26, s.length)</code></li>\\n\\t<li><code>s</code>&nbsp;只包含小写英文字母。</li>\\n</ul>\\n","title":"1297. 子串的最大出现次数","relatedTags":["哈希表","字符串","滑动窗口"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1297","slug":"1297-Maximum-Number-of-Occurrences-of-a-Substring"}')}}]);