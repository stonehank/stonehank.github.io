(window.webpackJsonp=window.webpackJsonp||[]).push([[1270],{2068:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">tree</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> totalFruit = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">tree</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> x=[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">-1</span>],y=[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">-1</span>]\\n  <span class=\\"hljs-keyword\\">let</span> maxAmount=<span class=\\"hljs-number\\">0</span>,amount=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;tree.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(tree[i]!==x[<span class=\\"hljs-number\\">0</span>] &amp;&amp; tree[i]!==y[<span class=\\"hljs-number\\">0</span>]){\\n      <span class=\\"hljs-keyword\\">if</span>(x[<span class=\\"hljs-number\\">0</span>]===<span class=\\"hljs-number\\">-1</span>){\\n        x=[tree[i],i,i+<span class=\\"hljs-number\\">1</span>]\\n      }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(y[<span class=\\"hljs-number\\">0</span>]===<span class=\\"hljs-number\\">-1</span>){\\n        y=[tree[i],i,i+<span class=\\"hljs-number\\">1</span>]\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        <span class=\\"hljs-keyword\\">if</span>(x[<span class=\\"hljs-number\\">2</span>]&lt;y[<span class=\\"hljs-number\\">2</span>]){\\n          x=[tree[x[<span class=\\"hljs-number\\">2</span>]],x[<span class=\\"hljs-number\\">2</span>],y[<span class=\\"hljs-number\\">2</span>]]\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n          x=[tree[y[<span class=\\"hljs-number\\">2</span>]],y[<span class=\\"hljs-number\\">2</span>],x[<span class=\\"hljs-number\\">2</span>]]\\n        }\\n        y=[tree[i],i,i+<span class=\\"hljs-number\\">1</span>]     \\n      }\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(tree[i]===x[<span class=\\"hljs-number\\">0</span>])x[<span class=\\"hljs-number\\">2</span>]=i+<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(tree[i]===y[<span class=\\"hljs-number\\">0</span>])y[<span class=\\"hljs-number\\">2</span>]=i+<span class=\\"hljs-number\\">1</span>\\n    }\\n\\n    maxAmount=<span class=\\"hljs-built_in\\">Math</span>.max(maxAmount,i-x[<span class=\\"hljs-number\\">1</span>]+<span class=\\"hljs-number\\">1</span>)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> maxAmount\\n};\\n</code></pre>\\n"],"querySlug":"fruit-into-baskets","created_at":"2019-04-12","timeArr":[2019,3,12,16,39,19,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p><code>slide window</code>，使用两个指针<code>i</code>，<code>j</code>分别记录，窗口的左侧和右侧，遍历时通过<code>hash</code>记录水果的种类<code>kind</code>，\\n如果<code>kind</code>超过2个，那么左侧不断<code>i++</code>，直到<code>kind===2</code>，每次遍历最后记录一下当前最大范围<code>j-i+1</code>。</p>\\n","content":"<p>在一排树中，第 <code>i</code> 棵树产生&nbsp;<code>tree[i]</code> 型的水果。<br>\\n你可以<strong>从你选择的任何树开始</strong>，然后重复执行以下步骤：</p>\\n\\n<ol>\\n\\t<li>把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。</li>\\n\\t<li>移动到当前树右侧的下一棵树。如果右边没有树，就停下来。</li>\\n</ol>\\n\\n<p>请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然后返回步骤 1，然后执行步骤 2，依此类推，直至停止。</p>\\n\\n<p>你有两个篮子，每个篮子可以携带任何数量的水果，但你希望每个篮子只携带一种类型的水果。</p>\\n\\n<p>用这个程序你能收集的水果树的最大总量是多少？</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,2,1]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>我们可以收集 [1,2,1]。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[0,1,2,2]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>我们可以收集 [1,2,2]\\n如果我们从第一棵树开始，我们将只能收集到 [0, 1]。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,2,3,2,2]\\n<strong>输出：</strong>4\\n<strong>解释：</strong>我们可以收集 [2,3,2,2]\\n如果我们从第一棵树开始，我们将只能收集到 [1, 2]。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>[3,3,3,1,2,1,1,2,3,3,4]\\n<strong>输出：</strong>5\\n<strong>解释：</strong>我们可以收集 [1,2,1,1,2]\\n如果我们从第一棵树或第八棵树开始，我们将只能收集到 4 棵水果树。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= tree.length &lt;= 40000</code></li>\\n\\t<li><code>0 &lt;= tree[i] &lt; tree.length</code></li>\\n</ul>\\n","title":"904. 水果成篮","relatedTags":["数组","哈希表","滑动窗口"],"difficult":"Middle","lang":["javascript"],"uniqueID":"904","slug":"904-Fruit-Into-Baskets"}')}}]);