(window.webpackJsonp=window.webpackJsonp||[]).push([[1350],{2148:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> sortedSquares = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> left=[],right=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> a <span class=\\"hljs-keyword\\">of</span> A){\\n    <span class=\\"hljs-keyword\\">if</span>(a&lt;<span class=\\"hljs-number\\">0</span>)left.push(a)\\n    <span class=\\"hljs-keyword\\">else</span> right.push(a)\\n  }\\n  left=left.reverse().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">n</span>=&gt;</span>n*n)\\n  right=right.map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">n</span>=&gt;</span>n*n)\\n  <span class=\\"hljs-comment\\">// console.log(left,right)</span>\\n  <span class=\\"hljs-keyword\\">let</span> l=<span class=\\"hljs-number\\">0</span>,r=<span class=\\"hljs-number\\">0</span>,all=[]\\n  <span class=\\"hljs-keyword\\">while</span>(l&lt;left.length &amp;&amp; r&lt;right.length){\\n    <span class=\\"hljs-keyword\\">if</span>(left[l]&lt;right[r])all.push(left[l++])\\n    <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(left[l]&gt;right[r])all.push(right[r++])\\n    <span class=\\"hljs-keyword\\">else</span> all.push(left[l++],right[r++])\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(l===left.length)<span class=\\"hljs-keyword\\">return</span> all.concat(right.slice(r))\\n  <span class=\\"hljs-keyword\\">if</span>(r===right.length)<span class=\\"hljs-keyword\\">return</span> all.concat(left.slice(l))\\n  <span class=\\"hljs-keyword\\">return</span> all\\n};\\n</code></pre>\\n"],"querySlug":"squares-of-a-sorted-array","created_at":"2019-01-20","timeArr":[2019,0,20,11,44,13,0],"hasThinking":false,"content":"<p>给你一个按 <strong>非递减顺序</strong> 排序的整数数组 <code>nums</code>，返回 <strong>每个数字的平方</strong> 组成的新数组，要求也按 <strong>非递减顺序</strong> 排序。</p>\\n\\n<ul>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [-4,-1,0,3,10]\\n<strong>输出：</strong>[0,1,9,16,100]\\n<strong>解释：</strong>平方后，数组变为 [16,1,0,9,100]\\n排序后，数组变为 [0,1,9,16,100]</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [-7,-3,2,3,11]\\n<strong>输出：</strong>[4,9,9,49,121]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code><span>1 <= nums.length <= </span>10<sup>4</sup></code></li>\\n\\t<li><code>-10<sup>4</sup> <= nums[i] <= 10<sup>4</sup></code></li>\\n\\t<li><code>nums</code> 已按 <strong>非递减顺序</strong> 排序</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong></p>\\n\\n<ul>\\n\\t<li>请你<span style=\\"color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;\\">设计时间复杂度为 <code>O(n)</code> 的算法解决本问题</span></li>\\n</ul>\\n","title":"977. 有序数组的平方","relatedTags":["数组","双指针","排序"],"difficult":"Easy","lang":["javascript"],"uniqueID":"977","slug":"977-Squares-of-a-Sorted-Array"}')}}]);