(window.webpackJsonp=window.webpackJsonp||[]).push([[770],{1568:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">searchInsert</span><span class=\\"hljs-params\\">(self, nums, target)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        :type target: int\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-comment\\"># if len(nums)==0 or nums[-1]&lt;target:return len(nums)</span>\\n        lo,hi=<span class=\\"hljs-number\\">0</span>,len(nums)<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">while</span> lo&lt;=hi:\\n            mid=(lo+hi) // <span class=\\"hljs-number\\">2</span>\\n            <span class=\\"hljs-keyword\\">if</span> nums[mid]&lt;target:\\n                lo=mid+<span class=\\"hljs-number\\">1</span>\\n            <span class=\\"hljs-keyword\\">else</span>:\\n                hi=mid<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">return</span> lo\\n        \\n</code></pre>\\n"],"querySlug":"search-insert-position","created_at":"2019-02-23","timeArr":[2019,1,23,13,54,44,0],"hasThinking":false,"content":"<p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>\\n\\n<p>请必须使用时间复杂度为 <code>O(log n)</code> 的算法。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [1,3,5,6], target = 5\\n<strong>输出:</strong> 2\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [1,3,5,6], target = 2\\n<strong>输出:</strong> 1\\n</pre>\\n\\n<p><strong>示例 3:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [1,3,5,6], target = 7\\n<strong>输出:</strong> 4\\n</pre>\\n\\n<p><strong>示例 4:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [1,3,5,6], target = 0\\n<strong>输出:</strong> 0\\n</pre>\\n\\n<p><strong>示例 5:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [1], target = 0\\n<strong>输出:</strong> 0\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示:</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>-10<sup>4</sup> <= nums[i] <= 10<sup>4</sup></code></li>\\n\\t<li><code>nums</code> 为<strong>无重复元素</strong>的<strong>升序</strong>排列数组</li>\\n\\t<li><code>-10<sup>4</sup> <= target <= 10<sup>4</sup></code></li>\\n</ul>\\n","title":"35. 搜索插入位置","relatedTags":["数组","二分查找"],"difficult":"Easy","lang":["python"],"uniqueID":"35","slug":"35-Search-Insert-Position"}')}}]);