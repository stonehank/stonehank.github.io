(window.webpackJsonp=window.webpackJsonp||[]).push([[845],{1643:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\"># Definition for an interval.</span>\\n<span class=\\"hljs-comment\\"># class Interval(object):</span>\\n<span class=\\"hljs-comment\\">#     def __init__(self, s=0, e=0):</span>\\n<span class=\\"hljs-comment\\">#         self.start = s</span>\\n<span class=\\"hljs-comment\\">#         self.end = e</span>\\n\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">findRightInterval</span><span class=\\"hljs-params\\">(self, intervals)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type intervals: List[Interval]\\n        :rtype: List[int]\\n        \\"\\"\\"</span>\\n        aux=[<span class=\\"hljs-literal\\">None</span>]*len(intervals)\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(len(intervals)):\\n          n=intervals[i]\\n          aux[i]=[n.start,n.end,i]\\n        aux.sort(key=<span class=\\"hljs-keyword\\">lambda</span> x:(x[<span class=\\"hljs-number\\">0</span>]))\\n        <span class=\\"hljs-comment\\"># print aux</span>\\n        ans=[<span class=\\"hljs-literal\\">None</span>]*len(aux)\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(len(aux)):\\n          curID=aux[i][<span class=\\"hljs-number\\">2</span>]\\n          <span class=\\"hljs-keyword\\">if</span> i==len(aux)<span class=\\"hljs-number\\">-1</span>:\\n            ans[curID]=<span class=\\"hljs-number\\">-1</span>\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            lo=i+<span class=\\"hljs-number\\">1</span>\\n            hi=len(aux)<span class=\\"hljs-number\\">-1</span>\\n            target=aux[i][<span class=\\"hljs-number\\">1</span>]\\n            <span class=\\"hljs-keyword\\">while</span> lo&lt;hi:\\n              mid=(lo+hi)//<span class=\\"hljs-number\\">2</span>\\n              <span class=\\"hljs-keyword\\">if</span> aux[mid][<span class=\\"hljs-number\\">0</span>]&lt;target:\\n                lo=mid+<span class=\\"hljs-number\\">1</span>\\n              <span class=\\"hljs-keyword\\">else</span>:\\n                hi=mid\\n            <span class=\\"hljs-comment\\"># print aux,lo,i,target</span>\\n            <span class=\\"hljs-keyword\\">if</span> aux[lo][<span class=\\"hljs-number\\">0</span>]&gt;=target:\\n              ans[curID]=aux[lo][<span class=\\"hljs-number\\">2</span>]\\n            <span class=\\"hljs-keyword\\">else</span>:\\n              ans[curID]=<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">return</span> ans\\n</code></pre>\\n"],"querySlug":"find-right-interval","created_at":"2019-02-25","timeArr":[2019,1,25,22,45,13,0],"hasThinking":false,"content":"<p>给你一个区间数组 <code>intervals</code> ，其中 <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code> ，且每个 <code>start<sub>i</sub></code> 都 <strong>不同</strong> 。</p>\\n\\n<p>区间 <code>i</code> 的 <strong>右侧区间</strong> 可以记作区间 <code>j</code> ，并满足 <code>start<sub>j</sub></code><code> >= end<sub>i</sub></code> ，且 <code>start<sub>j</sub></code> <strong>最小化 </strong>。</p>\\n\\n<p>返回一个由每个区间 <code>i</code> 的 <strong>右侧区间</strong> 的最小起始位置组成的数组。如果某个区间 <code>i</code> 不存在对应的 <strong>右侧区间</strong> ，则下标 <code>i</code> 处的值设为 <code>-1</code> 。</p>\\n \\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [[1,2]]\\n<strong>输出：</strong>[-1]\\n<strong>解释：</strong>集合中只有一个区间，所以输出-1。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [[3,4],[2,3],[1,2]]\\n<strong>输出：</strong>[-1, 0, 1]\\n<strong>解释：</strong>对于 [3,4] ，没有满足条件的“右侧”区间。\\n对于 [2,3] ，区间[3,4]具有最小的“右”起点;\\n对于 [1,2] ，区间[2,3]具有最小的“右”起点。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>intervals = [[1,4],[2,3],[3,4]]\\n<strong>输出：</strong>[-1, 2, -1]\\n<strong>解释：</strong>对于区间 [1,4] 和 [3,4] ，没有满足条件的“右侧”区间。\\n对于 [2,3] ，区间 [3,4] 有最小的“右”起点。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= intervals.length <= 2 * 10<sup>4</sup></code></li>\\n\\t<li><code>intervals[i].length == 2</code></li>\\n\\t<li><code>-10<sup>6</sup> <= start<sub>i</sub> <= end<sub>i</sub> <= 10<sup>6</sup></code></li>\\n\\t<li>每个间隔的起点都 <strong>不相同</strong></li>\\n</ul>\\n","title":"436. 寻找右区间","relatedTags":["数组","二分查找","排序"],"difficult":"Middle","lang":["python"],"uniqueID":"436","slug":"436-Find-Right-Interval"}')}}]);