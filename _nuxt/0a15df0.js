(window.webpackJsonp=window.webpackJsonp||[]).push([[1337],{2135:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for a binary tree node.\\n * function TreeNode(val) {\\n *     this.val = val;\\n *     this.left = this.right = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">root</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isUnivalTree = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">root</span>) </span>{\\n    <span class=\\"hljs-keyword\\">if</span>(!root)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">let</span> val=root.val\\n    <span class=\\"hljs-keyword\\">let</span> flag=<span class=\\"hljs-literal\\">true</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">node</span>)</span>{\\n        <span class=\\"hljs-keyword\\">if</span>(!flag)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n        <span class=\\"hljs-keyword\\">if</span>(node.val!==val)<span class=\\"hljs-keyword\\">return</span> flag=<span class=\\"hljs-literal\\">false</span>\\n        <span class=\\"hljs-keyword\\">if</span>(node.left)dfs(node.left)\\n        <span class=\\"hljs-keyword\\">if</span>(node.right)dfs(node.right)\\n    }\\n    dfs(root)\\n    <span class=\\"hljs-keyword\\">return</span> flag\\n};\\n</code></pre>\\n"],"querySlug":"univalued-binary-tree","created_at":"2018-12-30","timeArr":[2018,11,30,10,32,32,0],"hasThinking":false,"content":"<p>如果二叉树每个节点都具有相同的值，那么该二叉树就是<em>单值</em>二叉树。</p>\\n\\n<p>只有给定的树是单值二叉树时，才返回&nbsp;<code>true</code>；否则返回 <code>false</code>。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/screen-shot-2018-12-25-at-50104-pm.png\\" style=\\"height: 159px; width: 200px;\\"></p>\\n\\n<pre><strong>输入：</strong>[1,1,1,1,1,null,1]\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/29/screen-shot-2018-12-25-at-50050-pm.png\\" style=\\"height: 158px; width: 200px;\\"></p>\\n\\n<pre><strong>输入：</strong>[2,2,2,5,2]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li>给定树的节点数范围是&nbsp;<code>[1, 100]</code>。</li>\\n\\t<li>每个节点的值都是整数，范围为&nbsp;<code>[0, 99]</code>&nbsp;。</li>\\n</ol>\\n","title":"965. 单值二叉树","relatedTags":["树","深度优先搜索","广度优先搜索","二叉树"],"difficult":"Easy","lang":["javascript"],"uniqueID":"965","slug":"965-Univalued-Binary-Tree"}')}}]);