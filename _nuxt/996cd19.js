(window.webpackJsonp=window.webpackJsonp||[]).push([[522],{1320:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> longestSubarray = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> aux=[]\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nums.length;i++){\\n        aux[i]=[count,<span class=\\"hljs-number\\">0</span>]\\n        <span class=\\"hljs-keyword\\">if</span>(nums[i]===<span class=\\"hljs-number\\">1</span>){\\n            count++\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            count=<span class=\\"hljs-number\\">0</span>\\n        }\\n    }\\n    count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=nums.length<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n        aux[i][<span class=\\"hljs-number\\">1</span>]=count\\n        <span class=\\"hljs-keyword\\">if</span>(nums[i]===<span class=\\"hljs-number\\">1</span>){\\n            count++\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            count=<span class=\\"hljs-number\\">0</span>\\n        }\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(aux)</span>\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [l,r] <span class=\\"hljs-keyword\\">of</span> aux){\\n        res=<span class=\\"hljs-built_in\\">Math</span>.max(res,l+r)\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"longest-subarray-of-1s-after-deleting-one-element","created_at":"2020-07-08","timeArr":[2020,6,8,10,18,59,0],"hasThinking":false,"content":"<p>给你一个二进制数组&nbsp;<code>nums</code>&nbsp;，你需要从中删掉一个元素。</p>\\n\\n<p>请你在删掉元素的结果数组中，返回最长的且只包含 1 的非空子数组的长度。</p>\\n\\n<p>如果不存在这样的子数组，请返回 0 。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示 1：</strong></p>\\n\\n<pre><strong>输入：</strong>nums = [1,1,0,1]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>删掉位置 2 的数后，[1,1,1] 包含 3 个 1 。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>nums = [0,1,1,1,0,1,1,0,1]\\n<strong>输出：</strong>5\\n<strong>解释：</strong>删掉位置 4 的数字后，[0,1,1,1,1,1,0,1] 的最长全 1 子数组为 [1,1,1,1,1] 。</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>nums = [1,1,1]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>你必须要删除一个元素。</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>nums = [1,1,0,0,1,1,1,0,1]\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>nums = [0,0,0]\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\\n\\t<li><code>nums[i]</code>&nbsp;要么是&nbsp;<code>0</code>&nbsp;要么是&nbsp;<code>1</code> 。</li>\\n</ul>\\n","title":"1493. 删掉一个元素以后全为 1 的最长子数组","relatedTags":["数学","动态规划","滑动窗口"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1493","slug":"1493-Longest-Subarray-of-1s-After-Deleting-One-Element"}')}}]);