(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{1036:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">costs</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> twoCitySchedCost = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">costs</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> aux=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [a,b] <span class=\\"hljs-keyword\\">of</span> costs){\\n    aux.push([a,b,a-b])\\n  }\\n  aux.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a[<span class=\\"hljs-number\\">2</span>]-b[<span class=\\"hljs-number\\">2</span>])\\n  <span class=\\"hljs-comment\\">// console.log(aux)</span>\\n  <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;aux.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(i&lt;aux.length/<span class=\\"hljs-number\\">2</span>){\\n      sum+=aux[i][<span class=\\"hljs-number\\">0</span>]\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      sum+=aux[i][<span class=\\"hljs-number\\">1</span>]\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> sum\\n};\\n</code></pre>\\n"],"querySlug":"two-city-scheduling","created_at":"2019-04-21","timeArr":[2019,3,21,10,51,12,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>题目要求出分割2个部分，这两个部分的和最小。</p>\\n<p>因为一个<code>cost[i]</code>，不是给<code>a</code>选就是给<code>b</code>选，因此要让和最小，就要选择<code>cost[i][1]-cost[i][0]</code>这个差距最大的给<code>a</code>，因为如果不给<code>a</code>，\\n那就一定会给<code>b</code>选，那么整体的和一定会增加。</p>\\n","content":"<p>公司计划面试 <code>2n</code> 人。给你一个数组 <code>costs</code> ，其中 <code>costs[i] = [aCost<sub>i</sub>, bCost<sub>i</sub>]</code> 。第 <code>i</code> 人飞往 <code>a</code> 市的费用为 <code>aCost<sub>i</sub></code> ，飞往 <code>b</code> 市的费用为 <code>bCost<sub>i</sub></code> 。</p>\\n\\n<p>返回将每个人都飞到 <code>a</code> 、<code>b</code> 中某座城市的最低费用，要求每个城市都有 <code>n</code> 人抵达<strong>。</strong></p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>costs = [[10,20],[30,200],[400,50],[30,20]]\\n<strong>输出：</strong>110\\n<strong>解释：</strong>\\n第一个人去 a 市，费用为 10。\\n第二个人去 a 市，费用为 30。\\n第三个人去 b 市，费用为 50。\\n第四个人去 b 市，费用为 20。\\n\\n最低总费用为 10 + 30 + 50 + 20 = 110，每个城市都有一半的人在面试。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>costs = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]\\n<strong>输出：</strong>1859\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>costs = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]\\n<strong>输出：</strong>3086\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 * n == costs.length</code></li>\\n\\t<li><code>2 <= costs.length <= 100</code></li>\\n\\t<li><code>costs.length</code> 为偶数</li>\\n\\t<li><code>1 <= aCost<sub>i</sub>, bCost<sub>i</sub> <= 1000</code></li>\\n</ul>\\n","title":"1029. 两地调度","relatedTags":["贪心","数组","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1029","slug":"1029-Two-City-Scheduling"}')}}]);