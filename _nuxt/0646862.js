(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{1018:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numDupDigitsAtMostN = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> visited=<span class=\\"hljs-built_in\\">Array</span>(<span class=\\"hljs-number\\">10</span>).fill(<span class=\\"hljs-literal\\">false</span>)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">str,visited,step</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(str===<span class=\\"hljs-string\\">\\"\\"</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(str.length===<span class=\\"hljs-number\\">1</span>){\\n      <span class=\\"hljs-keyword\\">let</span> num=+str\\n      <span class=\\"hljs-keyword\\">let</span> count=num+<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;=num;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(visited[i])count--\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> count\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> head=+str[<span class=\\"hljs-number\\">0</span>]\\n    <span class=\\"hljs-keyword\\">let</span> len=str.length\\n    <span class=\\"hljs-keyword\\">let</span> pivot=<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">10</span>,len<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-number\\">-1</span>\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;=head;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(visited[i])<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(step!==<span class=\\"hljs-number\\">0</span> || i!==<span class=\\"hljs-number\\">0</span>)visited[i]=<span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">if</span>(i===<span class=\\"hljs-number\\">0</span> &amp;&amp; step===<span class=\\"hljs-number\\">0</span>)res+=dfs(pivot+<span class=\\"hljs-string\\">\'\'</span>,visited,step)\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(i===head)res+=dfs(str.slice(<span class=\\"hljs-number\\">1</span>),visited,step+<span class=\\"hljs-number\\">1</span>)\\n      <span class=\\"hljs-keyword\\">else</span> res+=dfs(pivot+<span class=\\"hljs-string\\">\'\'</span>,visited,step+<span class=\\"hljs-number\\">1</span>)\\n      visited[i]=<span class=\\"hljs-literal\\">false</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> N-dfs(N+<span class=\\"hljs-string\\">\'\'</span>,visited,<span class=\\"hljs-number\\">0</span>)+<span class=\\"hljs-number\\">1</span>\\n};\\n</code></pre>\\n"],"querySlug":"numbers-with-repeated-digits","created_at":"2019-03-17","timeArr":[2019,2,17,12,49,44,0],"hasThinking":false,"content":"<p>给定正整数&nbsp;<code>N</code>，返回小于等于 <code>N</code>&nbsp;且具有至少 1 位重复数字的正整数的个数。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>20\\n<strong>输出：</strong>1\\n<strong>解释：</strong>具有至少 1 位重复数字的正数（&lt;= 20）只有 11 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>100\\n<strong>输出：</strong>10\\n<strong>解释：</strong>具有至少 1 位重复数字的正数（&lt;= 100）有 11，22，33，44，55，66，77，88，99 和 100 。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>1000\\n<strong>输出：</strong>262\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\\n</ol>\\n","title":"1012. 至少有 1 位重复的数字","relatedTags":["数学","动态规划"],"difficult":"Hard","lang":["javascript"],"uniqueID":"1012","slug":"1012-Numbers-With-Repeated-Digits"}')}}]);