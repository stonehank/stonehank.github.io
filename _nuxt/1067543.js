(window.webpackJsonp=window.webpackJsonp||[]).push([[1148],{1946:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">board</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> validTicTacToe = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">board</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> xCounts=<span class=\\"hljs-number\\">0</span>,oCounts=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;<span class=\\"hljs-number\\">3</span>;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;<span class=\\"hljs-number\\">3</span>;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(board[i][j]===<span class=\\"hljs-string\\">\\"X\\"</span>)xCounts++\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(board[i][j]===<span class=\\"hljs-string\\">\\"O\\"</span>)oCounts++\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(oCounts&gt;xCounts)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">if</span>(xCounts-oCounts&gt;<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">let</span> visited=<span class=\\"hljs-built_in\\">Array</span>(<span class=\\"hljs-number\\">3</span>).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(<span class=\\"hljs-number\\">3</span>).fill(<span class=\\"hljs-literal\\">false</span>))\\n  <span class=\\"hljs-keyword\\">let</span> [oWin,xWin]=checkWiner()\\n  <span class=\\"hljs-keyword\\">if</span>(oWin &amp;&amp; xWin)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">if</span>(oWin &amp;&amp; oCounts!==xCounts)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">if</span>(xWin &amp;&amp; xCounts-oCounts!==<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">checkWiner</span>(<span class=\\"hljs-params\\"></span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> oWin=<span class=\\"hljs-literal\\">false</span>,xWin=<span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;<span class=\\"hljs-number\\">3</span>;i++){\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;<span class=\\"hljs-number\\">3</span>;j++){\\n        <span class=\\"hljs-keyword\\">if</span>(visited[i][j])<span class=\\"hljs-keyword\\">continue</span>\\n        <span class=\\"hljs-keyword\\">if</span>(board[i][j]==<span class=\\"hljs-string\\">\\" \\"</span>)<span class=\\"hljs-keyword\\">continue</span>\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> dx=<span class=\\"hljs-number\\">-1</span>;dx&lt;=<span class=\\"hljs-number\\">1</span>;dx++){\\n          <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> dy=<span class=\\"hljs-number\\">-1</span>;dy&lt;=<span class=\\"hljs-number\\">1</span>;dy++){\\n            <span class=\\"hljs-keyword\\">if</span>(dx===<span class=\\"hljs-number\\">0</span> &amp;&amp; dy===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">continue</span>\\n            <span class=\\"hljs-keyword\\">if</span>(dfs([i,j],[dx,dy],<span class=\\"hljs-number\\">1</span>)){\\n              <span class=\\"hljs-keyword\\">if</span>(board[i][j]===<span class=\\"hljs-string\\">\\"X\\"</span>)xWin=<span class=\\"hljs-literal\\">true</span>\\n              <span class=\\"hljs-keyword\\">else</span> oWin=<span class=\\"hljs-literal\\">true</span>\\n            }\\n          }\\n        }\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> [oWin,xWin]\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">[x,y],[dx,dy],len</span>)</span>{\\n    visited[x][y]=<span class=\\"hljs-literal\\">true</span>\\n    <span class=\\"hljs-keyword\\">if</span>(len===<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n    <span class=\\"hljs-keyword\\">let</span> cur=board[x][y]\\n    <span class=\\"hljs-keyword\\">let</span> nx=dx+x,ny=dy+y\\n    <span class=\\"hljs-keyword\\">if</span>(nx&lt;<span class=\\"hljs-number\\">0</span> || ny&lt;<span class=\\"hljs-number\\">0</span> || nx&gt;=<span class=\\"hljs-number\\">3</span>|| ny&gt;=<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">if</span>(board[nx][ny]!==cur)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    <span class=\\"hljs-keyword\\">return</span> dfs([nx,ny],[dx,dy],len+<span class=\\"hljs-number\\">1</span>)\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"valid-tic-tac-toe-state","created_at":"2019-04-02","timeArr":[2019,3,2,11,12,23,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>只要判断几个条件：</p>\\n<ol>\\n<li><code>O</code>的数量不能大于<code>X</code>的数量。</li>\\n<li><code>X</code>的数量超出<code>O</code>的数量不能大于1。</li>\\n<li>不能同时存在<code>O</code>胜利和<code>X</code>胜利。</li>\\n<li>如果<code>O</code>胜利，那么<code>O</code>的数量一定等于<code>X</code>的数量。</li>\\n<li>如果<code>X</code>胜利，那么<code>X</code>的数量一定比<code>O</code>的数量多1。</li>\\n</ol>\\n<ul>\\n<li>找<code>X</code>和<code>O</code>的数量，很简单，用<code>hash</code>。</li>\\n<li>判断<code>XWin</code>和<code>OWin</code>，遍历<code>board</code>，发现<code>O</code>或者<code>X</code>，检查它周围八个方向的每一个，查看是否存在<code>3连</code>的。</li>\\n</ul>\\n","content":"<p>用字符串数组作为井字游戏的游戏板&nbsp;<code>board</code>。当且仅当在井字游戏过程中，玩家有可能将字符放置成游戏板所显示的状态时，才返回 true。</p>\\n\\n<p>该游戏板是一个 3 x 3 数组，由字符&nbsp;<code>&quot; &quot;</code>，<code>&quot;X&quot;</code>&nbsp;和&nbsp;<code>&quot;O&quot;</code>&nbsp;组成。字符&nbsp;<code>&quot; &quot;</code>&nbsp;代表一个空位。</p>\\n\\n<p>以下是井字游戏的规则：</p>\\n\\n<ul>\\n\\t<li>玩家轮流将字符放入空位（&quot; &quot;）中。</li>\\n\\t<li>第一个玩家总是放字符 &ldquo;X&rdquo;，且第二个玩家总是放字符 &ldquo;O&rdquo;。</li>\\n\\t<li>&ldquo;X&rdquo; 和 &ldquo;O&rdquo; 只允许放置在空位中，不允许对已放有字符的位置进行填充。</li>\\n\\t<li>当有 3 个相同（且非空）的字符填充任何行、列或对角线时，游戏结束。</li>\\n\\t<li>当所有位置非空时，也算为游戏结束。</li>\\n\\t<li>如果游戏结束，玩家不允许再放置字符。</li>\\n</ul>\\n\\n<pre>\\n<strong>示例 1:</strong>\\n<strong>输入:</strong> board = [&quot;O&nbsp; &quot;, &quot;&nbsp; &nbsp;&quot;, &quot;&nbsp; &nbsp;&quot;]\\n<strong>输出:</strong> false\\n<strong>解释:</strong> 第一个玩家总是放置&ldquo;X&rdquo;。\\n\\n<strong>示例 2:</strong>\\n<strong>输入:</strong> board = [&quot;XOX&quot;, &quot; X &quot;, &quot;   &quot;]\\n<strong>输出:</strong> false\\n<strong>解释:</strong> 玩家应该是轮流放置的。\\n\\n<strong>示例 3:</strong>\\n<strong>输入:</strong> board = [&quot;XXX&quot;, &quot;   &quot;, &quot;OOO&quot;]\\n<strong>输出:</strong> false\\n\\n<strong>示例 4:</strong>\\n<strong>输入:</strong> board = [&quot;XOX&quot;, &quot;O O&quot;, &quot;XOX&quot;]\\n<strong>输出:</strong> true\\n</pre>\\n\\n<p><strong>说明:</strong></p>\\n\\n<ul>\\n\\t<li>游戏板&nbsp;<code>board</code>&nbsp;是长度为 3 的字符串数组，其中每个字符串&nbsp;<code>board[i]</code>&nbsp;的长度为&nbsp;3。</li>\\n\\t<li>&nbsp;<code>board[i][j]</code>&nbsp;是集合&nbsp;<code>{&quot; &quot;, &quot;X&quot;, &quot;O&quot;}</code>&nbsp;中的一个字符。</li>\\n</ul>\\n","title":"794. 有效的井字游戏","relatedTags":["数组","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"794","slug":"794-Valid-Tic-Tac-Toe-State"}')}}]);