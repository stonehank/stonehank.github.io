(window.webpackJsonp=window.webpackJsonp||[]).push([[303],{1101:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">hours</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> longestWPI = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">hours</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> aux=[]\\n  <span class=\\"hljs-keyword\\">let</span> basic=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;hours.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(hours[i]&gt;<span class=\\"hljs-number\\">8</span>){\\n      aux[i]=++basic\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      aux[i]=--basic\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> end=<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=aux.length<span class=\\"hljs-number\\">-1</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n    <span class=\\"hljs-keyword\\">if</span>(aux[i]&gt;<span class=\\"hljs-number\\">0</span>){\\n      end=i\\n      <span class=\\"hljs-keyword\\">break</span>\\n    }\\n  }\\n  res=<span class=\\"hljs-built_in\\">Math</span>.max(res,end+<span class=\\"hljs-number\\">1</span>)\\n\\n  <span class=\\"hljs-keyword\\">let</span> pre=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;aux.length;i++){\\n    pre=aux[i<span class=\\"hljs-number\\">-1</span>]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=res+i;j&lt;aux.length;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(aux[j]-pre&gt;<span class=\\"hljs-number\\">0</span>){\\n        res=<span class=\\"hljs-built_in\\">Math</span>.max(res,j-i+<span class=\\"hljs-number\\">1</span>)\\n      }\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n  \\n};\\n</code></pre>\\n"],"querySlug":"longest-well-performing-interval","created_at":"2019-07-14","timeArr":[2019,6,14,11,19,14,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>首先将<code>hours</code>转换为前缀和，大于8则<code>+1</code>，否则<code>-1</code></p>\\n<p>例如 <code>hours[8,10,6,16,5]</code></p>\\n<p>转换后 <code>[-1,0,-1,0,-1]</code></p>\\n<p>然后遍历，过程中，</p>\\n<p>如果是正数<code>&gt;0</code>，那么直接<code>res=Math.max(res,i+1)</code></p>\\n<p>如果是非正数<code>&lt;=0</code>，说明这个时间从索引<code>0</code>开始算是不符合要求的，因此需要找出一个开始的位置，这个开始的位置的值为<code>当前值-1</code>。</p>\\n<p>例如上面例子，当到<code>10</code>的时候，为<code>0</code>，因此我们需要在前面找<code>0-1</code>，能找到，因此<code>res=Math.max(res,1-0)</code></p>\\n<p>当到<code>6</code>的时候，为<code>-1</code>，需要找<code>-2</code>，找不到。</p>\\n<p>当到<code>16</code>的时候，为<code>0</code>，需要找<code>-1</code>，这时候前面有2个<code>-1</code>，只需要找第一个即可(保证最长距离)，因此<code>res=Math.max(res,3-0)</code></p>\\n","content":"<p>给你一份工作时间表&nbsp;<code>hours</code>，上面记录着某一位员工每天的工作小时数。</p>\\n\\n<p>我们认为当员工一天中的工作小时数大于&nbsp;<code>8</code> 小时的时候，那么这一天就是「<strong>劳累的一天</strong>」。</p>\\n\\n<p>所谓「表现良好的时间段」，意味在这段时间内，「劳累的天数」是严格<strong> 大于</strong>「不劳累的天数」。</p>\\n\\n<p>请你返回「表现良好时间段」的最大长度。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>hours = [9,9,6,0,6,6,9]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>最长的表现良好时间段是 [9,9,6]。</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= hours.length &lt;= 10000</code></li>\\n\\t<li><code>0 &lt;= hours[i] &lt;= 16</code></li>\\n</ul>\\n","title":"1124. 表现良好的最长时间段","relatedTags":["栈","数组","哈希表","前缀和","单调栈"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1124","slug":"1124-Longest-Well-Performing-Interval"}')}}]);