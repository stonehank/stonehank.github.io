(window.webpackJsonp=window.webpackJsonp||[]).push([[624],{1422:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> halvesAreAlike = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> len=s.length\\n    <span class=\\"hljs-keyword\\">let</span> front=s.slice(<span class=\\"hljs-number\\">0</span>,len/<span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">let</span> end=s.slice(len/<span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">let</span> v1=<span class=\\"hljs-number\\">0</span>, v2=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> vow={\\n        <span class=\\"hljs-string\\">\'a\'</span>:<span class=\\"hljs-literal\\">true</span>,\\n        <span class=\\"hljs-string\\">\'e\'</span>:<span class=\\"hljs-literal\\">true</span>,\\n        <span class=\\"hljs-string\\">\'i\'</span>:<span class=\\"hljs-literal\\">true</span>,\\n        <span class=\\"hljs-string\\">\'o\'</span>:<span class=\\"hljs-literal\\">true</span>,\\n        <span class=\\"hljs-string\\">\'u\'</span>:<span class=\\"hljs-literal\\">true</span>,\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len/<span class=\\"hljs-number\\">2</span>;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(vow[front[i].toLowerCase()])v1++\\n        <span class=\\"hljs-keyword\\">if</span>(vow[end[i].toLowerCase()])v2++\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> v1===v2\\n};\\n</code></pre>\\n"],"querySlug":"determine-if-string-halves-are-alike","created_at":"2021-01-10","timeArr":[2021,0,10,15,26,44,0],"hasThinking":false,"content":"<p>给你一个偶数长度的字符串 <code>s</code> 。将其拆分成长度相同的两半，前一半为 <code>a</code> ，后一半为 <code>b</code> 。</p>\\n\\n<p>两个字符串 <strong>相似</strong> 的前提是它们都含有相同数目的元音（<code>\'a\'</code>，<code>\'e\'</code>，<code>\'i\'</code>，<code>\'o\'</code>，<code>\'u\'</code>，<code>\'A\'</code>，<code>\'E\'</code>，<code>\'I\'</code>，<code>\'O\'</code>，<code>\'U\'</code>）。注意，<code>s</code> 可能同时含有大写和小写字母。</p>\\n\\n<p>如果<em> </em><code>a</code><em> </em>和<em> </em><code>b</code> 相似，返回 <code>true</code> ；否则，返回 <code>false</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = \\"book\\"\\n<strong>输出：</strong>true\\n<strong>解释：</strong>a = \\"b<strong>o</strong>\\" 且 b = \\"<strong>o</strong>k\\" 。a 中有 1 个元音，b 也有 1 个元音。所以，a 和 b 相似。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = \\"textbook\\"\\n<strong>输出：</strong>false\\n<strong>解释：</strong>a = \\"t<strong>e</strong>xt\\" 且 b = \\"b<strong>oo</strong>k\\" 。a 中有 1 个元音，b 中有 2 个元音。因此，a 和 b 不相似。\\n注意，元音 o 在 b 中出现两次，记为 2 个。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = \\"MerryChristmas\\"\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>s = \\"AbCdEfGh\\"\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 &lt;= s.length &lt;= 1000</code></li>\\n\\t<li><code>s.length</code> 是偶数</li>\\n\\t<li><code>s</code> 由 <strong>大写和小写</strong> 字母组成</li>\\n</ul>\\n","title":"1704. 判断字符串的两半是否相似","relatedTags":["字符串","计数"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1704","slug":"1704-Determine-if-String-Halves-Are-Alike"}')}}]);