(window.webpackJsonp=window.webpackJsonp||[]).push([[809],{1607:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> integerReplacement = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(n===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> step=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">if</span>(n % <span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">0</span>){\\n    step+=integerReplacement(n/<span class=\\"hljs-number\\">2</span>)\\n  }<span class=\\"hljs-keyword\\">else</span>{\\n    <span class=\\"hljs-keyword\\">let</span> a=n+<span class=\\"hljs-number\\">1</span>,b=n<span class=\\"hljs-number\\">-1</span>\\n    <span class=\\"hljs-keyword\\">while</span>(a!==<span class=\\"hljs-number\\">1</span> &amp;&amp; b!==<span class=\\"hljs-number\\">1</span> &amp;&amp; a % <span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">0</span> &amp;&amp; b % <span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">0</span>){\\n      step++\\n      a/=<span class=\\"hljs-number\\">2</span>\\n      b/=<span class=\\"hljs-number\\">2</span>\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(a===<span class=\\"hljs-number\\">1</span> || b===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> step\\n    <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(a % <span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">0</span>)step+=integerReplacement(a)\\n    <span class=\\"hljs-keyword\\">else</span> step+=integerReplacement(b)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> step\\n};\\n</code></pre>\\n"],"querySlug":"integer-replacement","created_at":"2019-03-31","timeArr":[2019,2,31,23,23,28,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>当<code>n</code>是奇数时，去对比<code>n+1</code>和<code>n-1</code>，哪个能执行<code>/2</code>操作更多，就选择哪个，这样能保证尽快达到<code>1</code>。</p>\\n<p>当<code>n</code>为<code>3</code>时，虽然<code>4</code>能执行<code>/2</code>更多，但是<code>2</code>执行一次就已经是<code>1</code>了，因此要选择<code>3-1</code>。</p>\\n","content":"<p>给定一个正整数 <code>n</code> ，你可以做如下操作：</p>\\n\\n<ol>\\n\\t<li>如果 <code>n</code><em> </em>是偶数，则用 <code>n / 2</code>替换 <code>n</code><em> </em>。</li>\\n\\t<li>如果 <code>n</code><em> </em>是奇数，则可以用 <code>n + 1</code>或<code>n - 1</code>替换 <code>n</code> 。</li>\\n</ol>\\n\\n<p><code>n</code><em> </em>变为 <code>1</code> 所需的最小替换次数是多少？</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 8\\n<strong>输出：</strong>3\\n<strong>解释：</strong>8 -> 4 -> 2 -> 1\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 7\\n<strong>输出：</strong>4\\n<strong>解释：</strong>7 -> 8 -> 4 -> 2 -> 1\\n或 7 -> 6 -> 3 -> 2 -> 1\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 4\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n <= 2<sup>31</sup> - 1</code></li>\\n</ul>\\n","title":"397. 整数替换","relatedTags":["位运算","记忆化搜索","动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"397","slug":"397-Integer-Replacement"}')}}]);