(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{612:function(n){n.exports=JSON.parse('{"content":"<p>题目位置：<a href=\\"https://leetcode.com/problems/nth-magical-number/description/\\">https://leetcode.com/problems/nth-magical-number/description/</a></p>\\n<h5 id=\\"ti-mu\\">题目</h5>\\n<p>如果正整数 可被A  或B整除，则它是神奇的。</p>\\n<p>返回第N个魔法数字。由于答案可能非常大，因此返回值需要模(%)10^9 + 7。</p>\\n<p>例1：</p>\\n<pre><code><pre class=\\"hljs\\"><code>输入： N = 1，A = 2，B = 3\\n输出：2</code></pre></code></pre><p>例2：</p>\\n<pre><code><pre class=\\"hljs\\"><code>输入： N = 4，A = 2，B = 3\\n输出：6</code></pre></code></pre><p>例3：</p>\\n<pre><code><pre class=\\"hljs\\"><code>输入： N = 5，A = 2，B = 4\\n输出：10</code></pre></code></pre><p>例4：</p>\\n<pre><code><pre class=\\"hljs\\"><code>输入： N = 3，A = 6，B = 4\\n输出：8</code></pre></code></pre><hr>\\n<h5 id=\\"yao-dian-；\\">要点；</h5>\\n<ol>\\n<li><p>如果知道在N次内，a出现的次数i，b出现的次数j，那么就可以通过Math.max(a<em>i,b</em>j)求出结果</p>\\n<pre><code><pre class=\\"hljs\\"><code> 例如: N为5, a为3, b为4\\n 如果我们知道a出现了3次，b出现了2次，那么就可算出 9</code></pre></code></pre></li>\\n<li><p>N是由a出现的次数i，b出现的次数j，和他们最小公倍数出现的次数k计算而得(N=i+j-k)</p>\\n<pre><code><pre class=\\"hljs\\"><code> 例如 N为5, a为2, b为3\\n a出现4次，b出现2次，最小公倍数出现1次，那么N=4+2-1</code></pre></code></pre></li>\\n<li><p>假设某个数x，a出现的次数是Math.floor(x/a)，b出现的次数是Math.floor(x/b)，最小公倍数出现的次数是Math.floor(x/lcm)，因此我们要找出这个数，使得i+j-k===N</p>\\n</li>\\n</ol>\\n<hr>\\n<h5 id=\\"zui-da-gong-yue-shu--lowest-common-multiple\\">最大公约数 Lowest Common Multiple</h5>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">GCD</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">while</span>(a % b!==<span class=\\"hljs-number\\">0</span>){\\n        <span class=\\"hljs-keyword\\">let</span> temp=a\\n        a=b;\\n        b=temp % b\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> b\\n}</code></pre></code></pre>\\n<h5 id=\\"zui-xiao-gong-bei-shu--greatest-common-divisor\\">最小公倍数 greatest common divisor</h5>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">LCM</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">return</span> a*b/GCD(a,b)\\n}</code></pre></code></pre>\\n<hr>\\n<h5 id=\\"wan-zheng-dai-ma\\">完整代码</h5>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">B</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> nthMagicalNumber = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N, A, B</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> lo=<span class=\\"hljs-number\\">0</span>,hi=<span class=\\"hljs-built_in\\">Number</span>.MAX_SAFE_INTEGER,m=<span class=\\"hljs-number\\">0</span>;\\n    <span class=\\"hljs-keyword\\">let</span> aCount,bCount;\\n    <span class=\\"hljs-keyword\\">while</span>(lo&lt;hi){\\n        <span class=\\"hljs-keyword\\">let</span> mid=<span class=\\"hljs-built_in\\">Math</span>.floor((lo+hi)/<span class=\\"hljs-number\\">2</span>);\\n        aCount=<span class=\\"hljs-built_in\\">Math</span>.floor(mid/A);\\n        bCount=<span class=\\"hljs-built_in\\">Math</span>.floor(mid/B);\\n        <span class=\\"hljs-keyword\\">let</span> LCMCount=<span class=\\"hljs-built_in\\">Math</span>.floor(mid/LCM(A,B));\\n        m=aCount+bCount-LCMCount;\\n        <span class=\\"hljs-keyword\\">if</span>(m===N)<span class=\\"hljs-keyword\\">break</span>;\\n        <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(m&gt;N)hi=mid;\\n        <span class=\\"hljs-keyword\\">else</span> lo=mid+<span class=\\"hljs-number\\">1</span>;\\n    }\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">GCD</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n        <span class=\\"hljs-keyword\\">while</span>(a % b!==<span class=\\"hljs-number\\">0</span>){\\n            <span class=\\"hljs-keyword\\">let</span> temp=a;\\n            a=b;\\n            b=temp % b\\n        }\\n        <span class=\\"hljs-keyword\\">return</span> b\\n    }\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">LCM</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n        <span class=\\"hljs-keyword\\">return</span> a*b/GCD(a,b)\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-built_in\\">Math</span>.max(A*aCount,B*bCount) % <span class=\\"hljs-number\\">1000000007</span>\\n};</code></pre></code></pre>\\n","toc":[{"anchor":"ti-mu","level":5,"text":"题目"},{"anchor":"yao-dian-；","level":5,"text":"要点；"},{"anchor":"zui-da-gong-yue-shu--lowest-common-multiple","level":5,"text":"最大公约数 Lowest Common Multiple"},{"anchor":"zui-xiao-gong-bei-shu--greatest-common-divisor","level":5,"text":"最小公倍数 greatest common divisor"},{"anchor":"wan-zheng-dai-ma","level":5,"text":"完整代码"}],"relatedTags":null,"created_at":"2018-07-29","timeArr":[2018,6,29,0,0,0,0],"title":"记一道二分查找算法题","uuid":"00c5d9ed2847e38150e59f8030c9eff752b313f7","summary":"<p>题目位置：https://leetcode.com/problems/nth-magical-number/description/</p>\\n<h5>题目：</h5>\\n<p>如果正整数 可被A  或B整除，则它是神奇的。</p>\\n<p>返回第N个魔法数字。由于答案可能非常大，因此返回值需要模(%)10^9 + 7。</p>\\n<p>例1：</p>\\n<pre class=\\"hljs\\"><code>输入： N ...</code></pre>","slug":"ji-yi-dao-er-fen-cha-zhao-suan-fa-ti","sha":"dfdf8e089072d006549cc430c7b7973cc851fcbb"}')}}]);