(window.webpackJsonp=window.webpackJsonp||[]).push([[418],{1216:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for a binary tree node.\\n * function TreeNode(val) {\\n *     this.val = val;\\n *     this.left = this.right = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">root</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">target</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{TreeNode}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> removeLeafNodes = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">root, target</span>) </span>{\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">root</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(!root)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">null</span>\\n    <span class=\\"hljs-keyword\\">let</span> val=root.val\\n    <span class=\\"hljs-keyword\\">if</span>(root.left){\\n      root.left=dfs(root.left)\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(root.right){\\n      root.right=dfs(root.right)\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(!root.left &amp;&amp; !root.right &amp;&amp; val===target){\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">null</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> root\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> dfs(root,<span class=\\"hljs-literal\\">null</span>,<span class=\\"hljs-literal\\">null</span>)\\n};\\n</code></pre>\\n"],"querySlug":"delete-leaves-with-a-given-value","created_at":"2020-01-19","timeArr":[2020,0,19,10,45,43,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p><code>DFS</code>后序遍历，检查是否叶子节点和<code>val</code>是否为<code>target</code>。</p>\\n","content":"<p>给你一棵以&nbsp;<code>root</code>&nbsp;为根的二叉树和一个整数&nbsp;<code>target</code>&nbsp;，请你删除所有值为&nbsp;<code>target</code> 的&nbsp;<strong>叶子节点</strong> 。</p>\\n\\n<p>注意，一旦删除值为&nbsp;<code>target</code>&nbsp;的叶子节点，它的父节点就可能变成叶子节点；如果新叶子节点的值恰好也是&nbsp;<code>target</code> ，那么这个节点也应该被删除。</p>\\n\\n<p>也就是说，你需要重复此过程直到不能继续删除。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><strong><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/16/sample_1_1684.png\\" style=\\"height: 120px; width: 550px;\\"></strong></p>\\n\\n<pre><strong>输入：</strong>root = [1,2,3,2,null,2,4], target = 2\\n<strong>输出：</strong>[1,null,3,null,4]\\n<strong>解释：\\n</strong>上面左边的图中，绿色节点为叶子节点，且它们的值与 target 相同（同为 2 ），它们会被删除，得到中间的图。\\n有一个新的节点变成了叶子节点且它的值与 target 相同，所以将再次进行删除，从而得到最右边的图。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<p><strong><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/16/sample_2_1684.png\\" style=\\"height: 120px; width: 300px;\\"></strong></p>\\n\\n<pre><strong>输入：</strong>root = [1,3,3,3,2], target = 3\\n<strong>输出：</strong>[1,3,null,null,2]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<p><strong><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/16/sample_3_1684.png\\" style=\\"width: 450px;\\"></strong></p>\\n\\n<pre><strong>输入：</strong>root = [1,2,null,2,null,2], target = 2\\n<strong>输出：</strong>[1]\\n<strong>解释：</strong>每一步都删除一个绿色的叶子节点（值为 2）。</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>root = [1,1,1], target = 1\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>root = [1,2,3], target = 1\\n<strong>输出：</strong>[1,2,3]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= target&nbsp;&lt;= 1000</code></li>\\n\\t<li>每一棵树最多有 <code>3000</code> 个节点。</li>\\n\\t<li>每一个节点值的范围是&nbsp;<code>[1, 1000]</code>&nbsp;。</li>\\n</ul>\\n","title":"1325. 删除给定值的叶子节点","relatedTags":["树","深度优先搜索","广度优先搜索","哈希表","二叉树"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1325","slug":"1325-Delete-Leaves-With-a-Given-Value"}')}}]);