(window.webpackJsonp=window.webpackJsonp||[]).push([[1328],{2126:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">cells</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> prisonAfterNDays = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">cells, N</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> realTimes=N % <span class=\\"hljs-number\\">14</span> ||<span class=\\"hljs-number\\">14</span>\\n  <span class=\\"hljs-keyword\\">let</span> aux=[]\\n  <span class=\\"hljs-keyword\\">let</span> del=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">while</span>(realTimes--&gt;<span class=\\"hljs-number\\">0</span>){\\n    del++\\n    aux=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;cells.length<span class=\\"hljs-number\\">-1</span>;i++){\\n      <span class=\\"hljs-keyword\\">let</span> prev=cells[i<span class=\\"hljs-number\\">-1</span>]\\n      <span class=\\"hljs-keyword\\">let</span> next=cells[i+<span class=\\"hljs-number\\">1</span>]\\n      <span class=\\"hljs-keyword\\">if</span>(prev===next)aux[i]=<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">else</span> aux[i]=<span class=\\"hljs-number\\">0</span>\\n    }    \\n    aux[<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-number\\">0</span>\\n    aux[aux.length]=<span class=\\"hljs-number\\">0</span>\\n    cells=aux\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> aux\\n};\\n</code></pre>\\n"],"querySlug":"prison-cells-after-n-days","created_at":"2019-04-08","timeArr":[2019,3,8,9,40,1,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>首先建立每天变化的函数，接着可以通过输出大量天数，发现它的规律，它每隔14天就会重复一遍。因此不管给的<code>N</code>多大，\\n实际交换次数为<code>N % 14</code></p>\\n","content":"<p>8 间牢房排成一排，每间牢房不是有人住就是空着。</p>\\n\\n<p>每天，无论牢房是被占用或空置，都会根据以下规则进行更改：</p>\\n\\n<ul>\\n\\t<li>如果一间牢房的两个相邻的房间都被占用或都是空的，那么该牢房就会被占用。</li>\\n\\t<li>否则，它就会被空置。</li>\\n</ul>\\n\\n<p>（请注意，由于监狱中的牢房排成一行，所以行中的第一个和最后一个房间无法有两个相邻的房间。）</p>\\n\\n<p>我们用以下方式描述监狱的当前状态：如果第 <code>i</code> 间牢房被占用，则 <code>cell[i]==1</code>，否则 <code>cell[i]==0</code>。</p>\\n\\n<p>根据监狱的初始状态，在 <code>N</code> 天后返回监狱的状况（和上述 N 种变化）。</p>\\n\\n<p>&nbsp;</p>\\n\\n<ol>\\n</ol>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>cells = [0,1,0,1,1,0,0,1], N = 7\\n<strong>输出：</strong>[0,0,1,1,0,0,0,0]\\n<strong>解释：\\n</strong>下表概述了监狱每天的状况：\\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]\\n\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>cells = [1,0,0,1,0,0,1,0], N = 1000000000\\n<strong>输出：</strong>[0,0,1,1,1,1,1,0]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>cells.length == 8</code></li>\\n\\t<li><code>cells[i]</code>&nbsp;的值为 <code>0</code> 或 <code>1</code>&nbsp;</li>\\n\\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\\n</ol>\\n","title":"957. N 天后的牢房","relatedTags":["位运算","数组","哈希表","数学"],"difficult":"Middle","lang":["javascript"],"uniqueID":"957","slug":"957-Prison-Cells-After-N-Days"}')}}]);