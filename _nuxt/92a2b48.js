(window.webpackJsonp=window.webpackJsonp||[]).push([[596],{1394:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">numerator</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">denominator</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> fractionToDecimal = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">numerator, denominator</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(numerator===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'0\'</span>\\n  <span class=\\"hljs-keyword\\">let</span> symbol=<span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-keyword\\">if</span>(numerator*denominator&lt;<span class=\\"hljs-number\\">0</span>)symbol=<span class=\\"hljs-string\\">\'-\'</span>\\n  numerator=<span class=\\"hljs-built_in\\">Math</span>.abs(numerator)\\n  denominator=<span class=\\"hljs-built_in\\">Math</span>.abs(denominator)\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'\'</span>, hash={}\\n  <span class=\\"hljs-keyword\\">return</span> symbol+divid(numerator,denominator,<span class=\\"hljs-literal\\">false</span>)\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">divid</span>(<span class=\\"hljs-params\\">numer,denom,decimal</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> x=numer,y=denom,isdecimal=decimal\\n    <span class=\\"hljs-keyword\\">if</span>(isdecimal)x*=<span class=\\"hljs-number\\">10</span>\\n    <span class=\\"hljs-keyword\\">while</span>(x&lt;y){\\n      <span class=\\"hljs-keyword\\">if</span>(res===<span class=\\"hljs-string\\">\'\'</span>)res+=<span class=\\"hljs-string\\">\'0.\'</span>\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(isdecimal)res+=<span class=\\"hljs-string\\">\'0\'</span>\\n      <span class=\\"hljs-keyword\\">else</span> res+=<span class=\\"hljs-string\\">\'.\'</span>\\n      isdecimal=<span class=\\"hljs-literal\\">true</span>\\n      hash[x]=res.length\\n      x*=<span class=\\"hljs-number\\">10</span>\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> nxt=x % y\\n    res+=<span class=\\"hljs-built_in\\">Math</span>.floor(x/y)\\n    <span class=\\"hljs-keyword\\">if</span>(isdecimal){\\n      <span class=\\"hljs-keyword\\">if</span>(hash[nxt]!=<span class=\\"hljs-literal\\">null</span>){\\n        <span class=\\"hljs-keyword\\">let</span> id=hash[nxt]\\n        res=res.substring(<span class=\\"hljs-number\\">0</span>,id)+<span class=\\"hljs-string\\">\'(\'</span>+res.substring(id)+<span class=\\"hljs-string\\">\')\'</span>\\n        <span class=\\"hljs-keyword\\">return</span> res\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        hash[nxt]=res.length\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(nxt===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> res\\n    <span class=\\"hljs-keyword\\">return</span> divid(nxt,y,isdecimal)\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"fraction-to-recurring-decimal","created_at":"2019-03-29","timeArr":[2019,2,29,15,8,47,0],"hasThinking":false,"content":"<p>给定两个整数，分别表示分数的分子 <code>numerator</code> 和分母 <code>denominator</code>，以 <strong>字符串形式返回小数</strong> 。</p>\\n\\n<p>如果小数部分为循环小数，则将循环的部分括在括号内。</p>\\n\\n<p class=\\"MachineTrans-lang-zh-CN\\">如果存在多个答案，只需返回 <strong>任意一个</strong> 。</p>\\n\\n<p class=\\"MachineTrans-lang-zh-CN\\">对于所有给定的输入，<strong>保证</strong> 答案字符串的长度小于 <code>10<sup>4</sup></code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numerator = 1, denominator = 2\\n<strong>输出：</strong>\\"0.5\\"\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numerator = 2, denominator = 1\\n<strong>输出：</strong>\\"2\\"\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numerator = 2, denominator = 3\\n<strong>输出：</strong>\\"0.(6)\\"\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numerator = 4, denominator = 333\\n<strong>输出：</strong>\\"0.(012)\\"\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numerator = 1, denominator = 5\\n<strong>输出：</strong>\\"0.2\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>-2<sup>31</sup> <= numerator, denominator <= 2<sup>31</sup> - 1</code></li>\\n\\t<li><code>denominator != 0</code></li>\\n</ul>\\n","title":"166. 分数到小数","relatedTags":["哈希表","数学","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"166","slug":"166-Fraction-to-Recurring-Decimal"}')}}]);