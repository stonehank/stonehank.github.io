(window.webpackJsonp=window.webpackJsonp||[]).push([[1311],{2109:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> validMountainArray = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> top=<span class=\\"hljs-literal\\">false</span>,down=<span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">if</span>(A.length&lt;<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;A.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(A[i]&lt;A[i<span class=\\"hljs-number\\">-1</span>]){\\n      <span class=\\"hljs-keyword\\">if</span>(top)down=<span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(A[i]&gt;A[i<span class=\\"hljs-number\\">-1</span>]){\\n      <span class=\\"hljs-keyword\\">if</span>(down)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      top=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> top &amp;&amp; down\\n};\\n</code></pre>\\n"],"querySlug":"valid-mountain-array","created_at":"2019-03-17","timeArr":[2019,2,17,13,57,50,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>题目要求这个数组为一个山脉数组，定义山峰<code>top</code>，山谷<code>down</code></p>\\n<p>遍历数组</p>\\n<p>如果<code>A[i]===A[i-1]</code>直接返回<code>false</code></p>\\n<p>如果<code>A[i]&gt;A[i-1]</code>说明是一个上坡，如果已经存在山谷，则返回<code>false</code>，否则设置山峰为<code>true</code></p>\\n<p>如果<code>A[i]&lt;A[i-1]</code>说明是一个下坡，如果不存在山峰，则返回<code>false</code>，否则设置山谷为<code>true</code></p>\\n","content":"<p>给定一个整数数组 <code>arr</code>，如果它是有效的山脉数组就返回 <code>true</code>，否则返回 <code>false</code>。</p>\\n\\n<p>让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组：</p>\\n\\n<ul>\\n\\t<li><code>arr.length >= 3</code></li>\\n\\t<li>在 <code>0 < i < arr.length - 1</code> 条件下，存在 <code>i</code> 使得：\\n\\t<ul>\\n\\t\\t<li><code>arr[0] < arr[1] < ... arr[i-1] < arr[i] </code></li>\\n\\t\\t<li><code>arr[i] > arr[i+1] > ... > arr[arr.length - 1]</code></li>\\n\\t</ul>\\n\\t</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2019/10/20/hint_valid_mountain_array.png\\" style=\\"height: 316px; width: 500px;\\" /></p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [2,1]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [3,5,5]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,3,2,1]\\n<strong>输出：</strong>true</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= arr.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>0 <= arr[i] <= 10<sup>4</sup></code></li>\\n</ul>\\n","title":"941. 有效的山脉数组","relatedTags":["数组"],"difficult":"Easy","lang":["javascript"],"uniqueID":"941","slug":"941-Valid-Mountain-Array"}')}}]);