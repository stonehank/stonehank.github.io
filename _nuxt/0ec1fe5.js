(window.webpackJsonp=window.webpackJsonp||[]).push([[1015],{1813:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">minSteps</span><span class=\\"hljs-params\\">(self, n)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type n: int\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-comment\\"># dp=[float(\'inf\')]*(n+1)</span>\\n        <span class=\\"hljs-comment\\"># dp[0]=0</span>\\n        <span class=\\"hljs-comment\\"># dp[1]=0</span>\\n        <span class=\\"hljs-comment\\"># for i in range(2,n+1):</span>\\n        <span class=\\"hljs-comment\\">#   for j in range(1,i):</span>\\n        <span class=\\"hljs-comment\\">#     if i % j==0:</span>\\n        <span class=\\"hljs-comment\\">#       dp[i]=min(dp[i],dp[j]+i/j)</span>\\n        <span class=\\"hljs-comment\\"># return dp[-1]</span>\\n        \\n        \\n        <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">calc</span><span class=\\"hljs-params\\">(n)</span>:</span>\\n          <span class=\\"hljs-keyword\\">if</span> n==<span class=\\"hljs-number\\">1</span>:<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n          res=<span class=\\"hljs-number\\">0</span>\\n          i=<span class=\\"hljs-number\\">2</span>\\n          <span class=\\"hljs-keyword\\">while</span> n % i!=<span class=\\"hljs-number\\">0</span>:i+=<span class=\\"hljs-number\\">1</span>\\n          res+=i\\n          <span class=\\"hljs-keyword\\">return</span> res+calc(n/i)\\n\\n        <span class=\\"hljs-keyword\\">return</span> calc(n)\\n\\n</code></pre>\\n"],"querySlug":"2-keys-keyboard","created_at":"2019-03-06","timeArr":[2019,2,6,15,0,2,0],"hasThinking":false,"content":"<p>最初记事本上只有一个字符 <code>\'A\'</code> 。你每次可以对这个记事本进行两种操作：</p>\\n\\n<ul>\\n\\t<li><code>Copy All</code>（复制全部）：复制这个记事本中的所有字符（不允许仅复制部分字符）。</li>\\n\\t<li><code>Paste</code>（粘贴）：粘贴<strong> 上一次 </strong>复制的字符。</li>\\n</ul>\\n\\n<p>给你一个数字&nbsp;<code>n</code> ，你需要使用最少的操作次数，在记事本上输出 <strong>恰好</strong>&nbsp;<code>n</code>&nbsp;个 <code>\'A\'</code> 。返回能够打印出&nbsp;<code>n</code>&nbsp;个 <code>\'A\'</code> 的最少操作次数。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>3\\n<strong>输出：</strong>3\\n<strong>解释：</strong>\\n最初, 只有一个字符 \'A\'。\\n第 1 步, 使用 <strong>Copy All</strong> 操作。\\n第 2 步, 使用 <strong>Paste </strong>操作来获得 \'AA\'。\\n第 3 步, 使用 <strong>Paste</strong> 操作来获得 \'AAA\'。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 1\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= n &lt;= 1000</code></li>\\n</ul>\\n","title":"650. 只有两个键的键盘","relatedTags":["数学","动态规划"],"difficult":"Middle","lang":["python"],"uniqueID":"650","slug":"650-2-Keys-Keyboard"}')}}]);