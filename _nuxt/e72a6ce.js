(window.webpackJsonp=window.webpackJsonp||[]).push([[518],{1316:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">rains</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> avoidFlood = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">rains</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">let</span> gapIdx=[]\\n  <span class=\\"hljs-keyword\\">let</span> gapIdxHash={}\\n  <span class=\\"hljs-keyword\\">let</span> gap=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> repeat=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> count={}\\n  <span class=\\"hljs-keyword\\">let</span> k=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> headZero=<span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">let</span> continues=<span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">let</span> continuesHash={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;rains.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> r=rains[i]\\n    <span class=\\"hljs-keyword\\">if</span>(r&gt;<span class=\\"hljs-number\\">0</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(continuesHash[r])<span class=\\"hljs-keyword\\">return</span> []\\n      continuesHash[r]=<span class=\\"hljs-literal\\">true</span>\\n      headZero=<span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">if</span>(count[r]==<span class=\\"hljs-literal\\">null</span>){\\n        count[r]=i\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        <span class=\\"hljs-comment\\">// console.log(gapIdx,r,rains)</span>\\n        repeat++\\n        <span class=\\"hljs-keyword\\">let</span> nxtGap=<span class=\\"hljs-number\\">0</span>\\n        <span class=\\"hljs-keyword\\">let</span> idx=gapIdx[nxtGap]\\n        <span class=\\"hljs-keyword\\">while</span>(idx&lt;count[r]){\\n          nxtGap++\\n          idx=gapIdx[nxtGap]\\n        }\\n        gapIdx.splice(nxtGap,<span class=\\"hljs-number\\">1</span>)\\n        res[idx]=r  \\n      }      \\n      res[i]=<span class=\\"hljs-number\\">-1</span>\\n      continues=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      continues=<span class=\\"hljs-literal\\">false</span>\\n      continuesHash={}\\n      <span class=\\"hljs-keyword\\">if</span>(headZero){\\n        res[i]=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">continue</span>\\n      }\\n      gap++\\n      gapIdx.push(i)\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(repeat&gt;gap)<span class=\\"hljs-keyword\\">return</span> []\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;rains.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-keyword\\">typeof</span> res[i]===<span class=\\"hljs-string\\">\'undefined\'</span>){\\n      res[i]=<span class=\\"hljs-number\\">1</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n  \\n};\\n</code></pre>\\n"],"querySlug":"avoid-flood-in-the-city","created_at":"2020-06-21","timeArr":[2020,5,21,11,56,41,0],"hasThinking":false,"content":"<p>你的国家有无数个湖泊，所有湖泊一开始都是空的。当第 <code>n</code>&nbsp;个湖泊下雨的时候，如果第 <code>n</code>&nbsp;个湖泊是空的，那么它就会装满水，否则这个湖泊会发生洪水。你的目标是避免任意一个湖泊发生洪水。</p>\\n\\n<p>给你一个整数数组&nbsp;<code>rains</code>&nbsp;，其中：</p>\\n\\n<ul>\\n\\t<li><code>rains[i] &gt; 0</code>&nbsp;表示第 <code>i</code>&nbsp;天时，第 <code>rains[i]</code>&nbsp;个湖泊会下雨。</li>\\n\\t<li><code>rains[i] == 0</code>&nbsp;表示第 <code>i</code>&nbsp;天没有湖泊会下雨，你可以选择 <strong>一个</strong>&nbsp;湖泊并 <strong>抽干</strong>&nbsp;这个湖泊的水。</li>\\n</ul>\\n\\n<p>请返回一个数组<em>&nbsp;</em><code>ans</code>&nbsp;，满足：</p>\\n\\n<ul>\\n\\t<li><code>ans.length == rains.length</code></li>\\n\\t<li>如果&nbsp;<code>rains[i] &gt; 0</code> ，那么<code>ans[i] == -1</code>&nbsp;。</li>\\n\\t<li>如果&nbsp;<code>rains[i] == 0</code>&nbsp;，<code>ans[i]</code>&nbsp;是你第&nbsp;<code>i</code>&nbsp;天选择抽干的湖泊。</li>\\n</ul>\\n\\n<p>如果有多种可行解，请返回它们中的 <strong>任意一个</strong>&nbsp;。如果没办法阻止洪水，请返回一个 <strong>空的数组</strong>&nbsp;。</p>\\n\\n<p>请注意，如果你选择抽干一个装满水的湖泊，它会变成一个空的湖泊。但如果你选择抽干一个空的湖泊，那么将无事发生（详情请看示例 4）。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>rains = [1,2,3,4]\\n<strong>输出：</strong>[-1,-1,-1,-1]\\n<strong>解释：</strong>第一天后，装满水的湖泊包括 [1]\\n第二天后，装满水的湖泊包括 [1,2]\\n第三天后，装满水的湖泊包括 [1,2,3]\\n第四天后，装满水的湖泊包括 [1,2,3,4]\\n没有哪一天你可以抽干任何湖泊的水，也没有湖泊会发生洪水。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>rains = [1,2,0,0,2,1]\\n<strong>输出：</strong>[-1,-1,2,1,-1,-1]\\n<strong>解释：</strong>第一天后，装满水的湖泊包括 [1]\\n第二天后，装满水的湖泊包括 [1,2]\\n第三天后，我们抽干湖泊 2 。所以剩下装满水的湖泊包括 [1]\\n第四天后，我们抽干湖泊 1 。所以暂时没有装满水的湖泊了。\\n第五天后，装满水的湖泊包括 [2]。\\n第六天后，装满水的湖泊包括 [1,2]。\\n可以看出，这个方案下不会有洪水发生。同时， [-1,-1,1,2,-1,-1] 也是另一个可行的没有洪水的方案。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>rains = [1,2,0,1,2]\\n<strong>输出：</strong>[]\\n<strong>解释：</strong>第二天后，装满水的湖泊包括 [1,2]。我们可以在第三天抽干一个湖泊的水。\\n但第三天后，湖泊 1 和 2 都会再次下雨，所以不管我们第三天抽干哪个湖泊的水，另一个湖泊都会发生洪水。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>rains = [69,0,0,0,69]\\n<strong>输出：</strong>[-1,69,1,1,-1]\\n<strong>解释：</strong>任何形如 [-1,69,x,y,-1], [-1,x,69,y,-1] 或者 [-1,x,y,69,-1] 都是可行的解，其中 1 &lt;= x,y &lt;= 10^9\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>rains = [10,20,20]\\n<strong>输出：</strong>[]\\n<strong>解释：</strong>由于湖泊 20 会连续下 2 天的雨，所以没有没有办法阻止洪水。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= rains.length &lt;= 10^5</code></li>\\n\\t<li><code>0 &lt;= rains[i] &lt;= 10^9</code></li>\\n</ul>\\n","title":"1488. 避免洪水泛滥","relatedTags":["贪心","数组","哈希表","二分查找","堆（优先队列）"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1488","slug":"1488-Avoid-Flood-in-The-City"}')}}]);