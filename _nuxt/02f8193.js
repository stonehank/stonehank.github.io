(window.webpackJsonp=window.webpackJsonp||[]).push([[1194],{1992:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">rec1</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">rec2</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isRectangleOverlap = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">rec1, rec2</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> ox1=<span class=\\"hljs-built_in\\">Math</span>.max(rec1[<span class=\\"hljs-number\\">0</span>],rec2[<span class=\\"hljs-number\\">0</span>]),\\n      oy1=<span class=\\"hljs-built_in\\">Math</span>.max(rec1[<span class=\\"hljs-number\\">1</span>],rec2[<span class=\\"hljs-number\\">1</span>]),\\n      ox2=<span class=\\"hljs-built_in\\">Math</span>.min(rec1[<span class=\\"hljs-number\\">2</span>],rec2[<span class=\\"hljs-number\\">2</span>]),\\n      oy2=<span class=\\"hljs-built_in\\">Math</span>.min(rec1[<span class=\\"hljs-number\\">3</span>],rec2[<span class=\\"hljs-number\\">3</span>])\\n  <span class=\\"hljs-comment\\">// console.log(ox1,ox2,oy1,oy2)</span>\\n  <span class=\\"hljs-keyword\\">if</span>(ox1&gt;=ox2 || oy1&gt;=oy2)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n};\\n</code></pre>\\n"],"querySlug":"rectangle-overlap","created_at":"2019-04-02","timeArr":[2019,3,2,22,27,41,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>先算出这两个矩形有可能存在的交叉点，然后再判断这个交叉点是否有效的交叉点。</p>\\n","content":"<p>矩形以列表 <code>[x1, y1, x2, y2]</code> 的形式表示，其中 <code>(x1, y1)</code> 为左下角的坐标，<code>(x2, y2)</code> 是右上角的坐标。矩形的上下边平行于 x 轴，左右边平行于 y 轴。</p>\\n\\n<p>如果相交的面积为 <strong>正</strong> ，则称两矩形重叠。需要明确的是，只在角或边接触的两个矩形不构成重叠。</p>\\n\\n<p>给出两个矩形 <code>rec1</code> 和 <code>rec2</code> 。如果它们重叠，返回 <code>true</code>；否则，返回 <code>false</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>rec1 = [0,0,2,2], rec2 = [1,1,3,3]\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>rec1 = [0,0,1,1], rec2 = [1,0,2,1]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>rec1 = [0,0,1,1], rec2 = [2,2,3,3]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>rect1.length == 4</code></li>\\n\\t<li><code>rect2.length == 4</code></li>\\n\\t<li><code>-10<sup>9</sup> <= rec1[i], rec2[i] <= 10<sup>9</sup></code></li>\\n\\t<li><code>rec1[0] <= rec1[2]</code> 且 <code>rec1[1] <= rec1[3]</code></li>\\n\\t<li><code>rec2[0] <= rec2[2]</code> 且 <code>rec2[1] <= rec2[3]</code></li>\\n</ul>\\n","title":"836. 矩形重叠","relatedTags":["几何","数学"],"difficult":"Easy","lang":["javascript"],"uniqueID":"836","slug":"836-Rectangle-Overlap"}')}}]);