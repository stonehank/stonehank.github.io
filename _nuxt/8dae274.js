(window.webpackJsonp=window.webpackJsonp||[]).push([[1233],{2031:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">target</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">startFuel</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">stations</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minRefuelStops = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">target, startFuel, stations</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> dp=<span class=\\"hljs-built_in\\">Array</span>(stations.length+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">0</span>)\\n  dp[<span class=\\"hljs-number\\">0</span>]=startFuel\\n  \\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;stations.length;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=i;j&gt;=<span class=\\"hljs-number\\">0</span>;j--){\\n      <span class=\\"hljs-keyword\\">if</span>(dp[j]&lt;stations[i][<span class=\\"hljs-number\\">0</span>])<span class=\\"hljs-keyword\\">break</span>\\n      dp[j+<span class=\\"hljs-number\\">1</span>]=<span class=\\"hljs-built_in\\">Math</span>.max(dp[j+<span class=\\"hljs-number\\">1</span>],dp[j]+stations[i][<span class=\\"hljs-number\\">1</span>])\\n    }\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(dp)</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;dp.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(dp[i]&gt;=target)<span class=\\"hljs-keyword\\">return</span> i\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n};\\n</code></pre>\\n"],"querySlug":"minimum-number-of-refueling-stops","created_at":"2019-03-09","timeArr":[2019,2,9,12,1,6,0],"hasThinking":false,"content":"<p>汽车从起点出发驶向目的地，该目的地位于出发位置东面 <code>target</code>&nbsp;英里处。</p>\\n\\n<p>沿途有加油站，每个&nbsp;<code>station[i]</code>&nbsp;代表一个加油站，它位于出发位置东面&nbsp;<code>station[i][0]</code>&nbsp;英里处，并且有&nbsp;<code>station[i][1]</code>&nbsp;升汽油。</p>\\n\\n<p>假设汽车油箱的容量是无限的，其中最初有&nbsp;<code>startFuel</code>&nbsp;升燃料。它每行驶 1 英里就会用掉 1 升汽油。</p>\\n\\n<p>当汽车到达加油站时，它可能停下来加油，将所有汽油从加油站转移到汽车中。</p>\\n\\n<p>为了到达目的地，汽车所必要的最低加油次数是多少？如果无法到达目的地，则返回 <code>-1</code> 。</p>\\n\\n<p>注意：如果汽车到达加油站时剩余燃料为 0，它仍然可以在那里加油。如果汽车到达目的地时剩余燃料为 0，仍然认为它已经到达目的地。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>target = 1, startFuel = 1, stations = []\\n<strong>输出：</strong>0\\n<strong>解释：</strong>我们可以在不加油的情况下到达目的地。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>target = 100, startFuel = 1, stations = [[10,100]]\\n<strong>输出：</strong>-1\\n<strong>解释：</strong>我们无法抵达目的地，甚至无法到达第一个加油站。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>target = 100, startFuel = 10, stations = [[10,60],[20,30],[30,30],[60,40]]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>\\n我们出发时有 10 升燃料。\\n我们开车来到距起点 10 英里处的加油站，消耗 10 升燃料。将汽油从 0 升加到 60 升。\\n然后，我们从 10 英里处的加油站开到 60 英里处的加油站（消耗 50 升燃料），\\n并将汽油从 10 升加到 50 升。然后我们开车抵达目的地。\\n我们沿途在1两个加油站停靠，所以返回 2 。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= target, startFuel, stations[i][1] &lt;= 10^9</code></li>\\n\\t<li><code>0 &lt;= stations.length &lt;= 500</code></li>\\n\\t<li><code>0 &lt; stations[0][0] &lt; stations[1][0] &lt; ... &lt; stations[stations.length-1][0] &lt; target</code></li>\\n</ol>\\n","title":"871. 最低加油次数","relatedTags":["贪心","数组","动态规划","堆（优先队列）"],"difficult":"Hard","lang":["javascript"],"uniqueID":"871","slug":"871-Minimum-Number-of-Refueling-Stops"}')}}]);