(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{560:function(e){e.exports=JSON.parse('{"content":"<ul>\\n<li>给表添加别名(M是movies的别名,T是title的输出名)</li>\\n</ul>\\n<p><code>SELECT title as T  FROM movies M;</code></p>\\n<ul>\\n<li>添加row</li>\\n</ul>\\n<p><code>INSERT  INTO library VALUES (1,&#39;javascript&#39;,8);</code></p>\\n<ul>\\n<li>条件排序order by</li>\\n</ul>\\n<p><code>SELECT *  FROM movies WHERE release_year&gt;1999 ORDER BY  release_year;</code></p>\\n<ul>\\n<li>SUM</li>\\n</ul>\\n<p><code>SELECT SUM(minutes) FROM todo_list;</code></p>\\n<ul>\\n<li>嵌套in</li>\\n</ul>\\n<p><code>SELECT title FROM songs WHERE artist IN (\\n    SELECT name FROM artists WHERE genre=&quot;Pop&quot;);</code></p>\\n<ul>\\n<li>like<pre><code><pre class=\\"hljs\\"><code>SELECT * FROM exercise_logs\\nWHERE type IN (\\n  SELECT type FROM drs_favorites \\n  WHERE reason LIKE &quot;%cardiovascular%&quot;\\n  );</code></pre></code></pre></li>\\n<li>多重条件选择case...when..then<pre><code><pre class=\\"hljs\\"><code>SELECT Count(*),\\n  CASE \\n      WHEN number_grade&gt;90 THEN &quot;A&quot;\\n      WHEN number_grade&gt;80 THEN &quot;B&quot;\\n      WHEN number_grade&gt;70 THEN &quot;C&quot;\\n      ELSE &quot;F&quot;\\n  END AS &quot;letter_grade&quot;\\n  FROM student_grades \\n  GROUP BY letter_grade;</code></pre></code></pre></li>\\n<li>as别名 group by...having<pre><code><pre class=\\"hljs\\"><code>SELECT author ,AVG(words) AS avg_words FROM books \\n  GROUP BY author\\n  HAVING avg_words &gt;150000;\\n</code></pre></code></pre></li>\\n</ul>\\n<pre><code><pre class=\\"hljs\\"><code>\\n* and且</code></pre></code></pre><p>SELECT persons.name,hobbies.name FROM persons\\nJOIN hobbies\\nWHERE persons.name=&#39;Bobby McBobbyFace&#39;\\nAND persons.id=hobbies.person_id;</p>\\n<pre><code><pre class=\\"hljs\\"><code>\\n* not in(A.id不存在于B.CustomerId中的数据)</code></pre></code></pre><p>SELECT Name from Customers A\\nWHERE A.Id NOT IN (SELECT B.CustomerId from Orders B)</p>\\n<pre><code><pre class=\\"hljs\\"><code>\\n* not exist</code></pre></code></pre><p>SELECT A.Name from Customers A\\nWHERE NOT EXISTS (SELECT 1 FROM Orders B WHERE A.Id = B.CustomerId)</p>\\n<pre><code><pre class=\\"hljs\\"><code>\\n* left out join...on合并表并且左边全部合并显示</code></pre></code></pre><p>SELECT customers.name, customers.email, SUM(orders.price) AS total_price\\nFROM customers \\nLEFT OUTER JOIN orders\\nON orders.customer_id=customers.id\\nGROUP BY customers.id\\nORDER BY total_price desc;</p>\\n<pre><code><pre class=\\"hljs\\"><code>* 合并当前表 left outer join xxx 别名</code></pre></code></pre><p>/* join itself */\\nSELECT movies.title, sequel.title AS sequel_title\\nFROM movies\\nLEFT OUTER JOIN movies sequel\\nON movies.sequel_id=sequel.id;</p>\\n<pre><code><pre class=\\"hljs\\"><code>* 多重合并</code></pre></code></pre><p>/* multiple joins*/\\nSELECT a.fullname, b.fullname FROM friends\\nJOIN persons a\\nON a.id=friends.person1_id\\nJOIN persons b\\nON b.id=friends.person2_id;</p>\\n<pre><code><pre class=\\"hljs\\"><code>* 更新内容update</code></pre></code></pre><p>UPDATE documents SET author=&#39;Jackie Draper&#39;\\nWHERE author=&#39;Jackie Paper&#39;;</p>\\n<pre><code><pre class=\\"hljs\\"><code>* 删除内容\\n\\n`DELETE FROM documents WHERE title=&quot;Things I\'m Afraid Of&quot;;`\\n\\n* 增加表的列，改变表结构\\n\\n`ALTER TABLE clothes ADD COLUMN price INTEGER;`\\n\\n* 变更表名\\n\\n`ALTER TABLE travel_spots RENAME TO places_to_live;`</code></pre></code></pre>","toc":[],"relatedTags":null,"created_at":"2018-09-04","timeArr":[2018,8,4,0,0,0,0],"title":"MYSQL常用命令记录","uuid":"b3f75a48780077e930c5409efefb6e27050a2057","summary":"<ul>\\n<li>给表添加别名(M是movies的别名,T是title的输出名)</li>\\n</ul>\\n<p><code>SELECT title as T  FROM movies M;</code></p>\\n<ul>\\n<li>添加row</li>\\n</ul>\\n<p><code>INSERT  INTO library VALUES (1,\'javascript\',8);</code></p>\\n<ul>\\n<li>条件排序order by</li>\\n</ul>\\n<p>`SELECT *  F...</p>","slug":"MYSQL-chang-yong-ming-ling-ji-lu","sha":"876bcd03410d0865b98212677e8ea1297deefb8a"}')}}]);