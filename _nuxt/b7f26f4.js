(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{615:function(n){n.exports=JSON.parse('{"content":"<h2 id=\\"js-kuan-song-bi-jiao-==-gui-fan\\">JS宽松比较(==)规范</h2>\\n<p>摘自《你不知道的javascript》</p>\\n<ol>\\n<li><p>字符串和数字之间的相等比较</p>\\n<blockquote>\\n<p>ES5 规范 11.9.3.4-5 这样定义：</p>\\n<ol>\\n<li>如果 Type(x) 是数字， Type(y) 是字符串，则返回 x == ToNumber(y)\\n的结果。</li>\\n<li>如果 Type(x) 是字符串， Type(y) 是数字，则返回 ToNumber(x) == y\\n的结果。</li>\\n</ol>\\n</blockquote>\\n<p> 例如：<code>&quot;&quot; == 0; // true</code></p>\\n</li>\\n<li><p>其他类型和布尔类型之间的相等比较</p>\\n<blockquote>\\n<p>规范 11.9.3.6-7 是这样说的：</p>\\n<ol>\\n<li>如果 Type(x) 是布尔类型，则返回 ToNumber(x) == y 的结果；</li>\\n<li>如果 Type(y) 是布尔类型，则返回 x == ToNumber(y) 的结果。</li>\\n</ol>\\n</blockquote>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code>  [] === <span class=\\"hljs-literal\\">true</span>;    <span class=\\"hljs-comment\\">// false</span>\\n  [] == <span class=\\"hljs-literal\\">true</span>;     <span class=\\"hljs-comment\\">// false</span>\\n  !![];            <span class=\\"hljs-comment\\">// true</span>\\n  <span class=\\"hljs-string\\">\\"42\\"</span> == <span class=\\"hljs-literal\\">true</span>;   <span class=\\"hljs-comment\\">// false</span>\\n  <span class=\\"hljs-literal\\">false</span> == <span class=\\"hljs-string\\">\\"\\"</span>;    <span class=\\"hljs-comment\\">// true</span></code></pre></code></pre>\\n</li>\\n<li><p>null 和 undefined 之间的相等比较</p>\\n<blockquote>\\n<p>ES5 规范 11.9.3.2-3 规定：</p>\\n<ol>\\n<li>如果 x 为 null ， y 为 undefined ，则结果为 true 。</li>\\n<li>如果 x 为 undefined ， y 为 null ，则结果为 true 。</li>\\n</ol>\\n</blockquote>\\n</li>\\n<li><p>对象和非对象之间的相等比较</p>\\n<blockquote>\\n<p>ES5 规范 11.9.3.8-9 做如下规定：</p>\\n<ol>\\n<li>如果 Type(x) 是字符串或数字， Type(y) 是对象，则返回 x == ToPrimitive(y)\\n的结果；</li>\\n<li>如果 Type(x) 是对象， Type(y) 是字符串或数字，则返回 ToPromitive(x) == y\\n的结果。</li>\\n</ol>\\n</blockquote>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code> [<span class=\\"hljs-number\\">42</span>] == <span class=\\"hljs-number\\">42</span>;  <span class=\\"hljs-comment\\">// true</span>\\n [] == <span class=\\"hljs-string\\">\\"\\"</span>;    <span class=\\"hljs-comment\\">// true</span></code></pre></code></pre>\\n<p> <code>ToPromitive</code>：尝试转换为原始值</p>\\n<p> 比较规则：先使用<code>valueOf</code>，如果不是原始值，则使用<code>toString</code>，如果还不是，则抛出错误。</p>\\n</li>\\n</ol>\\n","toc":[{"anchor":"js-kuan-song-bi-jiao-==-gui-fan","level":2,"text":"JS宽松比较(==)规范"}],"relatedTags":null,"created_at":"2018-07-10","timeArr":[2018,6,10,0,0,0,0],"title":"js宽松比较规范","uuid":"a0f124d6d5ccb06205fe4c0fcfcff8dd9fb16d44","summary":"<p>ES5 规范 11.9.3.4-5 这样定义：</p>\\n<ol>\\n<li>如果 Type(x) 是数字， Type(y) 是字符串，则返回 x == ToNumber(y)\\n的结果。</li>\\n<li>如果 Type(x) 是字符串， Type(y) 是数字，则返回 ToNumber(x) == y\\n的结果。</li>\\n</ol>","slug":"js-kuan-song-bi-jiao-gui-fan","sha":"df2e9c8633809f2f352ba06bdcde43a83ec1b3b4"}')}}]);