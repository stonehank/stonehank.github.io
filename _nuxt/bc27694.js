(window.webpackJsonp=window.webpackJsonp||[]).push([[658],{1456:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for singly-linked list.\\n * function ListNode(val) {\\n *     this.val = val;\\n *     this.next = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{ListNode}</span> <span class=\\"hljs-variable\\">head</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">val</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{ListNode}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> removeElements = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">head, val</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(!head)<span class=\\"hljs-keyword\\">return</span> head\\n  <span class=\\"hljs-keyword\\">while</span>(head &amp;&amp; head.val===val)head=head.next\\n  <span class=\\"hljs-keyword\\">let</span> node=head\\n  <span class=\\"hljs-keyword\\">while</span>(node &amp;&amp; node.next){\\n    <span class=\\"hljs-keyword\\">let</span> curV=node.next.val\\n    <span class=\\"hljs-keyword\\">if</span>(curV===val){\\n      node.next=node.next.next\\n    }<span class=\\"hljs-keyword\\">else</span> node=node.next\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> head\\n};\\n</code></pre>\\n"],"querySlug":"remove-linked-list-elements","created_at":"2019-04-20","timeArr":[2019,3,20,14,35,2,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>只需要时刻跟踪当前<code>node</code>和当前<code>node</code>的上一个节点<code>lastNode</code>。</p>\\n<p>遇到<code>node.val===val</code>，那么就改变<code>lastNode.next</code>为<code>node.next</code>。</p>\\n","content":"给你一个链表的头节点 <code>head</code> 和一个整数 <code>val</code> ，请你删除链表中所有满足 <code>Node.val == val</code> 的节点，并返回 <strong>新的头节点</strong> 。\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg\\" style=\\"width: 500px; height: 142px;\\" />\\n<pre>\\n<strong>输入：</strong>head = [1,2,6,3,4,5,6], val = 6\\n<strong>输出：</strong>[1,2,3,4,5]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>head = [], val = 1\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>head = [7,7,7,7], val = 7\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>列表中的节点数目在范围 <code>[0, 10<sup>4</sup>]</code> 内</li>\\n\\t<li><code>1 <= Node.val <= 50</code></li>\\n\\t<li><code>0 <= val <= 50</code></li>\\n</ul>\\n","title":"203. 移除链表元素","relatedTags":["递归","链表"],"difficult":"Easy","lang":["javascript"],"uniqueID":"203","slug":"203-Remove-Linked-List-Elements"}')}}]);