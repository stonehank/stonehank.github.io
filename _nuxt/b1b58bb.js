(window.webpackJsonp=window.webpackJsonp||[]).push([[771],{1569:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">intersect</span><span class=\\"hljs-params\\">(self, nums1, nums2)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums1: List[int]\\n        :type nums2: List[int]\\n        :rtype: List[int]\\n        \\"\\"\\"</span>\\n        mem={}\\n        result=[]\\n        <span class=\\"hljs-keyword\\">for</span> n <span class=\\"hljs-keyword\\">in</span> nums1:\\n          <span class=\\"hljs-keyword\\">if</span> mem.has_key(n):\\n            mem[n]+=<span class=\\"hljs-number\\">1</span>\\n          <span class=\\"hljs-keyword\\">else</span>:\\n            mem.setdefault(n,<span class=\\"hljs-number\\">1</span>)\\n        <span class=\\"hljs-keyword\\">for</span> m <span class=\\"hljs-keyword\\">in</span> nums2:\\n          <span class=\\"hljs-keyword\\">if</span> mem.get(m)&gt;<span class=\\"hljs-number\\">0</span>:\\n            mem[m]-=<span class=\\"hljs-number\\">1</span>\\n            result.append(m)\\n        <span class=\\"hljs-keyword\\">return</span> result\\n</code></pre>\\n"],"querySlug":"intersection-of-two-arrays-ii","created_at":"2019-02-25","timeArr":[2019,1,25,11,27,7,0],"hasThinking":false,"content":"<p>给定两个数组，编写一个函数来计算它们的交集。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>nums1 = [1,2,2,1], nums2 = [2,2]\\n<strong>输出：</strong>[2,2]\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre><strong>输入：</strong>nums1 = [4,9,5], nums2 = [9,4,9,8,4]\\n<strong>输出：</strong>[4,9]</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>说明：</strong></p>\\n\\n<ul>\\n\\t<li>输出结果中每个元素出现的次数，应与元素在两个数组中出现次数的最小值一致。</li>\\n\\t<li>我们可以不考虑输出结果的顺序。</li>\\n</ul>\\n\\n<p><strong><strong>进阶</strong>：</strong></p>\\n\\n<ul>\\n\\t<li>如果给定的数组已经排好序呢？你将如何优化你的算法？</li>\\n\\t<li>如果&nbsp;<em>nums1&nbsp;</em>的大小比&nbsp;<em>nums2&nbsp;</em>小很多，哪种方法更优？</li>\\n\\t<li>如果&nbsp;<em>nums2&nbsp;</em>的元素存储在磁盘上，内存是有限的，并且你不能一次加载所有的元素到内存中，你该怎么办？</li>\\n</ul>\\n","title":"350. 两个数组的交集 II","relatedTags":["数组","哈希表","双指针","二分查找","排序"],"difficult":"Easy","lang":["python"],"uniqueID":"350","slug":"350-Intersection-of-Two-Arrays-II"}')}}]);