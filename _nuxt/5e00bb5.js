(window.webpackJsonp=window.webpackJsonp||[]).push([[974],{1772:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> generateMatrix = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> limit=n*n\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-built_in\\">Array</span>(n).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(n).fill(<span class=\\"hljs-literal\\">null</span>))\\n    <span class=\\"hljs-keyword\\">let</span> moves=[[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">-1</span>],[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">0</span>]]\\n    <span class=\\"hljs-keyword\\">let</span> len=n\\n    <span class=\\"hljs-keyword\\">let</span> start=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">r,c,moveIdx</span>)</span>{\\n        <span class=\\"hljs-keyword\\">let</span> [mr,mc]=moves[moveIdx]\\n        <span class=\\"hljs-keyword\\">let</span> curLen=len\\n        r+=mr\\n        c+=mc\\n        <span class=\\"hljs-keyword\\">while</span>(curLen&gt;<span class=\\"hljs-number\\">0</span>){\\n            curLen--\\n            res[r][c]=start++\\n            r+=mr\\n            c+=mc\\n        }\\n        r-=mr\\n        c-=mc\\n        <span class=\\"hljs-keyword\\">if</span>(moveIdx===<span class=\\"hljs-number\\">0</span> || moveIdx===<span class=\\"hljs-number\\">2</span>)len--\\n        <span class=\\"hljs-keyword\\">if</span>(len===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span>\\n        dfs(r,c,(moveIdx+<span class=\\"hljs-number\\">1</span>) % <span class=\\"hljs-number\\">4</span>)\\n    }\\n    dfs(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">0</span>)\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n\\n</code></pre>\\n"],"querySlug":"spiral-matrix-ii","created_at":"2021-03-16","timeArr":[2021,2,16,7,15,21,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>与<code>NO.54</code>差不多，一层一层地处理添加到<code>result</code>中。</p>\\n","content":"<p>给你一个正整数 <code>n</code> ，生成一个包含 <code>1</code> 到 <code>n<sup>2</sup></code> 所有元素，且元素按顺时针顺序螺旋排列的 <code>n x n</code> 正方形矩阵 <code>matrix</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n<img alt=\\"\\" src=\\"https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg\\" style=\\"width: 242px; height: 242px;\\" />\\n<pre>\\n<strong>输入：</strong>n = 3\\n<strong>输出：</strong>[[1,2,3],[8,9,4],[7,6,5]]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 1\\n<strong>输出：</strong>[[1]]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n <= 20</code></li>\\n</ul>\\n","title":"59. 螺旋矩阵 II","relatedTags":["数组","矩阵","模拟"],"difficult":"Middle","lang":["javascript"],"uniqueID":"59","slug":"59-Spiral-Matrix-II"}')}}]);