(window.webpackJsonp=window.webpackJsonp||[]).push([[380],{1178:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">steps</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">arrLen</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numWays = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">steps, arrLen</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">let</span> MOD=<span class=\\"hljs-number\\">1e9</span>+<span class=\\"hljs-number\\">7</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">resolve</span>(<span class=\\"hljs-params\\">steps,pos,limit</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(steps===<span class=\\"hljs-number\\">0</span> &amp;&amp; pos===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">if</span>(steps===<span class=\\"hljs-number\\">0</span> &amp;&amp; pos!==<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(steps===<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[steps+<span class=\\"hljs-string\\">\' \'</span>+pos]!=<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> hash[steps+<span class=\\"hljs-string\\">\' \'</span>+pos]\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">-1</span>;i&lt;=<span class=\\"hljs-number\\">1</span>;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(pos===<span class=\\"hljs-number\\">0</span> &amp;&amp; i===<span class=\\"hljs-number\\">-1</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(pos+i&gt;=limit)<span class=\\"hljs-keyword\\">continue</span>\\n      count=(count + resolve(steps<span class=\\"hljs-number\\">-1</span>,pos+i,limit) ) % MOD\\n    }\\n    hash[steps+<span class=\\"hljs-string\\">\' \'</span>+pos]=count\\n    <span class=\\"hljs-keyword\\">return</span> count\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> resolve(steps,<span class=\\"hljs-number\\">0</span>,arrLen) \\n};\\n</code></pre>\\n"],"querySlug":"number-of-ways-to-stay-in-the-same-place-after-some-steps","created_at":"2019-11-24","timeArr":[2019,10,24,11,26,36,0],"hasThinking":false,"content":"<p>有一个长度为 <code>arrLen</code> 的数组，开始有一个指针在索引 <code>0</code> 处。</p>\\n\\n<p>每一步操作中，你可以将指针向左或向右移动 1 步，或者停在原地（指针不能被移动到数组范围外）。</p>\\n\\n<p>给你两个整数 <code>steps</code> 和 <code>arrLen</code> ，请你计算并返回：在恰好执行 <code>steps</code> 次操作以后，指针仍然指向索引 <code>0</code> 处的方案数。</p>\\n\\n<p>由于答案可能会很大，请返回方案数 <strong>模</strong> <code>10^9 + 7</code> 后的结果。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>steps = 3, arrLen = 2\\n<strong>输出：</strong>4\\n<strong>解释：</strong>3 步后，总共有 4 种不同的方法可以停在索引 0 处。\\n向右，向左，不动\\n不动，向右，向左\\n向右，不动，向左\\n不动，不动，不动\\n</pre>\\n\\n<p><strong>示例  2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>steps = 2, arrLen = 4\\n<strong>输出：</strong>2\\n<strong>解释：</strong>2 步后，总共有 2 种不同的方法可以停在索引 0 处。\\n向右，向左\\n不动，不动\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>steps = 4, arrLen = 2\\n<strong>输出：</strong>8\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= steps <= 500</code></li>\\n\\t<li><code>1 <= arrLen <= 10<sup>6</sup></code></li>\\n</ul>\\n","title":"1269. 停在原地的方案数","relatedTags":["动态规划"],"difficult":"Hard","lang":["javascript"],"uniqueID":"1269","slug":"1269-Number-of-Ways-to-Stay-in-the-Same-Place-After-Some-Steps"}')}}]);