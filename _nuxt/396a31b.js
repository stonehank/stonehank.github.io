(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{664:function(e){e.exports=JSON.parse('{"content":"<p><code>anime</code>用的是缓动算法</p>\\n<p>算法规定了动画形式，需要提供总消耗时间，当前消耗时间，初始位置，目标位置</p>\\n<p>特点：动画灵活性更大,可以指定任意的时间而得到对应的位置，可以实现暂停/继续，动画跳转，动画进度条等</p>\\n<p><code>react-motion</code>用的是弹性算法</p>\\n<p>算法规定了弹性和阻力，只要提供初始位置和目标位置，即可计算出动画</p>\\n<p>特点：可以通过调整弹力是否为0来实现暂停/继续(即使暂停了，程序还在循环调用)，其实要实现也是可以的，只需要\\n保存当前速度和位置，然后让动画停止，继续的时候调用之前保存的速度和位置；但无法实现动画进度条</p>\\n","toc":[],"relatedTags":null,"created_at":"2018-08-05","timeArr":[2018,7,5,0,0,0,0],"title":"源码阅读-anime和react-motion算法差异","uuid":"3b4d16a57b6ee44ecffdda18a89a5c0f7cf5808c","summary":"<p><code>anime</code>用的是缓动算法</p>\\n<p>算法规定了动画形式，需要提供总消耗时间，当前消耗时间，初始位置，目标位置</p>\\n<p>特点：动画灵活性更大,可以指定任意的时间而得到对应的位置，可以实现暂停/继续，动画跳转，动画进度条等</p>\\n<p><code>react-motion</code>用的是弹性算法</p>\\n<p>算法规定了弹性和阻力，只要提供初始位置和目标位置，即可计算出动...</p>","slug":"yuan-ma-yue-du-anime-he-react-motion-suan-fa-cha-yi","sha":"9f1747ec27f36e527867dcc4368704ce642ca78d"}')}}]);