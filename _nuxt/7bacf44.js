(window.webpackJsonp=window.webpackJsonp||[]).push([[1308],{2106:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">points</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minAreaRect = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">points</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> hash=<span class=\\"hljs-keyword\\">new</span> <span class=\\"hljs-built_in\\">Map</span>(),minArea=<span class=\\"hljs-literal\\">Infinity</span>\\n  points.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a[<span class=\\"hljs-number\\">0</span>]===b[<span class=\\"hljs-number\\">0</span>]?a[<span class=\\"hljs-number\\">1</span>]-b[<span class=\\"hljs-number\\">1</span>]:a[<span class=\\"hljs-number\\">0</span>]-b[<span class=\\"hljs-number\\">0</span>])\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [x,y] <span class=\\"hljs-keyword\\">of</span> points){\\n    hash.set(x+<span class=\\"hljs-string\\">\'-\'</span>+y,<span class=\\"hljs-literal\\">true</span>)\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;points.length<span class=\\"hljs-number\\">-1</span>;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=i+<span class=\\"hljs-number\\">1</span>;j&lt;points.length;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(i===j)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">let</span> [ldx,ldy]=points[i],[rtx,rty]=points[j]\\n      <span class=\\"hljs-keyword\\">if</span>(ldx&gt;=rtx || ldy&gt;=rty)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(!hash.has(ldx+<span class=\\"hljs-string\\">\'-\'</span>+rty) || !hash.has(rtx+<span class=\\"hljs-string\\">\'-\'</span>+ldy))<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">let</span> area=(rty-ldy)*(rtx-ldx)\\n      minArea=<span class=\\"hljs-built_in\\">Math</span>.min(minArea,area)\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(minArea===<span class=\\"hljs-literal\\">Infinity</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">return</span> minArea\\n};\\n</code></pre>\\n"],"querySlug":"minimum-area-rectangle","created_at":"2019-04-08","timeArr":[2019,3,8,9,2,3,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>因为题目给定边是平行于<code>x</code>和<code>y</code>轴，因此我们可以根据<code>左下点</code>和<code>右上点</code>来确定另外<code>2</code>个点和矩形的面积。</p>\\n<p>双重遍历<code>points</code>，如果<code>points[i]</code>的<code>x</code>或者<code>y</code>小于<code>points[j]</code>的<code>x</code>或者<code>y</code>，说明这两个点不符合<code>左下</code>和<code>右上</code>，可以跳过，\\n当找到2个有效点，需要通过<code>hash</code>查找另外<code>2</code>个有效点，即<code>左上</code>和<code>右下</code>。</p>\\n<p>当<code>4</code>个点都存在，就可以计算面积，最后筛选出最小值。</p>\\n","content":"<p>给定在 xy 平面上的一组点，确定由这些点组成的矩形的最小面积，其中矩形的边平行于 x 轴和 y 轴。</p>\\n\\n<p>如果没有任何矩形，就返回 0。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[[1,1],[1,3],[3,1],[3,3],[2,2]]\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\\n<strong>输出：</strong>2\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= points.length &lt;= 500</code></li>\\n\\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\\n\\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\\n\\t<li>所有的点都是不同的。</li>\\n</ol>\\n","title":"939. 最小面积矩形","relatedTags":["几何","数组","哈希表","数学","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"939","slug":"939-Minimum-Area-Rectangle"}')}}]);