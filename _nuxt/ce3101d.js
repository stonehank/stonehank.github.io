(window.webpackJsonp=window.webpackJsonp||[]).push([[1013],{1811:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">senate</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> predictPartyVictory = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">senate</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> N=senate.length\\n  <span class=\\"hljs-keyword\\">let</span> skipR=<span class=\\"hljs-number\\">0</span>,skipD=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> hash={<span class=\\"hljs-string\\">\\"R\\"</span>:<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-string\\">\\"D\\"</span>:<span class=\\"hljs-number\\">0</span>}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n    hash[senate[i]]++\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> notValid=<span class=\\"hljs-built_in\\">Array</span>(senate.length).fill(<span class=\\"hljs-literal\\">false</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i=(i+<span class=\\"hljs-number\\">1</span>) % N){\\n    <span class=\\"hljs-keyword\\">if</span>(notValid[i])<span class=\\"hljs-keyword\\">continue</span>\\n    <span class=\\"hljs-keyword\\">if</span>(senate[i]===<span class=\\"hljs-string\\">\\"R\\"</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(skipR&gt;<span class=\\"hljs-number\\">0</span>){\\n        skipR--\\n        notValid[i]=<span class=\\"hljs-literal\\">true</span>\\n        hash[<span class=\\"hljs-string\\">\\"R\\"</span>]--\\n        <span class=\\"hljs-keyword\\">continue</span>\\n      }\\n      skipD++\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(skipD&gt;<span class=\\"hljs-number\\">0</span>){\\n        skipD--\\n        notValid[i]=<span class=\\"hljs-literal\\">true</span>\\n        hash[<span class=\\"hljs-string\\">\\"D\\"</span>]--\\n        <span class=\\"hljs-keyword\\">continue</span>\\n      }\\n      skipR++\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\\"R\\"</span>]===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\\"Dire\\"</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[<span class=\\"hljs-string\\">\\"D\\"</span>]===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\\"Radiant\\"</span>\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"dota2-senate","created_at":"2019-04-13","timeArr":[2019,3,13,23,34,18,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>使用一个数组<code>baned</code>记录被剥夺权利的索引。</p>\\n<p>定义2个变量<code>skipD</code>，<code>skipR</code>，记录后续能剥夺权利的次数。</p>\\n<p>贪心解法，遇到能剥夺权利的，立刻剥夺，最终看哪一边人数先为<code>0</code>。</p>\\n","content":"<p>Dota2 的世界里有两个阵营：<code>Radiant</code>(天辉)和 <code>Dire</code>(夜魇)</p>\\n\\n<p>Dota2 参议院由来自两派的参议员组成。现在参议院希望对一个 Dota2 游戏里的改变作出决定。他们以一个基于轮为过程的投票进行。在每一轮中，每一位参议员都可以行使两项权利中的<code><strong>一</strong></code>项：</p>\\n\\n<ol>\\n\\t<li>\\n\\t<p><code>禁止一名参议员的权利</code>：</p>\\n\\n\\t<p>参议员可以让另一位参议员在这一轮和随后的几轮中丧失<strong>所有的权利</strong>。</p>\\n\\t</li>\\n\\t<li>\\n\\t<p><code>宣布胜利</code>：</p>\\n\\t</li>\\n</ol>\\n\\n<p>          如果参议员发现有权利投票的参议员都是<strong>同一个阵营的</strong>，他可以宣布胜利并决定在游戏中的有关变化。</p>\\n\\n<p> </p>\\n\\n<p>给定一个字符串代表每个参议员的阵营。字母 “R” 和 “D” 分别代表了 <code>Radiant</code>（天辉）和 <code>Dire</code>（夜魇）。然后，如果有 <code>n</code> 个参议员，给定字符串的大小将是 <code>n</code>。</p>\\n\\n<p>以轮为基础的过程从给定顺序的第一个参议员开始到最后一个参议员结束。这一过程将持续到投票结束。所有失去权利的参议员将在过程中被跳过。</p>\\n\\n<p>假设每一位参议员都足够聪明，会为自己的政党做出最好的策略，你需要预测哪一方最终会宣布胜利并在 Dota2 游戏中决定改变。输出应该是 <code>Radiant</code> 或 <code>Dire</code>。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>\\"RD\\"\\n<strong>输出：</strong>\\"Radiant\\"\\n<strong>解释：</strong><code>第一个参议员来自 Radiant 阵营并且他可以使用第一项权利让第二个参议员失去权力，因此第二个参议员将被跳过因为他没有任何权利。然后在第二轮的时候，第一个参议员可以宣布胜利，因为他是唯一一个有投票权的人</code>\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>\\"RDD\\"\\n<strong>输出：</strong>\\"Dire\\"\\n<strong>解释：</strong>\\n第一轮中,第一个<code>来自 Radiant 阵营的</code>参议员可以使用第一项权利禁止第二个参议员的权利\\n第二个<code>来自 Dire 阵营的</code>参议员会被跳过因为他的权利被禁止\\n第三个<code>来自 Dire 阵营的</code>参议员可以使用他的第一项权利禁止第一个参议员的权利\\n因此在第二轮只剩下第三个参议员拥有投票的权利,于是他可以宣布胜利\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>给定字符串的长度在 <code>[1, 10,000]</code> 之间.</li>\\n</ul>\\n\\n<p> </p>\\n","title":"649. Dota2 参议院","relatedTags":["贪心","队列","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"649","slug":"649-Dota2-Senate"}')}}]);