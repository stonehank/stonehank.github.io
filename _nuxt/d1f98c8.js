(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{668:function(n){n.exports=JSON.parse('{"content":"<h4 id=\\"chuang-jian-shu-zu-de-si-kao\\">创建数组的思考</h4>\\n<p><code>lodash.js---&gt;.internal--&gt;baseClone.js</code>内部</p>\\n<p>有一句：<code>const result = new array.constructor(length)</code></p>\\n<p>这里array是一个经过<code>Array.isArray(array)===true</code>判断的数组，</p>\\n<p>这句话就是使用原数组的构造函数去创建，参数是原数组的长度。</p>\\n<p>那么为什么不直接<code>const result = new Array(length)</code></p>\\n<p>因为如果我们使用了自定义构造函数，<code>new Array</code>则会将自定义方法都删除</p>\\n<p>例如：</p>\\n<p>一个自定义构造函数(Array),包含自定义sum和avg方法</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">CustomArray</span>(<span class=\\"hljs-params\\">length=<span class=\\"hljs-number\\">0</span></span>)</span>{\\n  <span class=\\"hljs-keyword\\">let</span> custom=<span class=\\"hljs-built_in\\">Object</span>.create([],<span class=\\"hljs-built_in\\">Array</span>.prototype)\\n  <span class=\\"hljs-keyword\\">let</span> proto=<span class=\\"hljs-built_in\\">Object</span>.getPrototypeOf(custom)\\n  proto.constructor=CustomArray\\n  proto.sum=<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>)</span>{\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-keyword\\">this</span>.reduce(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">acc,cur</span>)=&gt;</span>acc+cur,<span class=\\"hljs-number\\">0</span>)\\n  }\\n  proto.avg=<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>)</span>{\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-keyword\\">this</span>.sum()/<span class=\\"hljs-keyword\\">this</span>.length\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> custom\\n}</code></pre></code></pre>\\n<p>验证：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">let</span> myArray=<span class=\\"hljs-keyword\\">new</span> CustomArray()\\nmyArray.push(<span class=\\"hljs-number\\">5</span>)\\nmyArray.push(<span class=\\"hljs-number\\">6</span>)\\nmyArray.push(<span class=\\"hljs-number\\">7</span>)\\nmyArray.sum() <span class=\\"hljs-comment\\">// 18</span>\\nmyArray.avg() <span class=\\"hljs-comment\\">// 6</span></code></pre></code></pre>\\n<p>使用<code>new array.constructor</code></p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">const</span> {length}=myArray\\n<span class=\\"hljs-keyword\\">const</span> result = <span class=\\"hljs-keyword\\">new</span> myArray.constructor(length)\\nresult.push(<span class=\\"hljs-number\\">5</span>)\\nresult.push(<span class=\\"hljs-number\\">6</span>)\\nresult.push(<span class=\\"hljs-number\\">7</span>)\\nresult.sum()   <span class=\\"hljs-comment\\">// 18</span>\\nresult.avg()   <span class=\\"hljs-comment\\">// 6</span></code></pre></code></pre>\\n<p>使用<code>new Array</code></p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">const</span> {length}=myArray\\n<span class=\\"hljs-keyword\\">const</span> resultRaw = <span class=\\"hljs-keyword\\">new</span> <span class=\\"hljs-built_in\\">Array</span>(length)\\nresultRaw.push(<span class=\\"hljs-number\\">5</span>)\\nresultRaw.push(<span class=\\"hljs-number\\">6</span>)\\nresultRaw.push(<span class=\\"hljs-number\\">7</span>)\\nresultRaw.sum()   <span class=\\"hljs-comment\\">// 报错 not a function</span>\\nresultRaw.avg()   <span class=\\"hljs-comment\\">// 报错 not a function</span></code></pre></code></pre>\\n","toc":[{"anchor":"chuang-jian-shu-zu-de-si-kao","level":4,"text":"创建数组的思考"}],"relatedTags":null,"created_at":"2018-08-16","timeArr":[2018,7,16,0,0,0,0],"title":"源码阅读-lodash-一个创建数组的思考","uuid":"0d719ffaecb85402ef37b03bbd557d9adf641cd7","summary":"<h4>创建数组的思考</h4>\\n<p><code>lodash.js---&gt;.internal--&gt;baseClone.js</code>内部</p>\\n<p>有一句：<code>const result = new array.constructor(length)</code></p>\\n<p>这里array是一个经过<code>Array.isArray(array)===true</code>判断的数组，</p>\\n<p>这句...</p>","slug":"yuan-ma-yue-du-lodash-yi-ge-chuang-jian-shu-zu-de-si-kao","sha":"7166eb621f1c1bf86fd6cf194dc19b9f3f408810"}')}}]);