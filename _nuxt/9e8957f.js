(window.webpackJsonp=window.webpackJsonp||[]).push([[526],{1324:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> threeSum = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  nums.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nums.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(i&gt;<span class=\\"hljs-number\\">0</span> &amp;&amp; nums[i]===nums[i<span class=\\"hljs-number\\">-1</span>])<span class=\\"hljs-keyword\\">continue</span>\\n    <span class=\\"hljs-keyword\\">let</span> j=i+<span class=\\"hljs-number\\">1</span>,k=nums.length<span class=\\"hljs-number\\">-1</span>,targ=-nums[i]\\n    <span class=\\"hljs-keyword\\">while</span>(j&lt;k){\\n      <span class=\\"hljs-keyword\\">if</span>(j===i)j++\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(k===i)k--\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(nums[j]+nums[k]&gt;targ){\\n        k--\\n      }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(nums[j]+nums[k]&lt;targ){\\n        j++\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        res.push([nums[i],nums[j],nums[k]])\\n        <span class=\\"hljs-keyword\\">while</span>(nums[j]===nums[j+<span class=\\"hljs-number\\">1</span>])j++\\n        <span class=\\"hljs-keyword\\">while</span>(nums[k]===nums[k<span class=\\"hljs-number\\">-1</span>])k--\\n        j++\\n        k--\\n      }\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"3sum","created_at":"2019-03-11","timeArr":[2019,2,11,11,4,55,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>最优解的时间复杂度是<code>O(N^2)</code>，排序是为了能避免没有必要的计算。</p>\\n<p>遍历<code>nums</code>，如果当前数字是<code>nums[i]</code>，那么另外2个数的和就是<code>-nums[i]</code>，由于是有序的，可以使用双指针，一个头<code>i</code>，一个尾<code>j</code>，</p>\\n<p>如果当前和<code>&gt;0</code>，说明需要减小，因此<code>j--</code>，相反则<code>i++</code>；</p>\\n<p>如果相等则添加到结果，额外还需要去重。</p>\\n","content":"<p>给你一个包含 <code>n</code> 个整数的数组 <code>nums</code>，判断 <code>nums</code> 中是否存在三个元素 <em>a，b，c ，</em>使得 <em>a + b + c = </em>0 ？请你找出所有和为 <code>0</code> 且不重复的三元组。</p>\\n\\n<p><strong>注意：</strong>答案中不可以包含重复的三元组。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [-1,0,1,2,-1,-4]\\n<strong>输出：</strong>[[-1,-1,2],[-1,0,1]]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = []\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [0]\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 <= nums.length <= 3000</code></li>\\n\\t<li><code>-10<sup>5</sup> <= nums[i] <= 10<sup>5</sup></code></li>\\n</ul>\\n","title":"15. 三数之和","relatedTags":["数组","双指针","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"15","slug":"15-3Sum"}')}}]);