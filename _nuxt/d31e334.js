(window.webpackJsonp=window.webpackJsonp||[]).push([[457],{1255:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">matrix</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> luckyNumbers  = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">matrix</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> min=[]\\n  <span class=\\"hljs-keyword\\">let</span> max=[]\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">let</span> m=matrix.length\\n  <span class=\\"hljs-keyword\\">let</span> n=matrix[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n    min.push(<span class=\\"hljs-built_in\\">Math</span>.min.apply(<span class=\\"hljs-built_in\\">Math</span>,matrix[i]))\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;n;i++){\\n    <span class=\\"hljs-keyword\\">let</span> cmax=<span class=\\"hljs-number\\">-1</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;m;j++){\\n      cmax=<span class=\\"hljs-built_in\\">Math</span>.max(cmax,matrix[j][i])\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(min.includes(cmax))res.push(cmax)\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"lucky-numbers-in-a-matrix","created_at":"2020-03-15","timeArr":[2020,2,15,10,35,18,0],"hasThinking":false,"content":"<p>给你一个 <code>m * n</code> 的矩阵，矩阵中的数字 <strong>各不相同</strong> 。请你按 <strong>任意</strong> 顺序返回矩阵中的所有幸运数。</p>\\n\\n<p>幸运数是指矩阵中满足同时下列两个条件的元素：</p>\\n\\n<ul>\\n\\t<li>在同一行的所有元素中最小</li>\\n\\t<li>在同一列的所有元素中最大</li>\\n</ul>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>matrix = [[3,7,8],[9,11,13],[15,16,17]]\\n<strong>输出：</strong>[15]\\n<strong>解释：</strong>15 是唯一的幸运数，因为它是其所在行中的最小值，也是所在列中的最大值。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]\\n<strong>输出：</strong>[12]\\n<strong>解释：</strong>12 是唯一的幸运数，因为它是其所在行中的最小值，也是所在列中的最大值。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>matrix = [[7,8],[1,2]]\\n<strong>输出：</strong>[7]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>m == mat.length</code></li>\\n\\t<li><code>n == mat[i].length</code></li>\\n\\t<li><code>1 &lt;= n, m &lt;= 50</code></li>\\n\\t<li><code>1 &lt;=&nbsp;matrix[i][j]&nbsp;&lt;= 10^5</code></li>\\n\\t<li>矩阵中的所有元素都是不同的</li>\\n</ul>\\n","title":"1380. 矩阵中的幸运数","relatedTags":["数组","矩阵"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1380","slug":"1380-Lucky-Numbers-in-a-Matrix"}')}}]);