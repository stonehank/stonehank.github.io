(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{1069:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">text</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">first</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">second</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findOcurrences = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">text, first, second</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> arr=text.split(<span class=\\"hljs-string\\">\' \'</span>)\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length<span class=\\"hljs-number\\">-2</span>;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(arr[i]===first &amp;&amp; arr[i+<span class=\\"hljs-number\\">1</span>]===second){\\n      res.push(arr[i+<span class=\\"hljs-number\\">2</span>])\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"occurrences-after-bigram","created_at":"2019-06-09","timeArr":[2019,5,9,10,33,5,0],"hasThinking":false,"content":"<p>给出第一个词&nbsp;<code>first</code> 和第二个词&nbsp;<code>second</code>，考虑在某些文本&nbsp;<code>text</code>&nbsp;中可能以 &quot;<code>first second third</code>&quot; 形式出现的情况，其中&nbsp;<code>second</code>&nbsp;紧随&nbsp;<code>first</code>&nbsp;出现，<code>third</code>&nbsp;紧随&nbsp;<code>second</code>&nbsp;出现。</p>\\n\\n<p>对于每种这样的情况，将第三个词 &quot;<code>third</code>&quot; 添加到答案中，并返回答案。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>text = &quot;alice is a good girl she is a good student&quot;, first = &quot;a&quot;, second = &quot;good&quot;\\n<strong>输出：</strong>[&quot;girl&quot;,&quot;student&quot;]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>text = &quot;we will we will rock you&quot;, first = &quot;we&quot;, second = &quot;will&quot;\\n<strong>输出：</strong>[&quot;we&quot;,&quot;rock&quot;]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\\n\\t<li><code>text</code>&nbsp;由一些用空格分隔的单词组成，每个单词都由小写英文字母组成</li>\\n\\t<li><code>1 &lt;= first.length, second.length &lt;= 10</code></li>\\n\\t<li><code>first</code> 和&nbsp;<code>second</code>&nbsp;由小写英文字母组成</li>\\n</ol>\\n","title":"1078. Bigram 分词","relatedTags":["字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1078","slug":"1078-Occurrences-After-Bigram"}')}}]);