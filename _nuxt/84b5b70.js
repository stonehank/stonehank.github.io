(window.webpackJsonp=window.webpackJsonp||[]).push([[925],{1723:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">word</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> detectCapitalUse = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">word</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(word.length===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">let</span> allUpp=word.charCodeAt(<span class=\\"hljs-number\\">0</span>)&lt;<span class=\\"hljs-number\\">97</span> &amp;&amp; word.charCodeAt(<span class=\\"hljs-number\\">1</span>)&lt;<span class=\\"hljs-number\\">97</span> ? <span class=\\"hljs-literal\\">true</span> : <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">return</span> assert(word,allUpp)\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">assert</span>(<span class=\\"hljs-params\\">word,allUpp</span>)</span>{\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;word.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(allUpp &amp;&amp; word.charCodeAt(i)&gt;=<span class=\\"hljs-number\\">97</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(!allUpp &amp;&amp; word.charCodeAt(i)&lt;<span class=\\"hljs-number\\">97</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }      \\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"detect-capital","created_at":"2019-03-25","timeArr":[2019,2,25,12,10,47,0],"hasThinking":false,"content":"<p>给定一个单词，你需要判断单词的大写使用是否正确。</p>\\n\\n<p>我们定义，在以下情况时，单词的大写用法是正确的：</p>\\n\\n<ol>\\n\\t<li>全部字母都是大写，比如&quot;USA&quot;。</li>\\n\\t<li>单词中所有字母都不是大写，比如&quot;leetcode&quot;。</li>\\n\\t<li>如果单词不只含有一个字母，只有首字母大写，&nbsp;比如&nbsp;&quot;Google&quot;。</li>\\n</ol>\\n\\n<p>否则，我们定义这个单词没有正确使用大写字母。</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> &quot;USA&quot;\\n<strong>输出:</strong> True\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> &quot;FlaG&quot;\\n<strong>输出:</strong> False\\n</pre>\\n\\n<p><strong>注意:</strong> 输入是由大写和小写拉丁字母组成的非空单词。</p>\\n","title":"520. 检测大写字母","relatedTags":["字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"520","slug":"520-Detect-Capital"}')}}]);