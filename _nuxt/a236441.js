(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{1002:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">twoSum</span><span class=\\"hljs-params\\">(self, nums, target)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        :type target: int\\n        :rtype: List[int]\\n        \\"\\"\\"</span>\\n        mem={}\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">0</span>,len(nums)):\\n            cur=nums[i]\\n            nxt=target-cur\\n            <span class=\\"hljs-keyword\\">if</span> mem.has_key(cur):\\n                <span class=\\"hljs-keyword\\">return</span> [mem[cur],i]\\n            mem[nxt]=i\\n            \\n        \\n</code></pre>\\n"],"querySlug":"two-sum","created_at":"2019-02-16","timeArr":[2019,1,16,13,50,14,0],"hasThinking":false,"content":"<p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出 <strong>和为目标值 </strong><em><code>target</code></em>  的那 <strong>两个</strong> 整数，并返回它们的数组下标。</p>\\n\\n<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>\\n\\n<p>你可以按任意顺序返回答案。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [2,7,11,15], target = 9\\n<strong>输出：</strong>[0,1]\\n<strong>解释：</strong>因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [3,2,4], target = 6\\n<strong>输出：</strong>[1,2]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [3,3], target = 6\\n<strong>输出：</strong>[0,1]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 <= nums.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>-10<sup>9</sup> <= nums[i] <= 10<sup>9</sup></code></li>\\n\\t<li><code>-10<sup>9</sup> <= target <= 10<sup>9</sup></code></li>\\n\\t<li><strong>只会存在一个有效答案</strong></li>\\n</ul>\\n\\n<p><strong>进阶：</strong>你可以想出一个时间复杂度小于 <code>O(n<sup>2</sup>)</code> 的算法吗？</p>\\n","title":"1. 两数之和","relatedTags":["数组","哈希表"],"difficult":"Easy","lang":["python"],"uniqueID":"1","slug":"1-Two-Sum"}')}}]);