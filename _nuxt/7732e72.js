(window.webpackJsonp=window.webpackJsonp||[]).push([[1181],{1979:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">S</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> toGoatLatin = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">S</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> vowel=<span class=\\"hljs-string\\">\'aeiouAEIOU\'</span>\\n  <span class=\\"hljs-keyword\\">let</span> arr=S.split(<span class=\\"hljs-string\\">\' \'</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(vowel.includes(arr[i][<span class=\\"hljs-number\\">0</span>])){\\n      arr[i]=arr[i]+<span class=\\"hljs-string\\">\'ma\'</span>+<span class=\\"hljs-string\\">\'a\'</span>.repeat(i+<span class=\\"hljs-number\\">1</span>)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      arr[i]=arr[i].substring(<span class=\\"hljs-number\\">1</span>)+arr[i][<span class=\\"hljs-number\\">0</span>]+<span class=\\"hljs-string\\">\'ma\'</span>+<span class=\\"hljs-string\\">\'a\'</span>.repeat(i+<span class=\\"hljs-number\\">1</span>)\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> arr.join(<span class=\\"hljs-string\\">\' \'</span>)\\n};\\n</code></pre>\\n"],"querySlug":"goat-latin","created_at":"2019-03-28","timeArr":[2019,2,28,15,18,42,0],"hasThinking":false,"content":"<p>给定一个由空格分割单词的句子&nbsp;<code>S</code>。每个单词只包含大写或小写字母。</p>\\n\\n<p>我们要将句子转换为&nbsp;<em>&ldquo;Goat Latin&rdquo;</em>（一种类似于 猪拉丁文&nbsp;- Pig Latin 的虚构语言）。</p>\\n\\n<p>山羊拉丁文的规则如下：</p>\\n\\n<ul>\\n\\t<li>如果单词以元音开头（a, e, i, o, u），在单词后添加<code>&quot;ma&quot;</code>。<br />\\n\\t例如，单词<code>&quot;apple&quot;</code>变为<code>&quot;applema&quot;</code>。</li>\\n\\t<br />\\n\\t<li>如果单词以辅音字母开头（即非元音字母），移除第一个字符并将它放到末尾，之后再添加<code>&quot;ma&quot;</code>。<br />\\n\\t例如，单词<code>&quot;goat&quot;</code>变为<code>&quot;oatgma&quot;</code>。</li>\\n\\t<br />\\n\\t<li>根据单词在句子中的索引，在单词最后添加与索引相同数量的字母<code>&#39;a&#39;</code>，索引从1开始。<br />\\n\\t例如，在第一个单词后添加<code>&quot;a&quot;</code>，在第二个单词后添加<code>&quot;aa&quot;</code>，以此类推。</li>\\n</ul>\\n\\n<p>返回将&nbsp;<code>S</code>&nbsp;转换为山羊拉丁文后的句子。</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入: </strong>&quot;I speak Goat Latin&quot;\\n<strong>输出: </strong>&quot;Imaa peaksmaaa oatGmaaaa atinLmaaaaa&quot;\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre>\\n<strong>输入: </strong>&quot;The quick brown fox jumped over the lazy dog&quot;\\n<strong>输出: </strong>&quot;heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa&quot;\\n</pre>\\n\\n<p><strong>说明:</strong></p>\\n\\n<ul>\\n\\t<li><code>S</code>&nbsp;中仅包含大小写字母和空格。单词间有且仅有一个空格。</li>\\n\\t<li><code>1 &lt;= S.length &lt;= 150</code>。</li>\\n</ul>\\n","title":"824. 山羊拉丁文","relatedTags":["字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"824","slug":"824-Goat-Latin"}')}}]);