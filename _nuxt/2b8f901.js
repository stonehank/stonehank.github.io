(window.webpackJsonp=window.webpackJsonp||[]).push([[378],{1176:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">grid</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> countServers = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">grid</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> row=[]\\n  <span class=\\"hljs-keyword\\">let</span> col=[]\\n  <span class=\\"hljs-keyword\\">let</span> servers=[]\\n  <span class=\\"hljs-keyword\\">let</span> res={}\\n  <span class=\\"hljs-keyword\\">let</span> m=grid.length\\n  <span class=\\"hljs-keyword\\">let</span> n=grid[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;n;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(grid[i][j]===<span class=\\"hljs-number\\">1</span>){\\n        servers.push([i,j])\\n      }\\n    }\\n  }\\n  \\n  <span class=\\"hljs-keyword\\">let</span> uf=<span class=\\"hljs-built_in\\">Array</span>(servers.length).fill().map(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">e,i</span>)=&gt;</span>i)\\n  <span class=\\"hljs-keyword\\">let</span> weight=<span class=\\"hljs-built_in\\">Array</span>(servers.length).fill(<span class=\\"hljs-number\\">1</span>)\\n  <span class=\\"hljs-keyword\\">let</span> group=servers.length\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">find</span>(<span class=\\"hljs-params\\">i</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(i!==uf[i]){\\n      uf[i]=find(uf[i])\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> uf[i]\\n  }\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">union</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> i=find(a),\\n      j=find(b)\\n    <span class=\\"hljs-keyword\\">if</span>(i===j)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span>(weight[i]&lt;weight[j]){\\n      uf[i]=j\\n      weight[j]+=weight[i]\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      uf[j]=i\\n      weight[i]+=weight[j]\\n    }\\n    group--\\n  }\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">connected</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> i=find(a),\\n      j=find(b)\\n    <span class=\\"hljs-keyword\\">return</span> i===j\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;servers.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> [r,c]=servers[i]\\n    <span class=\\"hljs-keyword\\">if</span>(row[r]!=<span class=\\"hljs-literal\\">null</span>){\\n      union(i,row[r])\\n      <span class=\\"hljs-keyword\\">if</span>(!res[i])res[i]=<span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">if</span>(!res[row[r]])res[row[r]]=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      row[r]=i\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(col[c]!=<span class=\\"hljs-literal\\">null</span>){\\n      union(i,col[c])\\n      <span class=\\"hljs-keyword\\">if</span>(!res[i])res[i]=<span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">if</span>(!res[col[c]])res[col[c]]=<span class=\\"hljs-literal\\">true</span>\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      col[c]=i\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> ans=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> res){\\n    <span class=\\"hljs-keyword\\">if</span>(k)ans++\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> ans\\n};\\n</code></pre>\\n"],"querySlug":"count-servers-that-communicate","created_at":"2019-11-24","timeArr":[2019,10,24,10,49,18,0],"hasThinking":false,"content":"<p>这里有一幅服务器分布图，服务器的位置标识在&nbsp;<code>m * n</code>&nbsp;的整数矩阵网格&nbsp;<code>grid</code>&nbsp;中，1 表示单元格上有服务器，0 表示没有。</p>\\n\\n<p>如果两台服务器位于同一行或者同一列，我们就认为它们之间可以进行通信。</p>\\n\\n<p>请你统计并返回能够与至少一台其他服务器进行通信的服务器的数量。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/11/24/untitled-diagram-6.jpg\\" style=\\"height: 203px; width: 202px;\\"></p>\\n\\n<pre><strong>输入：</strong>grid = [[1,0],[0,1]]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>没有一台服务器能与其他服务器进行通信。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<p><strong><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/11/24/untitled-diagram-4-1.jpg\\" style=\\"height: 203px; width: 203px;\\"></strong></p>\\n\\n<pre><strong>输入：</strong>grid = [[1,0],[1,1]]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>所有这些服务器都至少可以与一台别的服务器进行通信。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/11/24/untitled-diagram-1-3.jpg\\" style=\\"height: 443px; width: 443px;\\"></p>\\n\\n<pre><strong>输入：</strong>grid = [[1,1,0,0],[0,0,1,0],[0,0,1,0],[0,0,0,1]]\\n<strong>输出：</strong>4\\n<strong>解释：</strong>第一行的两台服务器互相通信，第三列的两台服务器互相通信，但右下角的服务器无法与其他服务器通信。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>m == grid.length</code></li>\\n\\t<li><code>n == grid[i].length</code></li>\\n\\t<li><code>1 &lt;= m &lt;= 250</code></li>\\n\\t<li><code>1 &lt;= n &lt;= 250</code></li>\\n\\t<li><code>grid[i][j] == 0 or 1</code></li>\\n</ul>\\n","title":"1267. 统计参与通信的服务器","relatedTags":["深度优先搜索","广度优先搜索","并查集","数组","计数","矩阵"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1267","slug":"1267-Count-Servers-that-Communicate"}')}}]);