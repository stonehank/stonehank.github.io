(window.webpackJsonp=window.webpackJsonp||[]).push([[1306],{2104:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">logs</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> reorderLogFiles = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">logs</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> letter=[],num=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;logs.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> arr=logs[i].split(<span class=\\"hljs-string\\">\' \'</span>)\\n    <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-regexp\\">/\\\\d/</span>.test(arr[<span class=\\"hljs-number\\">1</span>])){\\n      num.push(logs[i])\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">let</span> rest=arr.slice(<span class=\\"hljs-number\\">1</span>).join(<span class=\\"hljs-string\\">\' \'</span>)\\n      letter.push([logs[i],rest])\\n      <span class=\\"hljs-keyword\\">let</span> id=letter.length<span class=\\"hljs-number\\">-1</span>\\n      <span class=\\"hljs-keyword\\">while</span>(id&gt;<span class=\\"hljs-number\\">0</span> &amp;&amp; letter[id][<span class=\\"hljs-number\\">1</span>]&lt;letter[id<span class=\\"hljs-number\\">-1</span>][<span class=\\"hljs-number\\">1</span>]){\\n        <span class=\\"hljs-keyword\\">let</span> t=letter[id]\\n        letter[id]=letter[id<span class=\\"hljs-number\\">-1</span>]\\n        letter[id<span class=\\"hljs-number\\">-1</span>]=t\\n        id--\\n      }\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;letter.length;i++){\\n    res.push(letter[i][<span class=\\"hljs-number\\">0</span>])\\n  }\\n  res=res.concat(num)\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"reorder-data-in-log-files","created_at":"2019-03-29","timeArr":[2019,2,29,9,31,48,0],"hasThinking":false,"content":"<p>给你一个日志数组 <code>logs</code>。每条日志都是以空格分隔的字串，其第一个字为字母与数字混合的<em> </em><strong>标识符 </strong>。</p>\\n\\n<p>有两种不同类型的日志：</p>\\n\\n<ul>\\n\\t<li><strong>字母日志</strong>：除标识符之外，所有字均由小写字母组成</li>\\n\\t<li><strong>数字日志</strong>：除标识符之外，所有字均由数字组成</li>\\n</ul>\\n\\n<p>请按下述规则将日志重新排序：</p>\\n\\n<ul>\\n\\t<li>所有 <strong>字母日志</strong> 都排在 <strong>数字日志</strong> 之前。</li>\\n\\t<li><strong>字母日志</strong> 在内容不同时，忽略标识符后，按内容字母顺序排序；在内容相同时，按标识符排序。</li>\\n\\t<li><strong>数字日志</strong> 应该保留原来的相对顺序。</li>\\n</ul>\\n\\n<p>返回日志的最终顺序。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>logs = [\\"dig1 8 1 5 1\\",\\"let1 art can\\",\\"dig2 3 6\\",\\"let2 own kit dig\\",\\"let3 art zero\\"]\\n<strong>输出：</strong>[\\"let1 art can\\",\\"let3 art zero\\",\\"let2 own kit dig\\",\\"dig1 8 1 5 1\\",\\"dig2 3 6\\"]\\n<strong>解释：</strong>\\n字母日志的内容都不同，所以顺序为 \\"art can\\", \\"art zero\\", \\"own kit dig\\" 。\\n数字日志保留原来的相对顺序 \\"dig1 8 1 5 1\\", \\"dig2 3 6\\" 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>logs = [\\"a1 9 2 3 1\\",\\"g1 act car\\",\\"zo4 4 7\\",\\"ab1 off key dog\\",\\"a8 act zoo\\"]\\n<strong>输出：</strong>[\\"g1 act car\\",\\"a8 act zoo\\",\\"ab1 off key dog\\",\\"a1 9 2 3 1\\",\\"zo4 4 7\\"]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= logs.length <= 100</code></li>\\n\\t<li><code>3 <= logs[i].length <= 100</code></li>\\n\\t<li><code>logs[i]</code> 中，字与字之间都用 <strong>单个</strong> 空格分隔</li>\\n\\t<li>题目数据保证 <code>logs[i]</code> 都有一个标识符，并且在标识符之后至少存在一个字</li>\\n</ul>\\n","title":"937. 重新排列日志文件","relatedTags":["数组","字符串","排序"],"difficult":"Easy","lang":["javascript"],"uniqueID":"937","slug":"937-Reorder-Data-in-Log-Files"}')}}]);