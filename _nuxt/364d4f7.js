(window.webpackJsonp=window.webpackJsonp||[]).push([[931],{1729:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> countArrangement = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> used=<span class=\\"hljs-built_in\\">Array</span>(N+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-literal\\">false</span>)\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">backtrack</span>(<span class=\\"hljs-params\\">curIdx</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(curIdx===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> res++\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;=N;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(used[i])<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(i % curIdx===<span class=\\"hljs-number\\">0</span> || curIdx % i===<span class=\\"hljs-number\\">0</span>){\\n        used[i]=<span class=\\"hljs-literal\\">true</span>\\n        backtrack(curIdx<span class=\\"hljs-number\\">-1</span>)\\n        used[i]=<span class=\\"hljs-literal\\">false</span>\\n      }\\n    }\\n  }\\n  backtrack(N)\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"beautiful-arrangement","created_at":"2019-04-18","timeArr":[2019,3,18,19,48,5,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>回溯维护一个变量<code>curIdx</code>，定义的是第<code>curIdx</code>位，如果存在某个数<code>i % curIdx===0 || curIdx % i===0</code>，说明这个第<code>curIdx</code>位的数字<code>i</code>满足要求，\\n继续递归计算第<code>curIdx+1</code>位的数字。</p>\\n","content":"<p>假设有从 1 到 n 的 n 个整数。用这些整数构造一个数组 <code>perm</code>（<strong>下标从 1 开始</strong>），只要满足下述条件 <strong>之一</strong> ，该数组就是一个 <strong>优美的排列</strong> ：</p>\\n\\n<ul>\\n\\t<li><code>perm[i]</code> 能够被 <code>i</code> 整除</li>\\n\\t<li><code>i</code> 能够被 <code>perm[i]</code> 整除</li>\\n</ul>\\n\\n<p>给你一个整数 <code>n</code> ，返回可以构造的 <strong>优美排列 </strong>的 <strong>数量</strong> 。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 2\\n<strong>输出：</strong>2\\n<b>解释：</b>\\n第 1 个优美的排列是 [1,2]：\\n    - perm[1] = 1 能被 i = 1 整除\\n    - perm[2] = 2 能被 i = 2 整除\\n第 2 个优美的排列是 [2,1]:\\n    - perm[1] = 2 能被 i = 1 整除\\n    - i = 2 能被 perm[2] = 1 整除\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 1\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= n &lt;= 15</code></li>\\n</ul>\\n","title":"526. 优美的排列","relatedTags":["位运算","数组","动态规划","回溯","状态压缩"],"difficult":"Middle","lang":["javascript"],"uniqueID":"526","slug":"526-Beautiful-Arrangement"}')}}]);