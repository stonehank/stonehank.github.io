(window.webpackJsonp=window.webpackJsonp||[]).push([[388],{1186:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">groupSizes</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> groupThePeople = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">groupSizes</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> groupsHash={}\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;groupSizes.length;++i){\\n    <span class=\\"hljs-keyword\\">let</span> size=groupSizes[i]\\n    <span class=\\"hljs-keyword\\">if</span>(groupsHash[size]==<span class=\\"hljs-literal\\">null</span>){\\n      groupsHash[size]={\\n        <span class=\\"hljs-attr\\">idx</span>:<span class=\\"hljs-number\\">0</span>,\\n        <span class=\\"hljs-attr\\">arr</span>:<span class=\\"hljs-built_in\\">Array</span>(size).fill(<span class=\\"hljs-literal\\">null</span>)\\n      }\\n    }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(groupsHash[size].idx===groupsHash[size].arr.length){\\n      res.push(groupsHash[size].arr.slice())\\n      groupsHash[size]={\\n        <span class=\\"hljs-attr\\">idx</span>:<span class=\\"hljs-number\\">0</span>,\\n        <span class=\\"hljs-attr\\">arr</span>:<span class=\\"hljs-built_in\\">Array</span>(size).fill(<span class=\\"hljs-literal\\">null</span>)\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> {idx,arr}=groupsHash[size]\\n    arr[idx]=i\\n    groupsHash[size].idx++\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> groupsHash){\\n    res.push(groupsHash[k].arr.slice())\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"group-the-people-given-the-group-size-they-belong-to","created_at":"2019-12-08","timeArr":[2019,11,8,10,40,43,0],"hasThinking":false,"content":"<p>有&nbsp;<code>n</code>&nbsp;位用户参加活动，他们的&nbsp;<strong>ID</strong>&nbsp;从 <code>0</code> 到 <code>n - 1</code>，每位用户都 <strong>恰好</strong> 属于某一用户组。给你一个长度为 <code>n</code> 的数组&nbsp;<code>groupSizes</code>，其中包含每位用户所处的用户组的大小，请你返回用户分组情况（存在的用户组以及每个组中用户的 ID）。</p>\\n\\n<p>你可以任何顺序返回解决方案，ID 的顺序也不受限制。此外，题目给出的数据保证至少存在一种解决方案。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>groupSizes = [3,3,3,3,3,1,3]\\n<strong>输出：</strong>[[5],[0,1,2],[3,4,6]]\\n<strong>解释：</strong> \\n其他可能的解决方案有 [[2,1,6],[5],[0,4,3]] 和 [[5],[0,6,2],[4,3,1]]。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>groupSizes = [2,1,3,3,3,2]\\n<strong>输出：</strong>[[1],[0,5],[2,3,4]]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>groupSizes.length == n</code></li>\\n\\t<li><code>1 &lt;= n&nbsp;&lt;= 500</code></li>\\n\\t<li><code>1 &lt;=&nbsp;groupSizes[i] &lt;= n</code></li>\\n</ul>\\n","title":"1282. 用户分组","relatedTags":["数组","哈希表"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1282","slug":"1282-Group-the-People-Given-the-Group-Size-They-Belong-To"}')}}]);