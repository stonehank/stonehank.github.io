(window.webpackJsonp=window.webpackJsonp||[]).push([[1367],{2165:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">K</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> subarraysWithKDistinct = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A, K</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> hash=<span class=\\"hljs-built_in\\">Array</span>(A.length+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">0</span>),startIdx=<span class=\\"hljs-number\\">0</span>,k=<span class=\\"hljs-number\\">0</span>,res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> cur=A[i]\\n    <span class=\\"hljs-keyword\\">if</span>(hash[cur]===<span class=\\"hljs-number\\">0</span>)k++\\n    hash[cur]++\\n    <span class=\\"hljs-keyword\\">if</span>(k&gt;K){\\n      <span class=\\"hljs-keyword\\">let</span> temp={}\\n      <span class=\\"hljs-keyword\\">while</span>(startIdx&lt;i){\\n        <span class=\\"hljs-keyword\\">let</span> del=A[startIdx]\\n\\t\\t    hash[del]--\\n\\t\\t    <span class=\\"hljs-keyword\\">if</span>(hash[del]===<span class=\\"hljs-number\\">0</span>)k--\\n\\t\\t    startIdx++\\n        <span class=\\"hljs-keyword\\">if</span>(k===K)<span class=\\"hljs-keyword\\">break</span>\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(k===K){\\n      <span class=\\"hljs-keyword\\">let</span> lastIdx=startIdx\\n      <span class=\\"hljs-keyword\\">while</span>(lastIdx&lt;i){\\n        <span class=\\"hljs-keyword\\">let</span> del=A[lastIdx]\\n        hash[del]--\\n        <span class=\\"hljs-keyword\\">if</span>(hash[del]===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">break</span>\\n        lastIdx++\\n      }\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=startIdx;j&lt;=lastIdx &amp;&amp; j&lt;i;j++){\\n        hash[A[j]]++\\n      }\\n      res+=lastIdx-startIdx+<span class=\\"hljs-number\\">1</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"subarrays-with-k-different-integers","created_at":"2019-04-08","timeArr":[2019,3,8,11,25,24,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>思路一：</p>\\n<p>遍历<code>A</code>，用一个<code>hash</code>储存每个数字的频率和当前多少种数字<code>k</code>；</p>\\n<p>分别处理<code>k&gt;K</code>和<code>k===K</code>的情况，</p>\\n<ul>\\n<li><code>k&gt;K</code></li>\\n</ul>\\n<p>说明当前子数组有超过<code>K</code>个数字，因此需要重新确定这个子数组的有效的最左的位置<code>startIdx</code>。</p>\\n<p>*<code>k===K</code></p>\\n<p>说明当前子数组刚好有<code>K</code>个数字，因此需要计算能让这个子数组无效的最左的位置<code>lastIdx</code>，然后 <code>res+=lastIdx-startIdx+1</code>。</p>\\n<p>思路二：</p>\\n<p>先算出在数组<code>A</code>中数字<code>&lt;=K</code>的所有子数组的个数，例如<code>[1,2,1,2,3],K=2</code>的个数数组就是<code>[1,2,3,4,2]</code>，总共<code>12</code>个。</p>\\n<p>再计算数组<code>A</code>中<code>&lt;=K-1</code>的所有子数组的个数，两者相减就是刚好为<code>K</code>个的子数组的个数。</p>\\n","content":"<p>给定一个正整数数组 <code>A</code>，如果 <code>A</code> 的某个子数组中不同整数的个数恰好为 <code>K</code>，则称 <code>A</code> 的这个连续、不一定不同的子数组为<em>好子数组</em>。</p>\\n\\n<p>（例如，<code>[1,2,3,1,2]</code> 中有 <code>3</code> 个不同的整数：<code>1</code>，<code>2</code>，以及 <code>3</code>。）</p>\\n\\n<p>返回 <code>A</code> 中<em>好子数组</em>的数目。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>A = [1,2,1,2,3], K = 2\\n<strong>输出：</strong>7\\n<strong>解释：</strong>恰好由 2 个不同整数组成的子数组：[1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>A = [1,2,1,3,4], K = 3\\n<strong>输出：</strong>3\\n<strong>解释：</strong>恰好由 3 个不同整数组成的子数组：[1,2,1,3], [2,1,3], [1,3,4].\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 <= A.length <= 20000</code></li>\\n\\t<li><code>1 <= A[i] <= A.length</code></li>\\n\\t<li><code>1 <= K <= A.length</code></li>\\n</ol>\\n","title":"992. K 个不同整数的子数组","relatedTags":["数组","哈希表","计数","滑动窗口"],"difficult":"Hard","lang":["javascript"],"uniqueID":"992","slug":"992-Subarrays-with-K-Different-Integers"}')}}]);