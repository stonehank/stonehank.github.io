(window.webpackJsonp=window.webpackJsonp||[]).push([[1175],{1973:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">paragraph</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">banned</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> mostCommonWord = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">paragraph, banned</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> lower=paragraph.toLowerCase()\\n  <span class=\\"hljs-keyword\\">let</span> arr=lower.split(<span class=\\"hljs-regexp\\">/[\\\\s\\\\!\\\\?\\\\\'\\\\,\\\\;\\\\.]/</span>)\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">let</span> maxT=<span class=\\"hljs-number\\">0</span>,res=<span class=\\"hljs-string\\">\'\'</span>\\n  <span class=\\"hljs-comment\\">// console.log(arr)</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> w <span class=\\"hljs-keyword\\">of</span> arr){\\n    <span class=\\"hljs-keyword\\">if</span>(w===<span class=\\"hljs-string\\">\'\'</span>)<span class=\\"hljs-keyword\\">continue</span>\\n    <span class=\\"hljs-keyword\\">if</span>(banned.includes(w))<span class=\\"hljs-keyword\\">continue</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hash[w]==<span class=\\"hljs-literal\\">null</span>)hash[w]=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">else</span> hash[w]++\\n    <span class=\\"hljs-keyword\\">if</span>(hash[w]&gt;maxT){\\n      maxT=hash[w]\\n      res=w\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"most-common-word","created_at":"2019-03-28","timeArr":[2019,2,28,13,34,4,0],"hasThinking":false,"content":"<p>给定一个段落 (paragraph) 和一个禁用单词列表 (banned)。返回出现次数最多，同时不在禁用列表中的单词。</p>\\n\\n<p>题目保证至少有一个词不在禁用列表中，而且答案唯一。</p>\\n\\n<p>禁用列表中的单词用小写字母表示，不含标点符号。段落中的单词不区分大小写。答案都是小写字母。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre><strong>输入:</strong> \\nparagraph = &quot;Bob hit a ball, the hit BALL flew far after it was hit.&quot;\\nbanned = [&quot;hit&quot;]\\n<strong>输出:</strong> &quot;ball&quot;\\n<strong>解释:</strong> \\n&quot;hit&quot; 出现了3次，但它是一个禁用的单词。\\n&quot;ball&quot; 出现了2次 (同时没有其他单词出现2次)，所以它是段落里出现次数最多的，且不在禁用列表中的单词。 \\n注意，所有这些单词在段落里不区分大小写，标点符号需要忽略（即使是紧挨着单词也忽略， 比如 &quot;ball,&quot;）， \\n&quot;hit&quot;不是最终的答案，虽然它出现次数更多，但它在禁用单词列表中。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= 段落长度 &lt;= 1000</code></li>\\n\\t<li><code>0 &lt;= 禁用单词个数 &lt;= 100</code></li>\\n\\t<li><code>1 &lt;= 禁用单词长度 &lt;= 10</code></li>\\n\\t<li>答案是唯一的, 且都是小写字母&nbsp;(即使在 <code>paragraph</code> 里是大写的，即使是一些特定的名词，答案都是小写的。)</li>\\n\\t<li><code>paragraph</code>&nbsp;只包含字母、空格和下列标点符号<code>!?&#39;,;.</code></li>\\n\\t<li>不存在没有连字符或者带有连字符的单词。</li>\\n\\t<li>单词里只包含字母，不会出现省略号或者其他标点符号。</li>\\n</ul>\\n","title":"819. 最常见的单词","relatedTags":["哈希表","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"819","slug":"819-Most-Common-Word"}')}}]);