(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{1012:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">B</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minDominoRotations = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A, B</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">let</span> valid=<span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> a=A[i],b=B[i]\\n    <span class=\\"hljs-keyword\\">if</span>(a===b){\\n      b=<span class=\\"hljs-literal\\">null</span>\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(hash[a]==<span class=\\"hljs-literal\\">null</span>)hash[a]=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">else</span> hash[a]++\\n    <span class=\\"hljs-keyword\\">if</span>(b!=<span class=\\"hljs-literal\\">null</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(hash[b]==<span class=\\"hljs-literal\\">null</span>)hash[b]=<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">else</span> hash[b]++\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(hash[a]===A.length || hash[b]===A.length){\\n      valid=<span class=\\"hljs-literal\\">true</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(!valid)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">let</span> candi=<span class=\\"hljs-literal\\">null</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> hash){\\n    <span class=\\"hljs-keyword\\">if</span>(hash[k]===A.length)candi=+k\\n  }\\n  <span class=\\"hljs-comment\\">// if(candi.length===0)return 0</span>\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-literal\\">Infinity</span>\\n  <span class=\\"hljs-comment\\">// console.log(candi)</span>\\n  <span class=\\"hljs-comment\\">// while(candi.length&gt;0){</span>\\n  <span class=\\"hljs-comment\\">//   let len=candi.length</span>\\n  <span class=\\"hljs-comment\\">//   for(let i=0;i&lt;len;i++){</span>\\n  <span class=\\"hljs-comment\\">//     let cur=candi.shift()</span>\\n      <span class=\\"hljs-keyword\\">let</span> aSwap=<span class=\\"hljs-number\\">0</span>,bSwap=<span class=\\"hljs-number\\">0</span>\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A.length;i++){\\n        <span class=\\"hljs-keyword\\">let</span> a=A[i],b=B[i]\\n        <span class=\\"hljs-keyword\\">if</span>(a===candi &amp;&amp; b===candi)<span class=\\"hljs-keyword\\">continue</span>\\n        <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(a===candi){\\n          aSwap++\\n        }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(b===candi){\\n          bSwap++\\n        }\\n        res=<span class=\\"hljs-built_in\\">Math</span>.min(aSwap,bSwap)\\n      }\\n    <span class=\\"hljs-comment\\">// }</span>\\n  <span class=\\"hljs-comment\\">// }</span>\\n  <span class=\\"hljs-keyword\\">return</span> res===<span class=\\"hljs-literal\\">Infinity</span>?<span class=\\"hljs-number\\">0</span>:res\\n};\\n</code></pre>\\n"],"querySlug":"minimum-domino-rotations-for-equal-row","created_at":"2019-03-10","timeArr":[2019,2,10,12,12,24,0],"hasThinking":false,"content":"<p>在一排多米诺骨牌中，<code>A[i]</code> 和 <code>B[i]</code>&nbsp;分别代表第 i 个多米诺骨牌的上半部分和下半部分。（一个多米诺是两个从 1 到 6 的数字同列平铺形成的&nbsp;&mdash;&mdash; 该平铺的每一半上都有一个数字。）</p>\\n\\n<p>我们可以旋转第&nbsp;<code>i</code>&nbsp;张多米诺，使得&nbsp;<code>A[i]</code> 和&nbsp;<code>B[i]</code>&nbsp;的值交换。</p>\\n\\n<p>返回能使 <code>A</code> 中所有值或者 <code>B</code> 中所有值都相同的最小旋转次数。</p>\\n\\n<p>如果无法做到，返回&nbsp;<code>-1</code>.</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/03/08/domino.png\\" style=\\"height: 161px; width: 200px;\\"></p>\\n\\n<pre><strong>输入：</strong>A = [2,1,2,4,2,2], B = [5,2,6,2,3,2]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>\\n图一表示：在我们旋转之前， A 和 B 给出的多米诺牌。\\n如果我们旋转第二个和第四个多米诺骨牌，我们可以使上面一行中的每个值都等于 2，如图二所示。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>A = [3,5,1,2,3], B = [3,6,3,3,4]\\n<strong>输出：</strong>-1\\n<strong>解释：</strong>\\n在这种情况下，不可能旋转多米诺牌使一行的值相等。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= A[i], B[i] &lt;= 6</code></li>\\n\\t<li><code>2 &lt;= A.length == B.length &lt;= 20000</code></li>\\n</ol>\\n","title":"1007. 行相等的最少多米诺旋转","relatedTags":["贪心","数组"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1007","slug":"1007-Minimum-Domino-Rotations-For-Equal-Row"}')}}]);