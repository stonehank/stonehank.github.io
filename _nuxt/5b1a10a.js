(window.webpackJsonp=window.webpackJsonp||[]).push([[647],{1445:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">k</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{void}</span> </span>Do not return anything, modify nums in-place instead.\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> rotate = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums, k</span>) </span>{\\n  <span class=\\"hljs-comment\\">// for(let i=0;i&lt;k;i++){</span>\\n  <span class=\\"hljs-comment\\">//   nums.unshift(nums.pop())</span>\\n  <span class=\\"hljs-comment\\">// }</span>\\n  k %=nums.length\\n  reverse(nums,<span class=\\"hljs-number\\">0</span>,nums.length<span class=\\"hljs-number\\">-1</span>)\\n  reverse(nums,<span class=\\"hljs-number\\">0</span>,k<span class=\\"hljs-number\\">-1</span>)\\n  reverse(nums,k,nums.length<span class=\\"hljs-number\\">-1</span>)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">reverse</span>(<span class=\\"hljs-params\\">arr,s,e</span>)</span>{\\n    <span class=\\"hljs-keyword\\">while</span>(s&lt;e){\\n      <span class=\\"hljs-keyword\\">let</span> t=arr[s]\\n      arr[s++]=arr[e]\\n      arr[e--]=t\\n    }\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"rotate-array","created_at":"2019-03-13","timeArr":[2019,2,13,10,15,44,0],"hasThinking":false,"content":"<p>给定一个数组，将数组中的元素向右移动 <code>k</code><em> </em>个位置，其中 <code>k</code><em> </em>是非负数。</p>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong></p>\\n\\n<ul>\\n\\t<li>尽可能想出更多的解决方案，至少有三种不同的方法可以解决这个问题。</li>\\n\\t<li>你可以使用空间复杂度为 O(1) 的 <strong>原地 </strong>算法解决这个问题吗？</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [1,2,3,4,5,6,7], k = 3\\n<strong>输出:</strong> <code>[5,6,7,1,2,3,4]</code>\\n<strong>解释:</strong>\\n向右旋转 1 步: <code>[7,1,2,3,4,5,6]</code>\\n向右旋转 2 步: <code>[6,7,1,2,3,4,5]\\n</code>向右旋转 3 步: <code>[5,6,7,1,2,3,4]</code>\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [-1,-100,3,99], k = 2\\n<strong>输出：</strong>[3,99,-1,-100]\\n<strong>解释:</strong> \\n向右旋转 1 步: [99,-1,-100,3]\\n向右旋转 2 步: [3,99,-1,-100]</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 2 * 10<sup>4</sup></code></li>\\n\\t<li><code>-2<sup>31</sup> <= nums[i] <= 2<sup>31</sup> - 1</code></li>\\n\\t<li><code>0 <= k <= 10<sup>5</sup></code></li>\\n</ul>\\n\\n<ul>\\n</ul>\\n","title":"189. 旋转数组","relatedTags":["数组","数学","双指针"],"difficult":"Middle","lang":["javascript"],"uniqueID":"189","slug":"189-Rotate-Array"}')}}]);