(window.webpackJsonp=window.webpackJsonp||[]).push([[961],{1759:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> nearestPalindromic = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n</span>) </span>{\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">prev</span>(<span class=\\"hljs-params\\">s</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> m1=<span class=\\"hljs-built_in\\">Math</span>.floor(s.length/<span class=\\"hljs-number\\">2</span>),m2=<span class=\\"hljs-built_in\\">Math</span>.ceil(s.length/<span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">let</span> left=s.substring(<span class=\\"hljs-number\\">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\\n    <span class=\\"hljs-keyword\\">let</span> nxtL,nxtR\\n    <span class=\\"hljs-keyword\\">if</span>(+reverse(left)&gt;=+right){\\n      nxtL=+(left+mid)<span class=\\"hljs-number\\">-1</span>+<span class=\\"hljs-string\\">\'\'</span>\\n      <span class=\\"hljs-keyword\\">if</span>(mid===<span class=\\"hljs-string\\">\'\'</span>){\\n        <span class=\\"hljs-keyword\\">if</span>(nxtL===<span class=\\"hljs-string\\">\'0\'</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-string\\">\'9\'</span>\\n        <span class=\\"hljs-keyword\\">if</span>(nxtL===<span class=\\"hljs-string\\">\'9\'</span>.repeat(nxtL.length))mid=<span class=\\"hljs-string\\">\'9\'</span>\\n      }<span class=\\"hljs-keyword\\">else</span> mid=<span class=\\"hljs-string\\">\'\'</span>\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      nxtL=left+mid\\n      mid=<span class=\\"hljs-string\\">\'\'</span>\\n    }\\n    nxtR=reverse(nxtL.substring(<span class=\\"hljs-number\\">0</span>,m1))\\n    <span class=\\"hljs-keyword\\">return</span> nxtL+mid+nxtR\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">next</span>(<span class=\\"hljs-params\\">s</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> m1=<span class=\\"hljs-built_in\\">Math</span>.floor(s.length/<span class=\\"hljs-number\\">2</span>),m2=<span class=\\"hljs-built_in\\">Math</span>.ceil(s.length/<span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">let</span> left=s.substring(<span class=\\"hljs-number\\">0</span>,m1),mid=s.substring(m1,m2),right=s.substring(m2)\\n    <span class=\\"hljs-keyword\\">let</span> nxtL,nxtR\\n    <span class=\\"hljs-keyword\\">if</span>(+reverse(left)&lt;=+right) nxtL=+(left+mid)+<span class=\\"hljs-number\\">1</span> + <span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">else</span> nxtL=left+mid\\n    nxtR=reverse(nxtL.substring(<span class=\\"hljs-number\\">0</span>,m1))\\n    <span class=\\"hljs-keyword\\">if</span>(nxtL[<span class=\\"hljs-number\\">0</span>]!==nxtR[nxtR.length<span class=\\"hljs-number\\">-1</span>])<span class=\\"hljs-keyword\\">return</span> next(nxtL+nxtR)\\n    <span class=\\"hljs-keyword\\">return</span> nxtL+nxtR\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">reverse</span>(<span class=\\"hljs-params\\">s</span>)</span>{\\n    <span class=\\"hljs-keyword\\">return</span> s.split(<span class=\\"hljs-string\\">\'\'</span>).reverse().join(<span class=\\"hljs-string\\">\'\'</span>)\\n  }\\n\\n  <span class=\\"hljs-keyword\\">let</span> pre=prev(n),nxt=next(n)\\n  <span class=\\"hljs-keyword\\">let</span> gap1=<span class=\\"hljs-built_in\\">Math</span>.abs(+pre-+n),gap2=<span class=\\"hljs-built_in\\">Math</span>.abs(+nxt-+n)\\n  <span class=\\"hljs-keyword\\">if</span>(gap1&lt;=gap2)<span class=\\"hljs-keyword\\">return</span> pre\\n  <span class=\\"hljs-keyword\\">return</span> nxt\\n};\\n</code></pre>\\n"],"querySlug":"find-the-closest-palindrome","created_at":"2019-03-25","timeArr":[2019,2,25,22,45,7,0],"hasThinking":false,"content":"<p>给定一个整数 n ，你需要找到与它最近的回文数（不包括自身）。</p>\\n\\n<p>&ldquo;最近的&rdquo;定义为两个整数<strong>差的绝对值</strong>最小。</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> &quot;123&quot;\\n<strong>输出:</strong> &quot;121&quot;\\n</pre>\\n\\n<p><strong>注意:</strong></p>\\n\\n<ol>\\n\\t<li><strong>n </strong>是由字符串表示的正整数，其长度不超过18。</li>\\n\\t<li>如果有多个结果，返回最小的那个。</li>\\n</ol>\\n","title":"564. 寻找最近的回文数","relatedTags":["数学","字符串"],"difficult":"Hard","lang":["javascript"],"uniqueID":"564","slug":"564-Find-the-Closest-Palindrome"}')}}]);