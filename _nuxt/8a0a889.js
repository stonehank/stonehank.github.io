(window.webpackJsonp=window.webpackJsonp||[]).push([[435],{1233:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">grid</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> countNegatives = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">grid</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;grid.length;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;grid[i].length;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(grid[i][j]&lt;<span class=\\"hljs-number\\">0</span>)res++\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"count-negative-numbers-in-a-sorted-matrix","created_at":"2020-02-16","timeArr":[2020,1,16,10,32,7,0],"hasThinking":false,"content":"<p>给你一个 <code>m * n</code> 的矩阵 <code>grid</code>，矩阵中的元素无论是按行还是按列，都以非递增顺序排列。 </p>\\n\\n<p>请你统计并返回 <code>grid</code> 中 <strong>负数</strong> 的数目。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]\\n<strong>输出：</strong>8\\n<strong>解释：</strong>矩阵中共有 8 个负数。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>grid = [[3,2],[1,0]]\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>grid = [[1,-1],[-1,-1]]\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>grid = [[-1]]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>m == grid.length</code></li>\\n\\t<li><code>n == grid[i].length</code></li>\\n\\t<li><code>1 <= m, n <= 100</code></li>\\n\\t<li><code>-100 <= grid[i][j] <= 100</code></li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong>你可以设计一个时间复杂度为 <code>O(n + m)</code> 的解决方案吗？</p>\\n\\n<p> </p>\\n","title":"1351. 统计有序矩阵中的负数","relatedTags":["数组","二分查找","矩阵"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1351","slug":"1351-Count-Negative-Numbers-in-a-Sorted-Matrix"}')}}]);