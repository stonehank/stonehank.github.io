(window.webpackJsonp=window.webpackJsonp||[]).push([[833],{1631:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> strongPasswordChecker = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> needFix=[],hasNumber=<span class=\\"hljs-number\\">1</span>,hasUpper=<span class=\\"hljs-number\\">1</span>,hasLower=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">let</span> last=s[<span class=\\"hljs-number\\">0</span>],l=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-regexp\\">/\\\\d/</span>.test(s[i]))hasNumber=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-regexp\\">/[A-Z]/</span>.test(s[i]))hasUpper=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-regexp\\">/[a-z]/</span>.test(s[i]))hasLower=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(i===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">continue</span>\\n    <span class=\\"hljs-keyword\\">if</span>(s[i]===last){\\n      l++\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(l&gt;=<span class=\\"hljs-number\\">3</span>)needFix.push(l)\\n      last=s[i]\\n      l=<span class=\\"hljs-number\\">1</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(s.length&lt;<span class=\\"hljs-number\\">6</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-built_in\\">Math</span>.max(<span class=\\"hljs-number\\">6</span>-s.length,hasNumber+hasUpper+hasLower)\\n  <span class=\\"hljs-keyword\\">if</span>(l&gt;=<span class=\\"hljs-number\\">3</span>)needFix.push(l)\\n  <span class=\\"hljs-keyword\\">let</span> arr1=needFix.slice(),arr2=needFix.slice()\\n  arr1.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>b-a)\\n  arr2.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n  <span class=\\"hljs-keyword\\">let</span> _u=hasUpper,_l=hasLower,_n=hasNumber\\n  <span class=\\"hljs-keyword\\">let</span> count1=rules(s.length,arr1)+_u+_l+_n\\n  _u=hasUpper,_l=hasLower,_n=hasNumber\\n  <span class=\\"hljs-keyword\\">let</span> count2=rules(s.length,arr2)+_u+_l+_n\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-built_in\\">Math</span>.min(count1,count2)\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">rules</span>(<span class=\\"hljs-params\\">len,arr</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>,long=len,valid=<span class=\\"hljs-literal\\">true</span>\\n    <span class=\\"hljs-keyword\\">if</span>(len&lt;=<span class=\\"hljs-number\\">20</span>){\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(arr[i]&lt;=<span class=\\"hljs-number\\">2</span>)<span class=\\"hljs-keyword\\">continue</span>\\n        valid=<span class=\\"hljs-literal\\">false</span>\\n        <span class=\\"hljs-keyword\\">let</span> c=<span class=\\"hljs-built_in\\">Math</span>.floor((arr[i])/<span class=\\"hljs-number\\">3</span>)\\n        count+=c\\n        <span class=\\"hljs-keyword\\">let</span> limit=c\\n        <span class=\\"hljs-keyword\\">while</span>(limit--&gt;<span class=\\"hljs-number\\">0</span>){\\n          <span class=\\"hljs-keyword\\">if</span>(_n&gt;<span class=\\"hljs-number\\">0</span>){\\n            _n=<span class=\\"hljs-number\\">0</span>\\n          }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(_u&gt;<span class=\\"hljs-number\\">0</span>){\\n            _u=<span class=\\"hljs-number\\">0</span>\\n          }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(_l&gt;<span class=\\"hljs-number\\">0</span>){\\n            _l=<span class=\\"hljs-number\\">0</span>\\n          }<span class=\\"hljs-keyword\\">else</span>{\\n            <span class=\\"hljs-keyword\\">break</span>\\n          }\\n        }\\n\\n        arr[i]=<span class=\\"hljs-number\\">0</span>\\n      }\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">let</span> rest=len<span class=\\"hljs-number\\">-20</span>\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(rest===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">break</span>\\n        <span class=\\"hljs-keyword\\">if</span>(arr[i]&lt;=<span class=\\"hljs-number\\">2</span>)<span class=\\"hljs-keyword\\">continue</span>\\n        valid=<span class=\\"hljs-literal\\">false</span>\\n        <span class=\\"hljs-keyword\\">let</span> deleteLen=arr[i]-(<span class=\\"hljs-built_in\\">Math</span>.floor(arr[i]/<span class=\\"hljs-number\\">3</span>)*<span class=\\"hljs-number\\">3</span><span class=\\"hljs-number\\">-1</span>)\\n        <span class=\\"hljs-keyword\\">if</span>(deleteLen&lt;=rest){\\n          count+=deleteLen\\n          len-=deleteLen\\n          rest-=deleteLen\\n          arr[i]-=deleteLen\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n          count+=rest\\n          len-=rest\\n          arr[i]-=rest\\n          rest-=rest\\n        }\\n      }             \\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(valid){\\n      <span class=\\"hljs-keyword\\">if</span>(len&gt;<span class=\\"hljs-number\\">20</span>){\\n        count+=len<span class=\\"hljs-number\\">-20</span>\\n        len-=<span class=\\"hljs-number\\">20</span>\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> count\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> count+rules(len,arr)\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"strong-password-checker","created_at":"2019-04-28","timeArr":[2019,3,28,15,26,44,0],"hasThinking":false,"content":"<p>一个强密码应满足以下所有条件：</p>\\n\\n<ol>\\n\\t<li>由至少6个，至多20个字符组成。</li>\\n\\t<li>至少包含一个小写字母，一个大写字母，和一个数字。</li>\\n\\t<li>同一字符<strong>不能</strong>连续出现三次 (比如 &quot;...aaa...&quot; 是不允许的, 但是&nbsp;&quot;...aa...a...&quot; 是可以的)。</li>\\n</ol>\\n\\n<p>编写函数&nbsp;strongPasswordChecker(s)，s 代表输入字符串，如果 s 已经符合强密码条件，则返回0；否则返回要将 s 修改为满足强密码条件的字符串所需要进行修改的<strong>最小</strong>步数。</p>\\n\\n<p>插入、删除、替换任一字符都算作一次修改。</p>\\n","title":"420. 强密码检验器","relatedTags":["贪心","字符串","堆（优先队列）"],"difficult":"Hard","lang":["javascript"],"uniqueID":"420","slug":"420-Strong-Password-Checker"}')}}]);