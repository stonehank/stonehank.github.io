(window.webpackJsonp=window.webpackJsonp||[]).push([[542],{1340:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">target</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minFlips = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">target</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> last=target[<span class=\\"hljs-number\\">0</span>]\\n    <span class=\\"hljs-keyword\\">let</span> res=last===<span class=\\"hljs-string\\">\'0\'</span> ? <span class=\\"hljs-number\\">0</span> : <span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;target.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(target[i]===last)<span class=\\"hljs-keyword\\">continue</span>\\n        last=target[i]\\n        res++\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"bulb-switcher-iv","created_at":"2020-07-26","timeArr":[2020,6,26,10,37,31,0],"hasThinking":false,"content":"<p>房间中有 <code>n</code> 个灯泡，编号从 <code>0</code> 到 <code>n-1</code> ，自左向右排成一行。最开始的时候，所有的灯泡都是 <strong>关</strong> 着的。</p>\\n\\n<p>请你设法使得灯泡的开关状态和 <code>target</code> 描述的状态一致，其中 <code>target[i]</code> 等于 <code>1</code> 第 <code>i</code> 个灯泡是开着的，等于 <code>0</code> 意味着第 <code>i</code> 个灯是关着的。</p>\\n\\n<p>有一个开关可以用于翻转灯泡的状态，翻转操作定义如下：</p>\\n\\n<ul>\\n\\t<li>选择当前配置下的任意一个灯泡（下标为 <code>i</code> ）</li>\\n\\t<li>翻转下标从 <code>i</code> 到 <code>n-1</code> 的每个灯泡</li>\\n</ul>\\n\\n<p>翻转时，如果灯泡的状态为 <code>0</code> 就变为 <code>1</code>，为 <code>1</code> 就变为 <code>0</code> 。</p>\\n\\n<p>返回达成 <code>target</code> 描述的状态所需的 <strong>最少</strong> 翻转次数。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>target = &quot;10111&quot;\\n<strong>输出：</strong>3\\n<strong>解释：</strong>初始配置 &quot;00000&quot;.\\n从第 3 个灯泡（下标为 2）开始翻转 &quot;00000&quot; -&gt; &quot;00111&quot;\\n从第 1 个灯泡（下标为 0）开始翻转 &quot;00111&quot; -&gt; &quot;11000&quot;\\n从第 2 个灯泡（下标为 1）开始翻转 &quot;11000&quot; -&gt; &quot;10111&quot;\\n至少需要翻转 3 次才能达成 target 描述的状态</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>target = &quot;101&quot;\\n<strong>输出：</strong>3\\n<strong>解释：</strong>&quot;000&quot; -&gt; &quot;111&quot; -&gt; &quot;100&quot; -&gt; &quot;101&quot;.\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>target = &quot;00000&quot;\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>target = &quot;001011101&quot;\\n<strong>输出：</strong>5\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= target.length &lt;= 10^5</code></li>\\n\\t<li><code>target[i] == &#39;0&#39;</code> 或者 <code>target[i] == &#39;1&#39;</code></li>\\n</ul>\\n","title":"1529. 灯泡开关 IV","relatedTags":["贪心","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1529","slug":"1529-Bulb-Switcher-IV"}')}}]);