(window.webpackJsonp=window.webpackJsonp||[]).push([[317],{1115:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for a binary tree node.\\n * function TreeNode(val) {\\n *     this.val = val;\\n *     this.left = this.right = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">root</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">x</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> btreeGameWinningMove = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">root, n, x</span>) </span>{\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">countSubNodes</span>(<span class=\\"hljs-params\\">root</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(!root)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">return</span> countSubNodes(root.left)+countSubNodes(root.right)+<span class=\\"hljs-number\\">1</span>\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">findNodeX</span>(<span class=\\"hljs-params\\">root,x</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(root.val===x){\\n      <span class=\\"hljs-keyword\\">return</span> root\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> left=<span class=\\"hljs-literal\\">null</span>,right=<span class=\\"hljs-literal\\">null</span>\\n    <span class=\\"hljs-keyword\\">if</span>(root.left)left=findNodeX(root.left,x)\\n    <span class=\\"hljs-keyword\\">if</span>(left)<span class=\\"hljs-keyword\\">return</span> left\\n    <span class=\\"hljs-keyword\\">if</span>(root.right)right=findNodeX(root.right,x)\\n    <span class=\\"hljs-keyword\\">if</span>(right)<span class=\\"hljs-keyword\\">return</span> right\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> nodeX=findNodeX(root,x)\\n  <span class=\\"hljs-keyword\\">let</span> subXCounts=countSubNodes(nodeX)\\n  <span class=\\"hljs-keyword\\">let</span> restCounts=n-subXCounts\\n  <span class=\\"hljs-keyword\\">let</span> xLeftCounts=countSubNodes(nodeX.left)\\n  <span class=\\"hljs-keyword\\">let</span> xRightCounts=countSubNodes(nodeX.right)\\n  \\n  <span class=\\"hljs-keyword\\">return</span> restCounts&gt;subXCounts || xLeftCounts&gt;n- xLeftCounts || xRightCounts&gt;n- xRightCounts\\n};\\n</code></pre>\\n"],"querySlug":"binary-tree-coloring-game","created_at":"2019-08-04","timeArr":[2019,7,4,12,34,56,0],"hasThinking":false,"content":"<p>有两位极客玩家参与了一场「二叉树着色」的游戏。游戏中，给出二叉树的根节点&nbsp;<code>root</code>，树上总共有 <code>n</code> 个节点，且 <code>n</code> 为奇数，其中每个节点上的值从&nbsp;<code>1</code> 到&nbsp;<code>n</code>&nbsp;各不相同。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p>游戏从「一号」玩家开始（「一号」玩家为红色，「二号」玩家为蓝色），最开始时，</p>\\n\\n<p>「一号」玩家从 <code>[1, n]</code>&nbsp;中取一个值&nbsp;<code>x</code>（<code>1 &lt;= x &lt;= n</code>）；</p>\\n\\n<p>「二号」玩家也从&nbsp;<code>[1, n]</code>&nbsp;中取一个值&nbsp;<code>y</code>（<code>1 &lt;= y &lt;= n</code>）且&nbsp;<code>y != x</code>。</p>\\n\\n<p>「一号」玩家给值为&nbsp;<code>x</code>&nbsp;的节点染上红色，而「二号」玩家给值为&nbsp;<code>y</code>&nbsp;的节点染上蓝色。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p>之后两位玩家轮流进行操作，每一回合，玩家选择一个他之前涂好颜色的节点，将所选节点一个 <strong>未着色 </strong>的邻节点（即左右子节点、或父节点）进行染色。</p>\\n\\n<p>如果当前玩家无法找到这样的节点来染色时，他的回合就会被跳过。</p>\\n\\n<p>若两个玩家都没有可以染色的节点时，游戏结束。着色节点最多的那位玩家获得胜利 ✌️。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p>现在，假设你是「二号」玩家，根据所给出的输入，假如存在一个&nbsp;<code>y</code>&nbsp;值可以确保你赢得这场游戏，则返回&nbsp;<code>true</code>；若无法获胜，就请返回 <code>false</code>。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<p><strong><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/08/04/1480-binary-tree-coloring-game.png\\" style=\\"height: 186px; width: 300px;\\"></strong></p>\\n\\n<pre><strong>输入：</strong>root = [1,2,3,4,5,6,7,8,9,10,11], n = 11, x = 3\\n<strong>输出：</strong>True\\n<strong>解释：</strong>第二个玩家可以选择值为 2 的节点。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>二叉树的根节点为&nbsp;<code>root</code>，树上由 <code>n</code> 个节点，节点上的值从 <code>1</code> 到 <code>n</code> 各不相同。</li>\\n\\t<li><code>n</code> 为奇数。</li>\\n\\t<li><code>1 &lt;= x &lt;= n&nbsp;&lt;= 100</code></li>\\n</ul>\\n","title":"1145. 二叉树着色游戏","relatedTags":["树","深度优先搜索","二叉树"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1145","slug":"1145-Binary-Tree-Coloring-Game"}')}}]);