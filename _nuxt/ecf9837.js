(window.webpackJsonp=window.webpackJsonp||[]).push([[602],{1400:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">twoSum</span><span class=\\"hljs-params\\">(self, numbers, target)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type numbers: List[int]\\n        :type target: int\\n        :rtype: List[int]\\n        \\"\\"\\"</span>\\n        mem={}\\n        <span class=\\"hljs-keyword\\">for</span> i,n <span class=\\"hljs-keyword\\">in</span> enumerate(numbers):\\n            <span class=\\"hljs-keyword\\">if</span> n <span class=\\"hljs-keyword\\">in</span> mem:<span class=\\"hljs-keyword\\">return</span> [mem[n],i+<span class=\\"hljs-number\\">1</span>]\\n            mem[target-n]=i+<span class=\\"hljs-number\\">1</span>\\n</code></pre>\\n"],"querySlug":"two-sum-ii-input-array-is-sorted","created_at":"2019-02-23","timeArr":[2019,1,23,16,33,58,0],"hasThinking":false,"content":"<p>给定一个已按照<strong><em> </em>非递减顺序排列&nbsp; </strong>的整数数组&nbsp;<code>numbers</code> ，请你从数组中找出两个数满足相加之和等于目标数&nbsp;<code>target</code> 。</p>\\n\\n<p>函数应该以长度为 <code>2</code> 的整数数组的形式返回这两个数的下标值<em>。</em><code>numbers</code> 的下标 <strong>从 1 开始计数</strong> ，所以答案数组应当满足 <code>1 &lt;= answer[0] &lt; answer[1] &lt;= numbers.length</code> 。</p>\\n\\n<p>你可以假设每个输入 <strong>只对应唯一的答案</strong> ，而且你 <strong>不可以</strong> 重复使用相同的元素。</p>\\n&nbsp;\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numbers = [2,7,11,15], target = 9\\n<strong>输出：</strong>[1,2]\\n<strong>解释：</strong>2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numbers = [2,3,4], target = 6\\n<strong>输出：</strong>[1,3]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>numbers = [-1,0], target = -1\\n<strong>输出：</strong>[1,2]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 &lt;= numbers.length &lt;= 3 * 10<sup>4</sup></code></li>\\n\\t<li><code>-1000 &lt;= numbers[i] &lt;= 1000</code></li>\\n\\t<li><code>numbers</code> 按 <strong>非递减顺序</strong> 排列</li>\\n\\t<li><code>-1000 &lt;= target &lt;= 1000</code></li>\\n\\t<li><strong>仅存在一个有效答案</strong></li>\\n</ul>\\n","title":"167. 两数之和 II - 输入有序数组","relatedTags":["数组","双指针","二分查找"],"difficult":"Easy","lang":["python"],"uniqueID":"167","slug":"167-Two-Sum-II-Input-array-is-sorted"}')}}]);