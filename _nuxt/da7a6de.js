(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{595:function(n){n.exports=JSON.parse('{"content":"<h2 id=\\"githubapi-authorization\\">GithubAPI-Authorization</h2>\\n<p>一些特定的API，例如获取<code>user</code>的public资料，<code>repo</code>的内容等，不认证也可以获取，\\n区别是，不认证，大约每个小时只有60次调用的次数限制，而使用认证后，则大约有5000次的调用次数。</p>\\n<p>认证有2方面，</p>\\n<ol>\\n<li><p>使用你自己的名义去做一些事情</p>\\n</li>\\n<li><p>使用他人的名义去做一些事情</p>\\n</li>\\n</ol>\\n<h3 id=\\"yi-zi-ji-ming-yi\\">以自己名义</h3>\\n<p>先说第一种，第一种，当然可以在网页上操作，这是最直接的，如果你需要用控制台调用api，\\n那么你需要建立一个<code>personal token</code>，在github的setting里面，里面可以勾选对应的<code>scope</code>也就是允许的范围。</p>\\n<p>例如，勾选<code>public_repo</code>，那么就可以使用api去<code>create issue</code>，<code>create comment</code>等等</p>\\n<p>具体的调用方式可以放在header或者parameter</p>\\n<ul>\\n<li>header</li>\\n</ul>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">var</span> request = <span class=\\"hljs-keyword\\">new</span> Request(<span class=\\"hljs-string\\">\'https://api.github.com/user/{username}\'</span>,{\\n    <span class=\\"hljs-attr\\">headers</span>: <span class=\\"hljs-keyword\\">new</span> Headers({\\n      <span class=\\"hljs-string\\">\'Authorization\'</span>: <span class=\\"hljs-string\\">\'token xxxxxxxxxxxxxxxx\'</span>\\n    })\\n});\\nfetch(request)\\n.then(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">data</span>=&gt;</span>data.json()).then(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">obj</span>=&gt;</span>{\\n  <span class=\\"hljs-built_in\\">console</span>.log(obj)\\n})</code></pre></code></pre>\\n<ul>\\n<li>parameter</li>\\n</ul>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code>fetch(<span class=\\"hljs-string\\">\\"https://api.github.com/user/{username}/?access_token=token xxxxxxxxxxxxxx\\"</span>)\\n.then(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">data</span>=&gt;</span>data.json()).then(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">obj</span>=&gt;</span>{\\n  <span class=\\"hljs-built_in\\">console</span>.log(obj)\\n})</code></pre></code></pre>\\n<h3 id=\\"yi-ta-ren-ming-yi\\">以他人名义</h3>\\n<p>可以使用第三方认证，也就是setting里面的<code>oAuth token</code>，填写你的应用或网站的url，\\n<code>callback</code>的意思是，当客户认证完毕会重定向到哪里。</p>\\n<p><code>callback</code>一般指向的是你自己的服务器，在那里你需要将重定向的url中的参数<code>code</code>，你的<code>client_id</code>，<code>client_secret</code>合并去获取用户的<code>token</code>。</p>\\n<p>然后就可以像使用这个token(使用方法见上面)去做一些事情了。</p>\\n<p>注意：</p>\\n<ol>\\n<li><code>client_secret</code>不可以透漏给其他人，否则别人可以借你的名义去获取其他人的授权。</li>\\n<li>关于合并数据获取token的过程，要在后端进行，前端也可以进行，但没有安全性可言。</li>\\n</ol>\\n","toc":[{"anchor":"githubapi-authorization","level":2,"text":"GithubAPI-Authorization"},{"anchor":"yi-zi-ji-ming-yi","level":3,"text":"以自己名义"},{"anchor":"yi-ta-ren-ming-yi","level":3,"text":"以他人名义"}],"relatedTags":null,"created_at":"2018-09-28","timeArr":[2018,8,28,0,0,0,0],"title":"关于github-api.v3认证方面的总结","uuid":"734ec46092d55f646e70dce2766a3c42e017cad4","summary":"<h4>GithubAPI-Authorization</h4>\\n<p>一些特定的API，例如获取<code>user</code>的public资料，<code>repo</code>的内容等，不认证也可以获取，\\n区别是，不认证，大约每个小时只有60次调用的次数限制，而使用认证后，则大约有5000次的调用次数。</p>\\n<p>认证有2方面，</p>\\n<ol>\\n<li>\\n<p>使用你自己的名义去做一些事情</p>\\n</li>\\n<li>\\n<p>...</p>\\n</li>\\n</ol>","slug":"guan-yu-github-api.v3-ren-zheng-fang-mian-de-zong-jie","sha":"6b205fb9eb1995355142e4b491f0e45bac6ca9f9"}')}}]);