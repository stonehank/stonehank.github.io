(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{1019:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> canThreePartsEqualSum = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(A.length&lt;<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">let</span> sum=A.reduce(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a+b)\\n  <span class=\\"hljs-keyword\\">if</span>(sum % <span class=\\"hljs-number\\">3</span>!==<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-keyword\\">let</span> target=sum/<span class=\\"hljs-number\\">3</span>\\n  <span class=\\"hljs-keyword\\">let</span> curSum=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> time=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A.length;i++){\\n    curSum+=A[i]\\n    <span class=\\"hljs-keyword\\">if</span>(curSum===target){\\n      curSum=<span class=\\"hljs-number\\">0</span>\\n      time++\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> time===<span class=\\"hljs-number\\">3</span> || (time&gt;<span class=\\"hljs-number\\">3</span> &amp;&amp; target===<span class=\\"hljs-number\\">0</span>)\\n};\\n</code></pre>\\n"],"querySlug":"partition-array-into-three-parts-with-equal-sum","created_at":"2020-03-11","timeArr":[2020,2,11,23,15,14,0],"hasThinking":false,"content":"<p>给你一个整数数组 <code>arr</code>，只有可以将其划分为三个和相等的 <strong>非空</strong> 部分时才返回 <code>true</code>，否则返回 <code>false</code>。</p>\\n\\n<p>形式上，如果可以找出索引 <code>i + 1 < j</code> 且满足 <code>(arr[0] + arr[1] + ... + arr[i] == arr[i + 1] + arr[i + 2] + ... + arr[j - 1] == arr[j] + arr[j + 1] + ... + arr[arr.length - 1])</code> 就可以将数组三等分。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,2,1,-6,6,-7,9,1,2,0,1]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [0,2,1,-6,6,7,9,-1,2,0,1]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>arr = [3,3,6,5,-2,2,5,1,-9,4]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>3 <= arr.length <= 5 * 10<sup>4</sup></code></li>\\n\\t<li><code>-10<sup>4</sup> <= arr[i] <= 10<sup>4</sup></code></li>\\n</ul>\\n","title":"1013. 将数组分成和相等的三个部分","relatedTags":["贪心","数组"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1013","slug":"1013-Partition-Array-Into-Three-Parts-With-Equal-Sum"}')}}]);