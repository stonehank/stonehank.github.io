(window.webpackJsonp=window.webpackJsonp||[]).push([[994],{1792:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for a binary tree node.\\n * function TreeNode(val) {\\n *     this.val = val;\\n *     this.left = this.right = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">root</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">v</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">d</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{TreeNode}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> addOneRow = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">root, v, d</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span>(d===<span class=\\"hljs-number\\">1</span>){\\n    <span class=\\"hljs-keyword\\">let</span> node=<span class=\\"hljs-keyword\\">new</span> TreeNode(v)\\n    node.left=root\\n    root=node\\n  }<span class=\\"hljs-keyword\\">else</span>{\\n    <span class=\\"hljs-keyword\\">let</span> arr=[root]\\n    <span class=\\"hljs-keyword\\">while</span>(d--&gt;<span class=\\"hljs-number\\">2</span>){\\n      <span class=\\"hljs-keyword\\">let</span> len=arr.length\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len;i++){\\n        <span class=\\"hljs-keyword\\">let</span> node=arr.shift()\\n        <span class=\\"hljs-keyword\\">if</span>(node.left)arr.push(node.left)\\n        <span class=\\"hljs-keyword\\">if</span>(node.right)arr.push(node.right)\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;arr.length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> l=arr[i].left,r=arr[i].right\\n      arr[i].left=<span class=\\"hljs-keyword\\">new</span> TreeNode(v)\\n      arr[i].right=<span class=\\"hljs-keyword\\">new</span> TreeNode(v)\\n      arr[i].left.left=l\\n      arr[i].right.right=r\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> root\\n};\\n</code></pre>\\n"],"querySlug":"add-one-row-to-tree","created_at":"2019-03-19","timeArr":[2019,2,19,14,23,6,0],"hasThinking":false,"content":"<p>给定一个二叉树，根节点为第1层，深度为 1。在其第&nbsp;<code>d</code>&nbsp;层追加一行值为&nbsp;<code>v</code>&nbsp;的节点。</p>\\n\\n<p>添加规则：给定一个深度值 <code>d</code> （正整数），针对深度为 <code>d-1</code> 层的每一<strong>非空</strong>节点 <code>N</code>，为 <code>N</code> 创建两个值为&nbsp;<code>v</code>&nbsp;的左子树和右子树。</p>\\n\\n<p>将&nbsp;<code>N</code> 原先的左子树，连接为新节点&nbsp;<code>v</code> 的左子树；将&nbsp;<code>N</code> 原先的右子树，连接为新节点&nbsp;<code>v</code> 的右子树。</p>\\n\\n<p>如果 <code>d</code> 的值为 1，深度 d - 1 不存在，则创建一个新的根节点 <code>v</code>，原先的整棵树将作为 <code>v</code> 的左子树。</p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> \\n二叉树如下所示:\\n       4\\n     /   \\\\\\n    2     6\\n   / \\\\   / \\n  3   1 5   \\n\\n<strong>v = 1</strong>\\n\\n<strong>d = 2</strong>\\n\\n<strong>输出:</strong> \\n       4\\n      / \\\\\\n     1   1\\n    /     \\\\\\n   2       6\\n  / \\\\     / \\n 3   1   5   \\n\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> \\n二叉树如下所示:\\n      4\\n     /   \\n    2    \\n   / \\\\   \\n  3   1    \\n\\n<strong>v = 1</strong>\\n\\n<strong>d = 3</strong>\\n\\n<strong>输出:</strong> \\n      4\\n     /   \\n    2\\n   / \\\\    \\n  1   1\\n /     \\\\  \\n3       1\\n</pre>\\n\\n<p><strong>注意:</strong></p>\\n\\n<ol>\\n\\t<li>输入的深度值 d 的范围是：[1，二叉树最大深度 + 1]。</li>\\n\\t<li>输入的二叉树至少有一个节点。</li>\\n</ol>\\n","title":"623. 在二叉树中增加一行","relatedTags":["树","深度优先搜索","广度优先搜索","二叉树"],"difficult":"Middle","lang":["javascript"],"uniqueID":"623","slug":"623-Add-One-Row-to-Tree"}')}}]);