(window.webpackJsonp=window.webpackJsonp||[]).push([[453],{1251:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">light</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numTimesAllBlue = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">light</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> uf=<span class=\\"hljs-built_in\\">Array</span>(light.length+<span class=\\"hljs-number\\">1</span>).fill().map(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">e,i</span>)=&gt;</span>i)\\n  <span class=\\"hljs-keyword\\">let</span> weight=<span class=\\"hljs-built_in\\">Array</span>(light.length+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-number\\">1</span>)\\n  weight[<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-number\\">500001</span>\\n  <span class=\\"hljs-keyword\\">let</span> group=light.length+<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">let</span> zeroGroup=<span class=\\"hljs-number\\">0</span>\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">find</span>(<span class=\\"hljs-params\\">i</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(i!==uf[i]){\\n      uf[i]=find(uf[i])\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> uf[i]\\n  }\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">union</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> i=find(a),\\n      j=find(b)\\n    <span class=\\"hljs-keyword\\">if</span>(i===j)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span>(weight[i]&lt;weight[j]){\\n      uf[i]=j\\n      weight[j]+=weight[i]\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      uf[j]=i\\n      weight[i]+=weight[j]\\n    }\\n    group--\\n  }\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">connected</span>(<span class=\\"hljs-params\\">a,b</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> i=find(a),\\n      j=find(b)\\n    <span class=\\"hljs-keyword\\">return</span> i===j\\n  }\\n\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;light.length;i++){\\n    union(light[i],light[i]<span class=\\"hljs-number\\">-1</span>)\\n    <span class=\\"hljs-keyword\\">if</span>(weight[<span class=\\"hljs-number\\">0</span>]<span class=\\"hljs-number\\">-500001</span> + group <span class=\\"hljs-number\\">-1</span> ===light.length){\\n      res++\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(uf,weight,group)</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n  \\n\\n};\\n</code></pre>\\n"],"querySlug":"bulb-switcher-iii","created_at":"2020-03-08","timeArr":[2020,2,8,10,52,6,0],"hasThinking":false,"content":"<p>房间中有 <code>n</code> 枚灯泡，编号从 <code>1</code> 到 <code>n</code>，自左向右排成一排。最初，所有的灯都是关着的。</p>\\n\\n<p>在 <em>k</em>&nbsp; 时刻（ <em>k</em> 的取值范围是 <code>0</code> 到 <code>n - 1</code>），我们打开 <code>light[k]</code> 这个灯。</p>\\n\\n<p>灯的颜色要想 <strong>变成蓝色</strong> 就必须同时满足下面两个条件：</p>\\n\\n<ul>\\n\\t<li>灯处于打开状态。</li>\\n\\t<li>排在它之前（左侧）的所有灯也都处于打开状态。</li>\\n</ul>\\n\\n<p>请返回能够让 <strong>所有开着的</strong> 灯都 <strong>变成蓝色</strong> 的时刻 <strong>数目 。</strong></p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/03/08/sample_2_1725.png\\" style=\\"height: 254px; width: 575px;\\"></p>\\n\\n<pre><strong>输入：</strong>light = [2,1,3,5,4]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>所有开着的灯都变蓝的时刻分别是 1，2 和 4 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>light = [3,2,4,1,5]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>所有开着的灯都变蓝的时刻分别是 3 和 4（index-0）。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>light = [4,1,2,3]\\n<strong>输出：</strong>1\\n<strong>解释：</strong>所有开着的灯都变蓝的时刻是 3（index-0）。\\n第 4 个灯在时刻 3 变蓝。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>light = [2,1,4,3,6,5]\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>light = [1,2,3,4,5,6]\\n<strong>输出：</strong>6\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>n ==&nbsp;light.length</code></li>\\n\\t<li><code>1 &lt;= n &lt;= 5 * 10^4</code></li>\\n\\t<li><code>light</code> 是 <code>[1, 2, ..., n]</code> 的一个排列。</li>\\n</ul>\\n","title":"1375. 灯泡开关 III","relatedTags":["数组"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1375","slug":"1375-Bulb-Switcher-III"}')}}]);