(window.webpackJsonp=window.webpackJsonp||[]).push([[1339],{2137:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">K</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numsSameConsecDiff = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N, K</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> result=[]\\n    <span class=\\"hljs-keyword\\">let</span> t=N\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">backtrack</span>(<span class=\\"hljs-params\\">temp,t</span>)</span>{\\n        <span class=\\"hljs-keyword\\">if</span>(t===<span class=\\"hljs-number\\">0</span>){\\n            result.push(temp)\\n            <span class=\\"hljs-keyword\\">return</span>\\n        }\\n\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;<span class=\\"hljs-number\\">10</span>;i++){\\n            <span class=\\"hljs-keyword\\">if</span>(t===N &amp;&amp; i===<span class=\\"hljs-number\\">0</span> &amp;&amp; N!==<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">continue</span>\\n            <span class=\\"hljs-keyword\\">if</span>(temp[temp.length<span class=\\"hljs-number\\">-1</span>]){\\n                <span class=\\"hljs-keyword\\">if</span>(<span class=\\"hljs-built_in\\">Math</span>.abs(temp[temp.length<span class=\\"hljs-number\\">-1</span>]-i)!==K){\\n                    <span class=\\"hljs-keyword\\">continue</span>\\n                }\\n            }\\n            backtrack(temp+i,t<span class=\\"hljs-number\\">-1</span>)\\n        }\\n    }\\n    backtrack(<span class=\\"hljs-string\\">\'\'</span>,N)\\n    <span class=\\"hljs-keyword\\">return</span> result\\n};\\n</code></pre>\\n"],"querySlug":"numbers-with-same-consecutive-differences","created_at":"2018-12-30","timeArr":[2018,11,30,10,44,4,0],"hasThinking":false,"content":"<p>返回所有长度为 <code>n</code> 且满足其每两个连续位上的数字之间的差的绝对值为 <code>k</code> 的<strong> 非负整数 </strong>。</p>\\n\\n<p>请注意，<strong>除了 </strong>数字 <code>0</code> 本身之外，答案中的每个数字都 <strong>不能 </strong>有前导零。例如，<code>01</code> 有一个前导零，所以是无效的；但 <code>0</code> 是有效的。</p>\\n\\n<p>你可以按 <strong>任何顺序</strong> 返回答案。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 3, k = 7\\n<strong>输出：</strong>[181,292,707,818,929]\\n<strong>解释：</strong>注意，070 不是一个有效的数字，因为它有前导零。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 2, k = 1\\n<strong>输出：</strong>[10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 2, k = 0\\n<strong>输出：</strong>[11,22,33,44,55,66,77,88,99]\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 2, k = 2\\n<strong>输出：</strong>[13,20,24,31,35,42,46,53,57,64,68,75,79,86,97]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 <= n <= 9</code></li>\\n\\t<li><code>0 <= k <= 9</code></li>\\n</ul>\\n","title":"967. 连续差相同的数字","relatedTags":["广度优先搜索","回溯"],"difficult":"Middle","lang":["javascript"],"uniqueID":"967","slug":"967-Numbers-With-Same-Consecutive-Differences"}')}}]);