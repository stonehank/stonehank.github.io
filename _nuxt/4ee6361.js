(window.webpackJsonp=window.webpackJsonp||[]).push([[565],{1363:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">preferences</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">pairs</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> unhappyFriends = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n, preferences, pairs</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> perHash=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;preferences.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(perHash[i]==<span class=\\"hljs-literal\\">null</span>)perHash[i]={}\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;preferences[i].length;j++){\\n            <span class=\\"hljs-keyword\\">let</span> u=preferences[i][j]\\n            perHash[i][u]=preferences[i].length-j\\n        }\\n    }\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">check</span>(<span class=\\"hljs-params\\">x,y,u,v</span>)</span>{\\n        <span class=\\"hljs-keyword\\">if</span>(perHash[x][u]&gt;perHash[x][y] &amp;&amp; perHash[u][x]&gt;perHash[u][v])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n        <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(perHash)</span>\\n    <span class=\\"hljs-keyword\\">let</span> unHappy=<span class=\\"hljs-built_in\\">Array</span>(n).fill(<span class=\\"hljs-literal\\">false</span>)\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;pairs.length;i++){\\n        <span class=\\"hljs-keyword\\">let</span> [x,y]=pairs[i]\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;pairs.length;j++){\\n            <span class=\\"hljs-keyword\\">if</span>(i===j)<span class=\\"hljs-keyword\\">continue</span>\\n            <span class=\\"hljs-keyword\\">let</span> [u,v]=pairs[j]\\n            <span class=\\"hljs-comment\\">// let xHappy=true</span>\\n            <span class=\\"hljs-comment\\">// let yHappy=true</span>\\n            <span class=\\"hljs-comment\\">// console.log(x,y,u,v)</span>\\n            <span class=\\"hljs-keyword\\">if</span>(check(x,y,u,v) || check(x,y,v,u)){\\n                <span class=\\"hljs-keyword\\">if</span>(!unHappy[x]){\\n                    unHappy[x]=<span class=\\"hljs-literal\\">true</span>\\n                    res++\\n                }\\n            }\\n            <span class=\\"hljs-keyword\\">if</span>(check(y,x,u,v) || check(y,x,v,u)){\\n                <span class=\\"hljs-keyword\\">if</span>(!unHappy[y]){\\n                    unHappy[y]=<span class=\\"hljs-literal\\">true</span>\\n                    res++\\n                }\\n            }\\n            <span class=\\"hljs-comment\\">// console.log(xHappy,yHappy,\'---\')</span>\\n            <span class=\\"hljs-comment\\">// if(!xHappy &amp;&amp; !yHappy)break</span>\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"count-unhappy-friends","created_at":"2020-09-13","timeArr":[2020,8,13,11,36,4,0],"hasThinking":false,"content":"<p>给你一份 <code>n</code> 位朋友的亲近程度列表，其中 <code>n</code> 总是 <strong>偶数</strong> 。</p>\\n\\n<p>对每位朋友 <code>i</code>，<code>preferences[i]</code> 包含一份 <strong>按亲近程度从高</strong><strong>到低排列</strong> 的朋友列表。换句话说，排在列表前面的朋友与 <code>i</code> 的亲近程度比排在列表后面的朋友更高。每个列表中的朋友均以 <code>0</code> 到 <code>n-1</code> 之间的整数表示。</p>\\n\\n<p>所有的朋友被分成几对，配对情况以列表 <code>pairs</code> 给出，其中 <code>pairs[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> 表示 <code>x<sub>i</sub></code> 与 <code>y<sub>i</sub></code> 配对，且 <code>y<sub>i</sub></code> 与 <code>x<sub>i</sub></code> 配对。</p>\\n\\n<p>但是，这样的配对情况可能会是其中部分朋友感到不开心。在 <code>x</code> 与 <code>y</code> 配对且 <code>u</code> 与 <code>v</code> 配对的情况下，如果同时满足下述两个条件，<code>x</code> 就会不开心：</p>\\n\\n<ul>\\n\\t<li><code>x</code> 与 <code>u</code> 的亲近程度胜过 <code>x</code> 与 <code>y</code>，且</li>\\n\\t<li><code>u</code> 与 <code>x</code> 的亲近程度胜过 <code>u</code> 与 <code>v</code></li>\\n</ul>\\n\\n<p>返回 <strong>不开心的朋友的数目</strong> 。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>\\n朋友 1 不开心，因为：\\n- <strong>1 与 0 </strong>配对，但 <strong>1 与 3</strong> 的亲近程度比 <strong>1 与 0</strong> 高，且\\n- <strong>3 与 1</strong> 的亲近程度比 <strong>3 与 2</strong> 高。\\n朋友 3 不开心，因为：\\n- 3 与 2 配对，但 <strong>3 与 1</strong> 的亲近程度比 <strong>3 与 2</strong> 高，且\\n- <strong>1 与 3</strong> 的亲近程度比 <strong>1 与 0</strong> 高。\\n朋友 0 和 2 都是开心的。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 2, preferences = [[1], [0]], pairs = [[1, 0]]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>朋友 0 和 1 都开心。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 &lt;= n &lt;= 500</code></li>\\n\\t<li><code>n</code> 是偶数</li>\\n\\t<li><code>preferences.length&nbsp;== n</code></li>\\n\\t<li><code>preferences[i].length&nbsp;== n - 1</code></li>\\n\\t<li><code>0 &lt;= preferences[i][j] &lt;= n - 1</code></li>\\n\\t<li><code>preferences[i]</code> 不包含 <code>i</code></li>\\n\\t<li><code>preferences[i]</code> 中的所有值都是独一无二的</li>\\n\\t<li><code>pairs.length&nbsp;== n/2</code></li>\\n\\t<li><code>pairs[i].length&nbsp;== 2</code></li>\\n\\t<li><code>x<sub>i</sub> != y<sub>i</sub></code></li>\\n\\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub>&nbsp;&lt;= n - 1</code></li>\\n\\t<li>每位朋友都 <strong>恰好</strong> 被包含在一对中</li>\\n</ul>\\n","title":"1583. 统计不开心的朋友","relatedTags":["数组","模拟"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1583","slug":"1583-Count-Unhappy-Friends"}')}}]);