(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{588:function(n){n.exports=JSON.parse('{"content":"<p>对比了map和hashTable对数据存取的性能，key类型为string</p>\\n<p>测试方法：</p>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">// CODES是字符串组成的数组</span>\\n\\n<span class=\\"hljs-comment\\">// map</span>\\n<span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> x=<span class=\\"hljs-number\\">0</span>;x&lt;<span class=\\"hljs-number\\">2</span>;x++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k=<span class=\\"hljs-number\\">0</span>;k&lt;CODES.length;k++){\\n      <span class=\\"hljs-keyword\\">let</span> i=CODES[k]\\n      <span class=\\"hljs-keyword\\">if</span>(!m.has(i))m.set(i,<span class=\\"hljs-number\\">1</span>)\\n      <span class=\\"hljs-keyword\\">else</span> m.set(i,m.get(i)+<span class=\\"hljs-number\\">1</span>)\\n    }\\n  }\\n\\n<span class=\\"hljs-comment\\">// hashTable {}</span>\\n<span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> x=<span class=\\"hljs-number\\">0</span>;x&lt;<span class=\\"hljs-number\\">2</span>;x++){\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k=<span class=\\"hljs-number\\">0</span>;k&lt;CODES.length;k++){\\n    <span class=\\"hljs-keyword\\">let</span> i=CODES[k]\\n    <span class=\\"hljs-keyword\\">if</span>(!c[i])c[i]=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">else</span> c[i]++\\n  }\\n}</code></pre></code></pre>\\n<p>测试结果</p>\\n<pre><code><pre class=\\"hljs\\"><code>map:           hashTable:         \\n22,755         7,502          \\n±0.52%         ±0.65%         \\nfastest        67% slower              </code></pre></code></pre><p>测试地址:<a href=\\"https://jsperf.com/hanktest-map-vs-hashtable\\">https://jsperf.com/hanktest-map-vs-hashtable</a></p>\\n","toc":[],"relatedTags":null,"created_at":"2018-08-21","timeArr":[2018,7,21,0,0,0,0],"title":"对比map,{},[]的存取效率","uuid":"80cda11f9e18b118723c11b54a629d2ce4a71c79","summary":"<p>对比了map和hashTable对数据存取的性能，key类型为string</p>\\n<p>测试方法：</p>\\n<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">// CODES是字符串组成的数组</span>\\n\\n<span class=\\"hljs-comment\\">// map</span>\\n<span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> x=<span class=\\"hljs-number\\">0</span>;x&lt;<span class=\\"hljs-number\\">2</span>;x++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k=<span class=\\"hljs-number\\">0</span>;k&lt;CODES.length;k++){\\n      <span class=\\"hljs-keyword\\">let</span> i=CODES[k]\\n   ...</code></pre>","slug":"dui-bi-map-{}-[]-de-cun-qu-xiao-lv","sha":"d2b8968488e3098bc8d6a318374cc0b57ab9511d"}')}}]);