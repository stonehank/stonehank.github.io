(window.webpackJsonp=window.webpackJsonp||[]).push([[670],{1468:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> shortestPalindrome = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> [isPar,wi]=isP(s)\\n  <span class=\\"hljs-keyword\\">if</span>(isPar)<span class=\\"hljs-keyword\\">return</span> s\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'\'</span>,mid\\n  wi=s.indexOf(s[wi])\\n  <span class=\\"hljs-keyword\\">let</span> nxtID=s.lastIndexOf(s[wi])\\n  <span class=\\"hljs-keyword\\">while</span>(<span class=\\"hljs-literal\\">true</span>){\\n    <span class=\\"hljs-keyword\\">if</span>(nxtID===<span class=\\"hljs-number\\">-1</span>){\\n      <span class=\\"hljs-keyword\\">let</span> str=s.substring(wi),\\n          reverseS=str.split(<span class=\\"hljs-string\\">\'\'</span>).reverse().join(<span class=\\"hljs-string\\">\'\'</span>)\\n      <span class=\\"hljs-keyword\\">return</span> reverseS+shortestPalindrome(s.substring(<span class=\\"hljs-number\\">0</span>,wi))+str\\n    }\\n    mid=<span class=\\"hljs-built_in\\">Math</span>.floor((nxtID+wi) / <span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">if</span>((nxtID+wi) % <span class=\\"hljs-number\\">2</span>===<span class=\\"hljs-number\\">1</span>){\\n      <span class=\\"hljs-keyword\\">if</span>(check(mid,mid+<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-string\\">\'\'</span>))<span class=\\"hljs-keyword\\">return</span> res\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(check(mid<span class=\\"hljs-number\\">-1</span>,mid+<span class=\\"hljs-number\\">1</span>,s[mid]))<span class=\\"hljs-keyword\\">return</span> res \\n    }\\n    nxtID=s.lastIndexOf(s[wi],nxtID<span class=\\"hljs-number\\">-1</span>)\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">isP</span>(<span class=\\"hljs-params\\">str</span>)</span>{\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;str.length/<span class=\\"hljs-number\\">2</span>;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(str[i]!==str[str.length<span class=\\"hljs-number\\">-1</span>-i])<span class=\\"hljs-keyword\\">return</span> [<span class=\\"hljs-literal\\">false</span>,i]\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> [<span class=\\"hljs-literal\\">true</span>,<span class=\\"hljs-literal\\">null</span>]\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">check</span>(<span class=\\"hljs-params\\">l,r,str</span>)</span>{\\n    <span class=\\"hljs-keyword\\">while</span>(r&lt;s.length){\\n      <span class=\\"hljs-keyword\\">let</span> left,right=s[r]\\n      <span class=\\"hljs-keyword\\">if</span>(l&lt;<span class=\\"hljs-number\\">0</span>)left=right\\n      <span class=\\"hljs-keyword\\">else</span> left=s[l]\\n      <span class=\\"hljs-keyword\\">if</span>(left!==right)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      str=left+str+right\\n      l--;\\n      r++\\n    }\\n    <span class=\\"hljs-comment\\">// if(l&gt;=0 &amp;&amp; r&gt;=s.length)return false</span>\\n    res=str\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"shortest-palindrome","created_at":"2019-03-23","timeArr":[2019,2,23,15,9,4,0],"hasThinking":false,"content":"<p>给定一个字符串 <em><strong>s</strong></em>，你可以通过在字符串前面添加字符将其转换为回文串。找到并返回可以用这种方式转换的最短回文串。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"aacecaaa\\"\\n<strong>输出：</strong>\\"aaacecaaa\\"\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"abcd\\"\\n<strong>输出：</strong>\\"dcbabcd\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 <= s.length <= 5 * 10<sup>4</sup></code></li>\\n\\t<li><code>s</code> 仅由小写英文字母组成</li>\\n</ul>\\n","title":"214. 最短回文串","relatedTags":["字符串","字符串匹配","哈希函数","滚动哈希"],"difficult":"Hard","lang":["javascript"],"uniqueID":"214","slug":"214-Shortest-Palindrome"}')}}]);