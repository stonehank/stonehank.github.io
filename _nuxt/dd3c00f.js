(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{629:function(n){n.exports=JSON.parse('{"content":"<h4 id=\\"reacttransitiongroup\\">ReactTransitionGroup</h4>\\n<h4 id=\\"transition\\">Transition</h4>\\n<p>默认展示组件某个特定状态的样式，而不是创建渐变动画</p>\\n<p>例如：</p>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code>&lt;Transition\\n        <span class=\\"hljs-keyword\\">in</span>={toggleShow}\\n        timeout={<span class=\\"hljs-number\\">1000</span>}\\n        unmountOnExit\\n        &gt;\\n    {state=&gt;(\\n        &lt;div&gt;{state}&lt;/div&gt;\\n    )}\\n&lt;<span class=\\"hljs-regexp\\">/Transition&gt;</span></code></pre></code></pre>\\n<p>注意：子组件是函数（见下方children）</p>\\n<h2 id=\\"csstransition\\">CSSTransition</h2>\\n<p>展示组件从状态到另一个状态的动态变化，需要定义className和相关样式</p>\\n<p>例如：</p>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code>&lt;CSSTransition \\n        <span class=\\"hljs-keyword\\">in</span>={toggleShow}\\n        className=<span class=\\"hljs-string\\">\\"fade\\"</span>\\n        timeout={<span class=\\"hljs-number\\">300</span>}\\n        &gt;\\n    <span class=\\"hljs-comment\\">//子组件（需要动画的组件）</span>\\n&lt;<span class=\\"hljs-regexp\\">/CSSTransition&gt;</span></code></pre></code></pre>\\n<p>css中设置如下：</p>\\n<pre><code class=\\"language-css\\"><pre class=\\"hljs\\"><code>.fade-enter {\\n  opacity: 0.01;\\n}\\n.fade-enter-active {\\n  opacity: 1;\\n  transition: opacity 300ms;\\n}\\n.fade-exit {\\n  opacity: 1;\\n}\\n.fade-exit-active {\\n  opacity: 0.01;\\n  transition: opacity 300ms;\\n}</code></pre></code></pre>\\n<h4 id=\\"transitiongroup\\">TransitionGroup</h4>\\n<p>管理一些列组件的动画，例如列表</p>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code>&lt;ul&gt;\\n  &lt;TransitionGroup&gt;\\n    {items.map(({ id, text }) =&gt; (\\n      &lt;CSSTransition\\n        key={id}\\n        timeout={500}\\n        classNames=\\"fade\\"\\n      &gt;\\n        &lt;li&gt;{text}&lt;/li&gt;\\n      &lt;/CSSTransition&gt;\\n    ))}\\n  &lt;/TransitionGroup&gt;\\n&lt;<span class=\\"hljs-regexp\\">/ul&gt;</span></code></pre></code></pre>\\n<h4 id=\\"chang-yong-shu-xing\\">常用属性</h4>\\n<ul>\\n<li>children</li>\\n</ul>\\n<p>当children是一个函数时，接受一个参数state，state包含了内部组件的transition状态\\n<code>&#39;entering&#39;, &#39;entered&#39;, &#39;exiting&#39;, &#39;exited&#39;, &#39;unmounted&#39;</code></p>\\n<ul>\\n<li>in</li>\\n</ul>\\n<p>定义当前组件的状态(true为entered，false为exited)</p>\\n<ul>\\n<li>unmountOnExit </li>\\n</ul>\\n<p>当状态为exited的时候是否需要unmount</p>\\n<ul>\\n<li>timeout </li>\\n</ul>\\n<p>定义transition间隔，可以这么写：</p>\\n<pre><code class=\\"language-jsx\\"><pre class=\\"hljs\\"><code>timeout={{\\n  <span class=\\"hljs-attr\\">enter</span>:<span class=\\"hljs-number\\">300</span>,\\n  <span class=\\"hljs-attr\\">exit</span>:<span class=\\"hljs-number\\">300</span>\\n}}</code></pre></code></pre>\\n","toc":[{"anchor":"reacttransitiongroup","level":4,"text":"ReactTransitionGroup"},{"anchor":"transition","level":4,"text":"Transition"},{"anchor":"csstransition","level":2,"text":"CSSTransition"},{"anchor":"transitiongroup","level":4,"text":"TransitionGroup"},{"anchor":"chang-yong-shu-xing","level":4,"text":"常用属性"}],"relatedTags":null,"created_at":"2018-06-20","timeArr":[2018,5,20,0,0,0,0],"title":"react-transition-group","uuid":"a016c3917edd52dc61593c47a19f112ce3e57081","summary":"<h4>ReactTransitionGroup</h4>\\n<h4>Transition</h4>\\n<p>默认展示组件某个特定状态的样式，而不是创建渐变动画</p>\\n<p>例如：</p>\\n<pre class=\\"hljs\\"><code>&lt;Transition\\n        <span class=\\"hljs-keyword\\">in</span>={toggleShow}\\n        timeout={<span class=\\"hljs-number\\">1000</span>}\\n        unmountOnEx...</code></pre>","slug":"react-transition-group","sha":"2c184a72cccb6e8c5cb04541f46eb06b15533efa"}')}}]);