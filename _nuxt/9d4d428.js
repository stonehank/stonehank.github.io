(window.webpackJsonp=window.webpackJsonp||[]).push([[437],{1235:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">events</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maxEvents = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">events</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> pq=<span class=\\"hljs-keyword\\">new</span> PriorityQueue(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> maxDay=<span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">let</span> minDay=<span class=\\"hljs-literal\\">Infinity</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;events.length;i++){\\n    maxDay=<span class=\\"hljs-built_in\\">Math</span>.max(maxDay,events[i][<span class=\\"hljs-number\\">1</span>])\\n    minDay=<span class=\\"hljs-built_in\\">Math</span>.min(minDay,events[i][<span class=\\"hljs-number\\">0</span>])\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> aux=<span class=\\"hljs-built_in\\">Array</span>(maxDay+<span class=\\"hljs-number\\">1</span>).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span>[])\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [s,e] <span class=\\"hljs-keyword\\">of</span> events){\\n    aux[s].push(e)\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(aux)</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=minDay;i&lt;=maxDay;i++){\\n    <span class=\\"hljs-comment\\">// if(!aux[i])continue</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;aux[i].length;j++){\\n      pq.insert(aux[i][j])\\n    }\\n    <span class=\\"hljs-keyword\\">while</span>(pq.size()&gt;<span class=\\"hljs-number\\">0</span> &amp;&amp; pq.peek()&lt;i){\\n      pq.pop()\\n    }\\n    <span class=\\"hljs-comment\\">// console.log(i,pq.size(),pq.peek())</span>\\n    <span class=\\"hljs-keyword\\">if</span>(pq.size()&gt;<span class=\\"hljs-number\\">0</span>){\\n      pq.pop()\\n      res++\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n\\n<span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">PriorityQueue</span>(<span class=\\"hljs-params\\">compareFunction</span>) </span>{\\n  <span class=\\"hljs-keyword\\">if</span> (!compareFunction) {\\n    compareFunction = <span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a, b</span>) =&gt;</span> a - b\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> heap = [<span class=\\"hljs-literal\\">null</span>]\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">swim</span>(<span class=\\"hljs-params\\">idx</span>) </span>{\\n    <span class=\\"hljs-keyword\\">if</span> (idx &lt; <span class=\\"hljs-number\\">2</span>) <span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">let</span> k = <span class=\\"hljs-built_in\\">Math</span>.floor(idx / <span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">if</span> (compareFunction(heap[idx], heap[k]) &lt; <span class=\\"hljs-number\\">0</span>) {\\n      swap(heap, idx, k)\\n      idx = k\\n      swim(idx)\\n    }\\n  }\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">sink</span>(<span class=\\"hljs-params\\">idx</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> k = <span class=\\"hljs-built_in\\">Math</span>.floor(idx * <span class=\\"hljs-number\\">2</span>)\\n    <span class=\\"hljs-keyword\\">if</span> (k &gt;= heap.length) <span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span> (k &lt; heap.length &amp;&amp; heap[k + <span class=\\"hljs-number\\">1</span>] &amp;&amp; compareFunction(heap[k + <span class=\\"hljs-number\\">1</span>], heap[k]) &lt; <span class=\\"hljs-number\\">0</span>) k++\\n    <span class=\\"hljs-keyword\\">if</span> (compareFunction(heap[k], heap[idx]) &lt; <span class=\\"hljs-number\\">0</span>) {\\n      swap(heap, idx, k)\\n      idx = k\\n      sink(idx)\\n    }\\n  }\\n\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">swap</span>(<span class=\\"hljs-params\\">arr, i, j</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> temp = arr[i]\\n    arr[i] = arr[j]\\n    arr[j] = temp\\n  }\\n\\n  <span class=\\"hljs-keyword\\">this</span>.insert = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\">v</span>) </span>{\\n    heap.push(v)\\n    swim(heap.length - <span class=\\"hljs-number\\">1</span>)\\n  }\\n  <span class=\\"hljs-keyword\\">this</span>.pop = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\"></span>) </span>{\\n    swap(heap, <span class=\\"hljs-number\\">1</span>, heap.length - <span class=\\"hljs-number\\">1</span>)\\n    <span class=\\"hljs-keyword\\">let</span> v = heap.pop()\\n    sink(<span class=\\"hljs-number\\">1</span>)\\n    <span class=\\"hljs-keyword\\">return</span> v\\n  }\\n  <span class=\\"hljs-keyword\\">this</span>.peek = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\"></span>) </span>{\\n    <span class=\\"hljs-keyword\\">return</span> heap[<span class=\\"hljs-number\\">1</span>]\\n  }\\n  <span class=\\"hljs-keyword\\">this</span>.size = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\"></span>) </span>{\\n    <span class=\\"hljs-keyword\\">return</span> heap.length - <span class=\\"hljs-number\\">1</span>\\n  }\\n  <span class=\\"hljs-keyword\\">this</span>.isEmpty = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> (<span class=\\"hljs-params\\"></span>) </span>{\\n    <span class=\\"hljs-keyword\\">return</span> heap.length === <span class=\\"hljs-number\\">1</span>\\n  }\\n}\\n\\n</code></pre>\\n"],"querySlug":"maximum-number-of-events-that-can-be-attended","created_at":"2020-02-16","timeArr":[2020,1,16,15,32,58,0],"hasThinking":false,"content":"<p>给你一个数组&nbsp;<code>events</code>，其中&nbsp;<code>events[i] = [startDay<sub>i</sub>, endDay<sub>i</sub>]</code>&nbsp;，表示会议&nbsp;<code>i</code>&nbsp;开始于&nbsp;<code>startDay<sub>i</sub></code>&nbsp;，结束于&nbsp;<code>endDay<sub>i</sub></code>&nbsp;。</p>\\n\\n<p>你可以在满足&nbsp;<code>startDay<sub>i</sub>&nbsp;&lt;= d &lt;= endDay<sub>i</sub></code><sub>&nbsp;</sub>中的任意一天&nbsp;<code>d</code>&nbsp;参加会议&nbsp;<code>i</code>&nbsp;。注意，一天只能参加一个会议。</p>\\n\\n<p>请你返回你可以参加的&nbsp;<strong>最大&nbsp;</strong>会议数目。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/02/16/e1.png\\" style=\\"height: 400px; width: 600px;\\"></p>\\n\\n<pre><strong>输入：</strong>events = [[1,2],[2,3],[3,4]]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>你可以参加所有的三个会议。\\n安排会议的一种方案如上图。\\n第 1 天参加第一个会议。\\n第 2 天参加第二个会议。\\n第 3 天参加第三个会议。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>events= [[1,2],[2,3],[3,4],[1,2]]\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>events = [[1,4],[4,4],[2,2],[3,4],[1,1]]\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>events = [[1,100000]]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>events = [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7]]\\n<strong>输出：</strong>7\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= events.length &lt;= 10^5</code></li>\\n\\t<li><code>events[i].length == 2</code></li>\\n\\t<li><code>1 &lt;= events[i][0] &lt;= events[i][1] &lt;= 10^5</code></li>\\n</ul>\\n","title":"1353. 最多可以参加的会议数目","relatedTags":["贪心","数组","堆（优先队列）"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1353","slug":"1353-Maximum-Number-of-Events-That-Can-Be-Attended"}')}}]);