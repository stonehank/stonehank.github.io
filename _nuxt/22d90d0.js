(window.webpackJsonp=window.webpackJsonp||[]).push([[366],{1164:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * // This is the CustomFunction\'s API interface.\\n * // You should not implement it, or speculate about its implementation\\n * function CustomFunction() {\\n *\\n *     <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{integer, integer}</span> </span>x, y\\n *     <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{integer}</span></span>\\n *     this.f = function(x, y) {\\n *         ...\\n *     };\\n *\\n * };\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{CustomFunction}</span> <span class=\\"hljs-variable\\">customfunction</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{integer}</span> <span class=\\"hljs-variable\\">z</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{integer[][]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findSolution = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">customfunction, z</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;=<span class=\\"hljs-number\\">1000</span>;i++){\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">1</span>;j&lt;=<span class=\\"hljs-number\\">1000</span>;j++){\\n        <span class=\\"hljs-keyword\\">if</span>(customfunction.f(i,j)===z){\\n          res.push([i,j])\\n        }\\n      }\\n    }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"find-positive-integer-solution-for-a-given-equation","created_at":"2019-10-27","timeArr":[2019,9,27,10,34,7,0],"hasThinking":false,"content":"<p>给你一个函数  <code>f(x, y)</code> 和一个目标结果 <code>z</code>，函数公式未知，请你计算方程 <code>f(x,y) == z</code> 所有可能的正整数 <strong>数对</strong> <code>x</code> 和 <code>y</code>。满足条件的结果数对可以按任意顺序返回。</p>\\n\\n<p>尽管函数的具体式子未知，但它是单调递增函数，也就是说：</p>\\n\\n<ul>\\n\\t<li><code>f(x, y) < f(x + 1, y)</code></li>\\n\\t<li><code>f(x, y) < f(x, y + 1)</code></li>\\n</ul>\\n\\n<p>函数接口定义如下：</p>\\n\\n<pre>\\ninterface CustomFunction {\\npublic:\\n  // Returns some positive integer f(x, y) for two positive integers x and y based on a formula.\\n  int f(int x, int y);\\n};</pre>\\n\\n<p>你的解决方案将按如下规则进行评判：</p>\\n\\n<ul>\\n\\t<li>判题程序有一个由 <code>CustomFunction</code> 的 <code>9</code> 种实现组成的列表，以及一种为特定的 <code>z</code> 生成所有有效数对的答案的方法。</li>\\n\\t<li>判题程序接受两个输入：<code>function_id</code>（决定使用哪种实现测试你的代码）以及目标结果 <code>z</code> 。</li>\\n\\t<li>判题程序将会调用你实现的 <code>findSolution</code> 并将你的结果与答案进行比较。</li>\\n\\t<li>如果你的结果与答案相符，那么解决方案将被视作正确答案，即 <code>Accepted</code> 。</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>function_id = 1, z = 5\\n<strong>输出：</strong>[[1,4],[2,3],[3,2],[4,1]]\\n<strong>解释：</strong>function_id = 1 暗含的函数式子为 f(x, y) = x + y\\n以下 x 和 y 满足 f(x, y) 等于 5：\\nx=1, y=4 -> f(1, 4) = 1 + 4 = 5\\nx=2, y=3 -> f(2, 3) = 2 + 3 = 5\\nx=3, y=2 -> f(3, 2) = 3 + 2 = 5\\nx=4, y=1 -> f(4, 1) = 4 + 1 = 5\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>function_id = 2, z = 5\\n<strong>输出：</strong>[[1,5],[5,1]]\\n<strong>解释：</strong>function_id = 2 暗含的函数式子为 f(x, y) = x * y\\n以下 x 和 y 满足 f(x, y) 等于 5：\\nx=1, y=5 -> f(1, 5) = 1 * 5 = 5\\nx=5, y=1 -> f(5, 1) = 5 * 1 = 5</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= function_id <= 9</code></li>\\n\\t<li><code>1 <= z <= 100</code></li>\\n\\t<li>题目保证 <code>f(x, y) == z</code> 的解处于 <code>1 <= x, y <= 1000</code> 的范围内。</li>\\n\\t<li>在 <code>1 <= x, y <= 1000</code> 的前提下，题目保证 <code>f(x, y)</code> 是一个 32 位有符号整数。</li>\\n</ul>\\n","title":"1237. 找出给定方程的正整数解","relatedTags":["数学","双指针","二分查找","交互"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1237","slug":"1237-Find-Positive-Integer-Solution-for-a-Given-Equation"}')}}]);