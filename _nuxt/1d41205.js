(window.webpackJsonp=window.webpackJsonp||[]).push([[533],{1331:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numSub = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> c=[]\\n    <span class=\\"hljs-keyword\\">let</span> d=[]\\n    <span class=\\"hljs-keyword\\">let</span> MOD=<span class=\\"hljs-number\\">1e9</span>+<span class=\\"hljs-number\\">7</span>\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(s[i]===<span class=\\"hljs-string\\">\'1\'</span>){\\n            <span class=\\"hljs-keyword\\">if</span>(i===<span class=\\"hljs-number\\">0</span>){\\n                c[i]=<span class=\\"hljs-number\\">1</span>\\n                d[i]=<span class=\\"hljs-number\\">1</span>\\n                <span class=\\"hljs-keyword\\">continue</span>\\n            }\\n            d[i]=(c[i<span class=\\"hljs-number\\">-1</span>]+<span class=\\"hljs-number\\">1</span>+d[i<span class=\\"hljs-number\\">-1</span>]) % MOD\\n            c[i]=c[i<span class=\\"hljs-number\\">-1</span>]+<span class=\\"hljs-number\\">1</span>\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            <span class=\\"hljs-keyword\\">if</span>(i===<span class=\\"hljs-number\\">0</span>){\\n                c[i]=<span class=\\"hljs-number\\">0</span>\\n                d[i]=<span class=\\"hljs-number\\">0</span>\\n                <span class=\\"hljs-keyword\\">continue</span>\\n            }\\n            res+=d[i<span class=\\"hljs-number\\">-1</span>]\\n            c[i]=<span class=\\"hljs-number\\">0</span>\\n            d[i]=<span class=\\"hljs-number\\">0</span>\\n        }\\n        <span class=\\"hljs-comment\\">// console.log(i,c,d)</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> (res+d[s.length<span class=\\"hljs-number\\">-1</span>]) % MOD\\n};\\n</code></pre>\\n"],"querySlug":"number-of-substrings-with-only-1s","created_at":"2020-07-12","timeArr":[2020,6,12,10,41,47,0],"hasThinking":false,"content":"<p>给你一个二进制字符串 <code>s</code>（仅由 &#39;0&#39; 和 &#39;1&#39; 组成的字符串）。</p>\\n\\n<p>返回所有字符都为 1 的子字符串的数目。</p>\\n\\n<p>由于答案可能很大，请你将它对 10^9 + 7 取模后返回。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;0110111&quot;\\n<strong>输出</strong>：9\\n<strong>解释：</strong>共有 9 个子字符串仅由 &#39;1&#39; 组成\\n&quot;1&quot; -&gt; 5 次\\n&quot;11&quot; -&gt; 3 次\\n&quot;111&quot; -&gt; 1 次</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;101&quot;\\n<strong>输出：</strong>2\\n<strong>解释：</strong>子字符串 &quot;1&quot; 在 s 中共出现 2 次\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;111111&quot;\\n<strong>输出：</strong>21\\n<strong>解释：</strong>每个子字符串都仅由 &#39;1&#39; 组成\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;000&quot;\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>s[i] == &#39;0&#39;</code> 或 <code>s[i] == &#39;1&#39;</code></li>\\n\\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\\n</ul>\\n","title":"1513. 仅含 1 的子串数","relatedTags":["数学","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1513","slug":"1513-Number-of-Substrings-With-Only-1s"}')}}]);