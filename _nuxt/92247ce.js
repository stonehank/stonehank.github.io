(window.webpackJsonp=window.webpackJsonp||[]).push([[1179],{1977:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">fronts</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">backs</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> flipgame = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">fronts, backs</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> notValid={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;fronts.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> f=fronts[i],b=backs[i]\\n    <span class=\\"hljs-keyword\\">if</span>(f===b){\\n      notValid[f]=<span class=\\"hljs-literal\\">true</span>\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> min=<span class=\\"hljs-literal\\">Infinity</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> f <span class=\\"hljs-keyword\\">of</span> fronts){\\n    <span class=\\"hljs-keyword\\">if</span>(notValid[f])<span class=\\"hljs-keyword\\">continue</span>\\n    min=<span class=\\"hljs-built_in\\">Math</span>.min(min,f)\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> b <span class=\\"hljs-keyword\\">of</span> backs){\\n    <span class=\\"hljs-keyword\\">if</span>(notValid[b])<span class=\\"hljs-keyword\\">continue</span>\\n    min=<span class=\\"hljs-built_in\\">Math</span>.min(min,b)    \\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(min===<span class=\\"hljs-literal\\">Infinity</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">return</span> min\\n};\\n</code></pre>\\n"],"querySlug":"card-flipping-game","created_at":"2019-04-25","timeArr":[2019,3,25,20,18,0,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>只要不是存在正反相同卡片的数字，都是有效的，选择最小的那一个。</p>\\n","content":"<p>在桌子上有 <code>N</code> 张卡片，每张卡片的正面和背面都写着一个正数（正面与背面上的数有可能不一样）。</p>\\n\\n<p>我们可以先翻转任意张卡片，然后选择其中一张卡片。</p>\\n\\n<p>如果选中的那张卡片背面的数字 <code>X</code> 与任意一张卡片的正面的数字都不同，那么这个数字是我们想要的数字。</p>\\n\\n<p>哪个数是这些想要的数字中最小的数（找到这些数中的最小值）呢？如果没有一个数字符合要求的，输出 0。</p>\\n\\n<p>其中, <code>fronts[i]</code>&nbsp;和&nbsp;<code>backs[i]</code>&nbsp;分别代表第&nbsp;<code>i</code>&nbsp;张卡片的正面和背面的数字。</p>\\n\\n<p>如果我们通过翻转卡片来交换正面与背面上的数，那么当初在正面的数就变成背面的数，背面的数就变成正面的数。</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\\n<strong>输出：</strong><code>2</code>\\n<strong>解释：</strong>假设我们翻转第二张卡片，那么在正面的数变成了 <code>[1,3,4,4,7]</code> ， 背面的数变成了 <code>[1,2,4,1,3]。</code>\\n接着我们选择第二张卡片，因为现在该卡片的背面的数是 2，2 与任意卡片上正面的数都不同，所以 2 就是我们想要的数字。</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= fronts.length == backs.length&nbsp;&lt;=&nbsp;1000</code></li>\\n\\t<li><code>1 &lt;=&nbsp;fronts[i]&nbsp;&lt;= 2000</code></li>\\n\\t<li><code>1 &lt;= backs[i]&nbsp;&lt;= 2000</code></li>\\n</ol>\\n","title":"822. 翻转卡片游戏","relatedTags":["数组","哈希表"],"difficult":"Middle","lang":["javascript"],"uniqueID":"822","slug":"822-Card-Flipping-Game"}')}}]);