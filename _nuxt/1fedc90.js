(window.webpackJsonp=window.webpackJsonp||[]).push([[1249],{2047:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">dislikes</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> possibleBipartition = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N, dislikes</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> graph=<span class=\\"hljs-built_in\\">Array</span>(N+<span class=\\"hljs-number\\">1</span>).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span>[])\\n  <span class=\\"hljs-keyword\\">let</span> color=<span class=\\"hljs-built_in\\">Array</span>(N+<span class=\\"hljs-number\\">1</span>).fill(<span class=\\"hljs-literal\\">null</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [a,b] <span class=\\"hljs-keyword\\">of</span> dislikes){\\n    graph[a].push(b)\\n    graph[b].push(a)\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> valid=<span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;N;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(color[i]!=<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">continue</span>\\n    color[i]=<span class=\\"hljs-literal\\">false</span>\\n    twoColor(i)\\n    <span class=\\"hljs-keyword\\">if</span>(!valid)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  \\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">twoColor</span>(<span class=\\"hljs-params\\">v</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(!valid)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;graph[v].length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> w=graph[v][i]\\n      <span class=\\"hljs-keyword\\">if</span>(color[w]==<span class=\\"hljs-literal\\">null</span>){\\n        color[w]=!color[v]\\n        twoColor(w)\\n      }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(color[w]===color[v]){\\n        <span class=\\"hljs-keyword\\">return</span> valid=<span class=\\"hljs-literal\\">false</span>\\n      }\\n    }\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"possible-bipartition","created_at":"2019-04-11","timeArr":[2019,3,11,11,16,41,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>这其实是一个无向图的双色问题，先构建一个无向图，将<code>dislikes</code>的两边相连，对每一个点尝试<code>染色</code>，\\n相邻的点颜色不能相同，如果存在冲突，返回<code>false</code>，如果没有冲突，保存这个节点的颜色，以免重复计算。</p>\\n","content":"<p>给定一组 <code>N</code> 人（编号为 <code>1, 2, ..., N</code>）， 我们想把每个人分进<strong>任意</strong>大小的两组。</p>\\n\\n<p>每个人都可能不喜欢其他人，那么他们不应该属于同一组。</p>\\n\\n<p>形式上，如果 <code>dislikes[i] = [a, b]</code>，表示不允许将编号为 <code>a</code> 和 <code>b</code> 的人归入同一组。</p>\\n\\n<p>当可以用这种方法将所有人分进两组时，返回 <code>true</code>；否则返回 <code>false</code>。</p>\\n\\n<p> </p>\\n\\n<ol>\\n</ol>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>N = 4, dislikes = [[1,2],[1,3],[2,4]]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>group1 [1,4], group2 [2,3]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>N = 3, dislikes = [[1,2],[1,3],[2,3]]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>N = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= N <= 2000</code></li>\\n\\t<li><code>0 <= dislikes.length <= 10000</code></li>\\n\\t<li><code>dislikes[i].length == 2</code></li>\\n\\t<li><code>1 <= dislikes[i][j] <= N</code></li>\\n\\t<li><code>dislikes[i][0] < dislikes[i][1]</code></li>\\n\\t<li>对于 <code>dislikes[i] == dislikes[j]</code> 不存在 <code>i != j</code></li>\\n</ul>\\n","title":"886. 可能的二分法","relatedTags":["深度优先搜索","广度优先搜索","并查集","图"],"difficult":"Middle","lang":["javascript"],"uniqueID":"886","slug":"886-Possible-Bipartition"}')}}]);