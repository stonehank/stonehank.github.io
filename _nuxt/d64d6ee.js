(window.webpackJsonp=window.webpackJsonp||[]).push([[917],{1715:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * Definition for a binary tree node.\\n * function TreeNode(val) {\\n *     this.val = val;\\n *     this.left = this.right = null;\\n * }\\n */</span>\\n<span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{TreeNode}</span> <span class=\\"hljs-variable\\">root</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findBottomLeftValue = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">root</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> maxLevel=<span class=\\"hljs-number\\">0</span>,ans=<span class=\\"hljs-literal\\">null</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">root,level</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(level&gt;maxLevel){\\n      maxLevel=level\\n      ans=root.val\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(root.left)dfs(root.left,level+<span class=\\"hljs-number\\">1</span>)\\n    <span class=\\"hljs-keyword\\">if</span>(root.right)dfs(root.right,level+<span class=\\"hljs-number\\">1</span>)\\n  }\\n  dfs(root,<span class=\\"hljs-number\\">1</span>)\\n  <span class=\\"hljs-keyword\\">return</span> ans\\n};\\n</code></pre>\\n"],"querySlug":"find-bottom-left-tree-value","created_at":"2019-03-19","timeArr":[2019,2,19,10,48,55,0],"hasThinking":false,"content":"<p>给定一个二叉树的 <strong>根节点</strong> <code>root</code>，请找出该二叉树的 <strong>最底层 最左边 </strong>节点的值。</p>\\n\\n<p>假设二叉树中至少有一个节点。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<p><img src=\\"https://assets.leetcode.com/uploads/2020/12/14/tree1.jpg\\" style=\\"width: 182px; \\" /></p>\\n\\n<pre>\\n<strong>输入: </strong>root = [2,1,3]\\n<strong>输出: </strong>1\\n</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<p><img src=\\"https://assets.leetcode.com/uploads/2020/12/14/tree2.jpg\\" style=\\"width: 242px; \\" /><strong> </strong></p>\\n\\n<pre>\\n<strong>输入: </strong>[1,2,3,4,null,5,6,null,null,7]\\n<strong>输出: </strong>7\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示:</strong></p>\\n\\n<ul>\\n\\t<li>二叉树的节点个数的范围是 <code>[1,10<sup>4</sup>]</code></li>\\n\\t<li><meta charset=\\"UTF-8\\" /><code>-2<sup>31</sup> <= Node.val <= 2<sup>31</sup> - 1</code> </li>\\n</ul>\\n","title":"513. 找树左下角的值","relatedTags":["树","深度优先搜索","广度优先搜索","二叉树"],"difficult":"Middle","lang":["javascript"],"uniqueID":"513","slug":"513-Find-Bottom-Left-Tree-Value"}')}}]);