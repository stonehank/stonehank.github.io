(window.webpackJsonp=window.webpackJsonp||[]).push([[428],{1226:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">arr</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minSetSize = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">arr</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> len=arr.length\\n  <span class=\\"hljs-keyword\\">let</span> half=len/<span class=\\"hljs-number\\">2</span>\\n  <span class=\\"hljs-keyword\\">let</span> count={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(count[arr[i]]==<span class=\\"hljs-literal\\">null</span>)count[arr[i]]=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">else</span> count[arr[i]]++\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> values=<span class=\\"hljs-built_in\\">Object</span>.values(count)\\n  values.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>b-a)\\n  <span class=\\"hljs-keyword\\">let</span> s=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;values.length;i++){\\n    s+=values[i]\\n    res++\\n    <span class=\\"hljs-keyword\\">if</span>(s&gt;=half){\\n      <span class=\\"hljs-keyword\\">return</span> res\\n    }\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"reduce-array-size-to-the-half","created_at":"2020-02-02","timeArr":[2020,1,2,10,41,22,0],"hasThinking":false,"content":"<p>给你一个整数数组&nbsp;<code>arr</code>。你可以从中选出一个整数集合，并删除这些整数在数组中的每次出现。</p>\\n\\n<p>返回&nbsp;<strong>至少</strong>&nbsp;能删除数组中的一半整数的整数集合的最小大小。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [3,3,3,3,5,5,5,2,2,7]\\n<strong>输出：</strong>2\\n<strong>解释：</strong>选择 {3,7} 使得结果数组为 [5,5,5,2,2]、长度为 5（原数组长度的一半）。\\n大小为 2 的可行集合有 {3,5},{3,2},{5,2}。\\n选择 {2,7} 是不可行的，它的结果数组为 [3,3,3,3,5,5,5]，新数组长度大于原数组的二分之一。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [7,7,7,7,7,7]\\n<strong>输出：</strong>1\\n<strong>解释：</strong>我们只能选择集合 {7}，结果数组为空。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [1,9]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [1000,1000,3,7]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>arr = [1,2,3,4,5,6,7,8,9,10]\\n<strong>输出：</strong>5\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\\n\\t<li><code>arr.length</code>&nbsp;为偶数</li>\\n\\t<li><code>1 &lt;= arr[i] &lt;= 10^5</code></li>\\n</ul>\\n","title":"1338. 数组大小减半","relatedTags":["贪心","数组","哈希表","排序","堆（优先队列）"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1338","slug":"1338-Reduce-Array-Size-to-The-Half"}')}}]);