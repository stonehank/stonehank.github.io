(window.webpackJsonp=window.webpackJsonp||[]).push([[950],{1748:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">checkRecord</span><span class=\\"hljs-params\\">(self, n)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type n: int\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-keyword\\">if</span> n==<span class=\\"hljs-number\\">1</span>:<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">3</span>\\n        <span class=\\"hljs-keyword\\">if</span> n==<span class=\\"hljs-number\\">2</span>:<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">8</span>\\n        MOD=<span class=\\"hljs-number\\">1e9</span>+<span class=\\"hljs-number\\">7</span>\\n        A=[<span class=\\"hljs-number\\">0</span>]*n\\n        L=[<span class=\\"hljs-number\\">0</span>]*n\\n        P=[<span class=\\"hljs-number\\">0</span>]*n\\n        A[<span class=\\"hljs-number\\">0</span>],A[<span class=\\"hljs-number\\">1</span>],A[<span class=\\"hljs-number\\">2</span>]=<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">4</span>\\n        L[<span class=\\"hljs-number\\">0</span>],L[<span class=\\"hljs-number\\">1</span>],L[<span class=\\"hljs-number\\">2</span>]=<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">7</span>\\n        P[<span class=\\"hljs-number\\">0</span>],P[<span class=\\"hljs-number\\">1</span>],P[<span class=\\"hljs-number\\">2</span>]=<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">8</span>\\n        \\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">3</span>,n):\\n          A[i]=(A[i<span class=\\"hljs-number\\">-1</span>]+A[i<span class=\\"hljs-number\\">-2</span>]+A[i<span class=\\"hljs-number\\">-3</span>]) % MOD\\n          L[i]=(A[i<span class=\\"hljs-number\\">-1</span>]+P[i<span class=\\"hljs-number\\">-1</span>]+A[i<span class=\\"hljs-number\\">-2</span>]+P[i<span class=\\"hljs-number\\">-2</span>]) % MOD\\n          P[i]=(A[i<span class=\\"hljs-number\\">-1</span>]+L[i<span class=\\"hljs-number\\">-1</span>]+P[i<span class=\\"hljs-number\\">-1</span>]) % MOD\\n        \\n        <span class=\\"hljs-keyword\\">return</span> int((A[<span class=\\"hljs-number\\">-1</span>]+L[<span class=\\"hljs-number\\">-1</span>]+P[<span class=\\"hljs-number\\">-1</span>]) % MOD)\\n</code></pre>\\n"],"querySlug":"student-attendance-record-ii","created_at":"2019-03-05","timeArr":[2019,2,5,16,49,40,0],"hasThinking":false,"content":"可以用字符串表示一个学生的出勤记录，其中的每个字符用来标记当天的出勤情况（缺勤、迟到、到场）。记录中只含下面三种字符：\\n<ul>\\n\\t<li><code>\'A\'</code>：Absent，缺勤</li>\\n\\t<li><code>\'L\'</code>：Late，迟到</li>\\n\\t<li><code>\'P\'</code>：Present，到场</li>\\n</ul>\\n\\n<p>如果学生能够 <strong>同时</strong> 满足下面两个条件，则可以获得出勤奖励：</p>\\n\\n<ul>\\n\\t<li>按 <strong>总出勤</strong> 计，学生缺勤（<code>\'A\'</code>）<strong>严格</strong> 少于两天。</li>\\n\\t<li>学生 <strong>不会</strong> 存在 <strong>连续</strong> 3 天或 <strong>连续</strong> 3 天以上的迟到（<code>\'L\'</code>）记录。</li>\\n</ul>\\n\\n<p>给你一个整数 <code>n</code> ，表示出勤记录的长度（次数）。请你返回记录长度为 <code>n</code> 时，可能获得出勤奖励的记录情况 <strong>数量</strong> 。答案可能很大，所以返回对 <code>10<sup>9</sup> + 7</code> <strong>取余</strong> 的结果。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 2\\n<strong>输出：</strong>8\\n<strong>解释：\\n</strong>有 8 种长度为 2 的记录将被视为可奖励：\\n\\"PP\\" , \\"AP\\", \\"PA\\", \\"LP\\", \\"PL\\", \\"AL\\", \\"LA\\", \\"LL\\" \\n只有\\"AA\\"不会被视为可奖励，因为缺勤次数为 2 次（需要少于 2 次）。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 1\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 10101\\n<strong>输出：</strong>183236316\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\\n</ul>\\n","title":"552. 学生出勤记录 II","relatedTags":["动态规划"],"difficult":"Hard","lang":["python"],"uniqueID":"552","slug":"552-Student-Attendance-Record-II"}')}}]);