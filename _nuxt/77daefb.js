(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{1010:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">K</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> largestSumAfterKNegations = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A, K</span>) </span>{\\n  A.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n  <span class=\\"hljs-comment\\">// console.log(A,K)</span>\\n  <span class=\\"hljs-keyword\\">let</span> lessThenZ=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> n <span class=\\"hljs-keyword\\">of</span> A){\\n    <span class=\\"hljs-keyword\\">if</span>(n&lt;<span class=\\"hljs-number\\">0</span>)lessThenZ++\\n  }\\n  <span class=\\"hljs-keyword\\">if</span>(lessThenZ&gt;<span class=\\"hljs-number\\">0</span>){\\n    <span class=\\"hljs-keyword\\">let</span> change=<span class=\\"hljs-built_in\\">Math</span>.min(lessThenZ,K)\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;change;i++){\\n      A[i]=-A[i]\\n    }    \\n  }<span class=\\"hljs-keyword\\">else</span>{\\n    <span class=\\"hljs-keyword\\">let</span> realK=K%<span class=\\"hljs-number\\">2</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;realK;i++){\\n      A[i]=-A[i]\\n    }\\n  }\\n\\n  <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> n <span class=\\"hljs-keyword\\">of</span> A)sum+=n\\n  <span class=\\"hljs-keyword\\">if</span>(lessThenZ===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> sum\\n  <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(lessThenZ&gt;=K){\\n    <span class=\\"hljs-keyword\\">return</span> sum\\n  }<span class=\\"hljs-keyword\\">else</span>{\\n    <span class=\\"hljs-keyword\\">return</span> largestSumAfterKNegations(A,K-lessThenZ)\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"maximize-sum-of-array-after-k-negations","created_at":"2019-03-10","timeArr":[2019,2,10,10,39,31,0],"hasThinking":false,"content":"<p>给定一个整数数组 A，我们<strong>只能</strong>用以下方法修改该数组：我们选择某个索引 <code>i</code>&nbsp;并将 <code>A[i]</code> 替换为 <code>-A[i]</code>，然后总共重复这个过程 <code>K</code> 次。（我们可以多次选择同一个索引 <code>i</code>。）</p>\\n\\n<p>以这种方式修改数组后，返回数组可能的最大和。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>A = [4,2,3], K = 1\\n<strong>输出：</strong>5\\n<strong>解释：</strong>选择索引 (1,) ，然后 A 变为 [4,-2,3]。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>A = [3,-1,0,2], K = 3\\n<strong>输出：</strong>6\\n<strong>解释：</strong>选择索引 (1, 2, 2) ，然后 A 变为 [3,1,0,2]。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>A = [2,-3,-1,5,-4], K = 2\\n<strong>输出：</strong>13\\n<strong>解释：</strong>选择索引 (1, 4) ，然后 A 变为 [2,3,-1,5,4]。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\\n\\t<li><code>1 &lt;= K &lt;= 10000</code></li>\\n\\t<li><code>-100 &lt;= A[i] &lt;= 100</code></li>\\n</ol>\\n","title":"1005. K 次取反后最大化的数组和","relatedTags":["贪心","数组","排序"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1005","slug":"1005-Maximize-Sum-Of-Array-After-K-Negations"}')}}]);