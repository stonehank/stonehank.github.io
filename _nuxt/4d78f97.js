(window.webpackJsonp=window.webpackJsonp||[]).push([[1262],{2060:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> subarrayBitwiseORs = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> ans=<span class=\\"hljs-keyword\\">new</span> <span class=\\"hljs-built_in\\">Set</span>()\\n  <span class=\\"hljs-keyword\\">let</span> <span class=\\"hljs-keyword\\">set</span>=new Set()\\n  <span class=\\"hljs-keyword\\">set</span>.add(0)\\n  for(let x of A){\\n    <span class=\\"hljs-keyword\\">let</span> newSet=<span class=\\"hljs-keyword\\">new</span> <span class=\\"hljs-built_in\\">Set</span>()\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> y <span class=\\"hljs-keyword\\">of</span> <span class=\\"hljs-keyword\\">set</span>){\\n      newSet.add(x|y)\\n    }\\n    newSet.add(x)\\n    <span class=\\"hljs-keyword\\">set</span>=newSet\\n    for(let y of <span class=\\"hljs-keyword\\">set</span>){\\n      ans.add(y)\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> ans.size\\n};\\n</code></pre>\\n"],"querySlug":"bitwise-ors-of-subarrays","created_at":"2019-03-09","timeArr":[2019,2,9,15,5,29,0],"hasThinking":false,"content":"<p>我们有一个非负整数数组&nbsp;<code>A</code>。</p>\\n\\n<p>对于每个（连续的）子数组&nbsp;<code>B =&nbsp;[A[i], A[i+1], ..., A[j]]</code> （&nbsp;<code>i &lt;= j</code>），我们对&nbsp;<code>B</code>&nbsp;中的每个元素进行按位或操作，获得结果&nbsp;<code>A[i] | A[i+1] | ... | A[j]</code>。</p>\\n\\n<p>返回可能结果的数量。 （多次出现的结果在最终答案中仅计算一次。）</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[0]\\n<strong>输出：</strong>1\\n<strong>解释：</strong>\\n只有一个可能的结果 0 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,1,2]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>\\n可能的子数组为 [1]，[1]，[2]，[1, 1]，[1, 2]，[1, 1, 2]。\\n产生的结果为 1，1，2，1，3，3 。\\n有三个唯一值，所以答案是 3 。\\n</pre>\\n\\n<p><strong>示例&nbsp;3：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,2,4]\\n<strong>输出：</strong>6\\n<strong>解释：</strong>\\n可能的结果是 1，2，3，4，6，以及 7 。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\\n\\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\\n</ol>\\n","title":"898. 子数组按位或操作","relatedTags":["位运算","数组","动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"898","slug":"898-Bitwise-ORs-of-Subarrays"}')}}]);