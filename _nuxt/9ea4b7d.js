(window.webpackJsonp=window.webpackJsonp||[]).push([[385],{1183:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">k</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> palindromePartition = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s, k</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">return</span> resolve(s,k)\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">resolve</span>(<span class=\\"hljs-params\\">str,splitT</span>)</span>{\\n    <span class=\\"hljs-comment\\">// console.log(str,splitT)</span>\\n    <span class=\\"hljs-keyword\\">if</span>(str.length===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">if</span>(splitT===<span class=\\"hljs-number\\">1</span>){\\n      <span class=\\"hljs-keyword\\">let</span> len=~~(str.length/<span class=\\"hljs-number\\">2</span>)\\n      <span class=\\"hljs-keyword\\">let</span> a=<span class=\\"hljs-number\\">0</span>\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;len;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(str[i]!==str[str.length-i<span class=\\"hljs-number\\">-1</span>])a++\\n      }\\n      <span class=\\"hljs-comment\\">// console.log(a)</span>\\n      <span class=\\"hljs-keyword\\">return</span> a\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(hash[str+<span class=\\"hljs-string\\">\' \'</span>+splitT]!=<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> hash[str+<span class=\\"hljs-string\\">\' \'</span>+splitT]\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-literal\\">Infinity</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;str.length;i++){\\n      <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n      count+=resolve(str.slice(<span class=\\"hljs-number\\">0</span>,i),<span class=\\"hljs-number\\">1</span>)\\n      count+=resolve(str.slice(i,str.length),splitT<span class=\\"hljs-number\\">-1</span>)\\n      res=<span class=\\"hljs-built_in\\">Math</span>.min(res,count)\\n    }\\n    hash[str+<span class=\\"hljs-string\\">\' \'</span>+splitT]=res\\n    <span class=\\"hljs-keyword\\">return</span> res\\n  }\\n};\\n</code></pre>\\n"],"querySlug":"palindrome-partitioning-iii","created_at":"2019-12-01","timeArr":[2019,11,1,11,47,18,0],"hasThinking":false,"content":"<p>给你一个由小写字母组成的字符串&nbsp;<code>s</code>，和一个整数&nbsp;<code>k</code>。</p>\\n\\n<p>请你按下面的要求分割字符串：</p>\\n\\n<ul>\\n\\t<li>首先，你可以将&nbsp;<code>s</code>&nbsp;中的部分字符修改为其他的小写英文字母。</li>\\n\\t<li>接着，你需要把&nbsp;<code>s</code>&nbsp;分割成&nbsp;<code>k</code>&nbsp;个非空且不相交的子串，并且每个子串都是回文串。</li>\\n</ul>\\n\\n<p>请返回以这种方式分割字符串所需修改的最少字符数。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;abc&quot;, k = 2\\n<strong>输出：</strong>1\\n<strong>解释：</strong>你可以把字符串分割成 &quot;ab&quot; 和 &quot;c&quot;，并修改 &quot;ab&quot; 中的 1 个字符，将它变成回文串。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;aabbc&quot;, k = 3\\n<strong>输出：</strong>0\\n<strong>解释：</strong>你可以把字符串分割成 &quot;aa&quot;、&quot;bb&quot; 和 &quot;c&quot;，它们都是回文串。</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>s = &quot;leetcode&quot;, k = 8\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= k &lt;= s.length &lt;= 100</code></li>\\n\\t<li><code>s</code>&nbsp;中只含有小写英文字母。</li>\\n</ul>\\n","title":"1278. 分割回文串 III","relatedTags":["字符串","动态规划"],"difficult":"Hard","lang":["javascript"],"uniqueID":"1278","slug":"1278-Palindrome-Partitioning-III"}')}}]);