(window.webpackJsonp=window.webpackJsonp||[]).push([[907],{1705:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">words</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findWords = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">words</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> str1=<span class=\\"hljs-string\\">\'qwertyuiiop\'</span>,str2=<span class=\\"hljs-string\\">\'asdfghjkl\'</span>,str3=<span class=\\"hljs-string\\">\'zxcvbnm\'</span>\\n  <span class=\\"hljs-keyword\\">let</span> hash1={},hash2={},hash3={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> s <span class=\\"hljs-keyword\\">of</span> str1)hash1[s]=<span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> s <span class=\\"hljs-keyword\\">of</span> str2)hash2[s]=<span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> s <span class=\\"hljs-keyword\\">of</span> str3)hash3[s]=<span class=\\"hljs-literal\\">true</span>\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;words.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> line=<span class=\\"hljs-literal\\">null</span>,j=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">let</span> lowCase=words[i].toLowerCase()\\n    <span class=\\"hljs-keyword\\">for</span>(;j&lt;lowCase.length;j++){\\n      <span class=\\"hljs-keyword\\">let</span> s=lowCase[j]\\n      <span class=\\"hljs-keyword\\">if</span>(hash1[s]!=<span class=\\"hljs-literal\\">null</span>){\\n        <span class=\\"hljs-keyword\\">if</span>(line==<span class=\\"hljs-literal\\">null</span>)line=<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(line!==<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">break</span>\\n      }<span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(hash2[s]!=<span class=\\"hljs-literal\\">null</span>){\\n        <span class=\\"hljs-keyword\\">if</span>(line==<span class=\\"hljs-literal\\">null</span>)line=<span class=\\"hljs-number\\">2</span>\\n        <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(line!==<span class=\\"hljs-number\\">2</span>)<span class=\\"hljs-keyword\\">break</span>\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        <span class=\\"hljs-keyword\\">if</span>(line==<span class=\\"hljs-literal\\">null</span>)line=<span class=\\"hljs-number\\">3</span>\\n        <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(line!==<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">break</span>\\n      }\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(j===words[i].length){\\n      res.push(words[i])\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"keyboard-row","created_at":"2019-04-05","timeArr":[2019,3,5,23,18,1,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>对每一行键盘的字母构建<code>hash</code>，然后逐个对<code>words</code>内部的字母转换成小写后，在检查是否在同一行，发现不在同一行就直接<code>break</code></p>\\n","content":"<p>给你一个字符串数组 <code>words</code> ，只返回可以使用在 <strong>美式键盘</strong> 同一行的字母打印出来的单词。键盘如下图所示。</p>\\n\\n<p><strong>美式键盘</strong> 中：</p>\\n\\n<ul>\\n\\t<li>第一行由字符 <code>\\"qwertyuiop\\"</code> 组成。</li>\\n\\t<li>第二行由字符 <code>\\"asdfghjkl\\"</code> 组成。</li>\\n\\t<li>第三行由字符 <code>\\"zxcvbnm\\"</code> 组成。</li>\\n</ul>\\n\\n<p><img alt=\\"American keyboard\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/keyboard.png\\" style=\\"width: 100%; max-width: 600px\\" /></p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>words = [\\"Hello\\",\\"Alaska\\",\\"Dad\\",\\"Peace\\"]\\n<strong>输出：</strong>[\\"Alaska\\",\\"Dad\\"]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>words = [\\"omk\\"]\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>words = [\\"adsdf\\",\\"sfd\\"]\\n<strong>输出：</strong>[\\"adsdf\\",\\"sfd\\"]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= words.length <= 20</code></li>\\n\\t<li><code>1 <= words[i].length <= 100</code></li>\\n\\t<li><code>words[i]</code> 由英文字母（小写和大写字母）组成</li>\\n</ul>\\n","title":"500. 键盘行","relatedTags":["数组","哈希表","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"500","slug":"500-Keyboard-Row"}')}}]);