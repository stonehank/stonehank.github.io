(window.webpackJsonp=window.webpackJsonp||[]).push([[654],{1452:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isValid = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> match={\\n    <span class=\\"hljs-string\\">\\"(\\"</span>:<span class=\\"hljs-string\\">\\")\\"</span>,\\n    <span class=\\"hljs-string\\">\\"[\\"</span>:<span class=\\"hljs-string\\">\\"]\\"</span>,\\n    <span class=\\"hljs-string\\">\\"{\\"</span>:<span class=\\"hljs-string\\">\\"}\\"</span>\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> stack=[]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> cur=s[i]\\n    <span class=\\"hljs-keyword\\">if</span>(match[cur])stack.push(cur)\\n    <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span>(match[stack.pop()]!==cur)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> stack.length===<span class=\\"hljs-number\\">0</span>\\n};\\n</code></pre>\\n"],"querySlug":"valid-parentheses","created_at":"2019-03-21","timeArr":[2019,2,21,20,28,48,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>括号问题一般使用<code>stack</code>，按照开始必有结束的原则。</p>\\n","content":"<p>给定一个只包括 <code>\'(\'</code>，<code>\')\'</code>，<code>\'{\'</code>，<code>\'}\'</code>，<code>\'[\'</code>，<code>\']\'</code> 的字符串 <code>s</code> ，判断字符串是否有效。</p>\\n\\n<p>有效字符串需满足：</p>\\n\\n<ol>\\n\\t<li>左括号必须用相同类型的右括号闭合。</li>\\n\\t<li>左括号必须以正确的顺序闭合。</li>\\n</ol>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"()\\"\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"()[]{}\\"\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"(]\\"\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"([)]\\"\\n<strong>输出：</strong>false\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"{[]}\\"\\n<strong>输出：</strong>true</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= s.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>s</code> 仅由括号 <code>\'()[]{}\'</code> 组成</li>\\n</ul>\\n","title":"20. 有效的括号","relatedTags":["栈","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"20","slug":"20-Valid-Parentheses"}')}}]);