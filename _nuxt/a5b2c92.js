(window.webpackJsonp=window.webpackJsonp||[]).push([[464],{1262:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">grid</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> hasValidPath = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">grid</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> m=grid.length\\n  <span class=\\"hljs-keyword\\">let</span> n=grid[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">let</span> typeDir={\\n    <span class=\\"hljs-number\\">1</span>:[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">3</span>],\\n    <span class=\\"hljs-number\\">2</span>:[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">2</span>],\\n    <span class=\\"hljs-number\\">3</span>:[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">3</span>],\\n    <span class=\\"hljs-number\\">4</span>:[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">2</span>],\\n    <span class=\\"hljs-number\\">5</span>:[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">3</span>],\\n    <span class=\\"hljs-number\\">6</span>:[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>]\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> opsite={\\n    <span class=\\"hljs-number\\">0</span>:<span class=\\"hljs-number\\">2</span>,\\n    <span class=\\"hljs-number\\">1</span>:<span class=\\"hljs-number\\">3</span>,\\n    <span class=\\"hljs-number\\">2</span>:<span class=\\"hljs-number\\">0</span>,\\n    <span class=\\"hljs-number\\">3</span>:<span class=\\"hljs-number\\">1</span>\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> validState={\\n    <span class=\\"hljs-number\\">1</span>:[[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">5</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">6</span>,<span class=\\"hljs-number\\">0</span>]],\\n    <span class=\\"hljs-number\\">2</span>:[[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">5</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">6</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-number\\">1</span>]],\\n    <span class=\\"hljs-number\\">3</span>:[[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">5</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">6</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">6</span>,<span class=\\"hljs-number\\">0</span>]],\\n    <span class=\\"hljs-number\\">4</span>:[[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">5</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">6</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">5</span>,<span class=\\"hljs-number\\">0</span>]],\\n    <span class=\\"hljs-number\\">5</span>:[[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">6</span>,<span class=\\"hljs-number\\">0</span>]],\\n    <span class=\\"hljs-number\\">6</span>:[[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">3</span>],[<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">3</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">5</span>,<span class=\\"hljs-number\\">0</span>]]\\n  }\\n  <span class=\\"hljs-comment\\">// up 0 right 1 down 2 left 3</span>\\n  <span class=\\"hljs-keyword\\">let</span> moves=[[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">-1</span>]]\\n  <span class=\\"hljs-keyword\\">let</span> type=grid[<span class=\\"hljs-number\\">0</span>][<span class=\\"hljs-number\\">0</span>]\\n  <span class=\\"hljs-keyword\\">let</span> hash={}\\n  <span class=\\"hljs-keyword\\">let</span> found=<span class=\\"hljs-literal\\">false</span>\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">x,y,type,dir</span>)</span>{\\n    <span class=\\"hljs-comment\\">// console.log(m,n,x,y)</span>\\n    <span class=\\"hljs-keyword\\">while</span>(x!==m<span class=\\"hljs-number\\">-1</span> || y!==n<span class=\\"hljs-number\\">-1</span>){\\n      <span class=\\"hljs-keyword\\">let</span> nextValids=validState[type]\\n      <span class=\\"hljs-keyword\\">let</span> [dx,dy]=moves[dir]\\n      <span class=\\"hljs-keyword\\">let</span> nextX=x+dx\\n      <span class=\\"hljs-keyword\\">let</span> nextY=y+dy\\n      <span class=\\"hljs-keyword\\">if</span>(nextX&lt;<span class=\\"hljs-number\\">0</span> || nextX&gt;=m || nextY&lt;<span class=\\"hljs-number\\">0</span> || nextY&gt;=n)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      <span class=\\"hljs-keyword\\">let</span> nextType=grid[nextX][nextY]\\n      <span class=\\"hljs-keyword\\">let</span> nextValidDir=<span class=\\"hljs-literal\\">null</span>\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;nextValids.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(nextValids[i][<span class=\\"hljs-number\\">0</span>]===nextType){\\n          <span class=\\"hljs-keyword\\">let</span> excludes=opsite[dir]\\n          <span class=\\"hljs-keyword\\">if</span>(nextValids[i][<span class=\\"hljs-number\\">1</span>]===excludes)<span class=\\"hljs-keyword\\">continue</span>\\n          nextValidDir=nextValids[i][<span class=\\"hljs-number\\">1</span>]\\n        }\\n      }\\n      <span class=\\"hljs-comment\\">// console.log(x,y,nextValidDir)</span>\\n      <span class=\\"hljs-keyword\\">if</span>(nextValidDir==<span class=\\"hljs-literal\\">null</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n      x=nextX\\n      y=nextY\\n      type=nextType\\n      dir=nextValidDir\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> firstDir=typeDir[type]\\n  <span class=\\"hljs-keyword\\">return</span> dfs(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">0</span>,type,firstDir[<span class=\\"hljs-number\\">0</span>]) || dfs(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">0</span>,type,firstDir[<span class=\\"hljs-number\\">1</span>])\\n};\\n</code></pre>\\n"],"querySlug":"check-if-there-is-a-valid-path-in-a-grid","created_at":"2020-03-22","timeArr":[2020,2,22,11,46,22,0],"hasThinking":false,"content":"<p>给你一个 <em>m</em> x <em>n</em> 的网格 <code>grid</code>。网格里的每个单元都代表一条街道。<code>grid[i][j]</code> 的街道可以是：</p>\\n\\n<ul>\\n\\t<li><strong>1</strong> 表示连接左单元格和右单元格的街道。</li>\\n\\t<li><strong>2</strong> 表示连接上单元格和下单元格的街道。</li>\\n\\t<li><strong>3</strong>&nbsp;表示连接左单元格和下单元格的街道。</li>\\n\\t<li><strong>4</strong> 表示连接右单元格和下单元格的街道。</li>\\n\\t<li><strong>5</strong> 表示连接左单元格和上单元格的街道。</li>\\n\\t<li><strong>6</strong> 表示连接右单元格和上单元格的街道。</li>\\n</ul>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/03/21/main.png\\" style=\\"height: 708px; width: 450px;\\"></p>\\n\\n<p>你最开始从左上角的单元格 <code>(0,0)</code> 开始出发，网格中的「有效路径」是指从左上方的单元格 <code>(0,0)</code> 开始、一直到右下方的 <code>(m-1,n-1)</code> 结束的路径。<strong>该路径必须只沿着街道走</strong>。</p>\\n\\n<p><strong>注意：</strong>你 <strong>不能</strong> 变更街道。</p>\\n\\n<p>如果网格中存在有效的路径，则返回 <code>true</code>，否则返回 <code>false</code> 。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/03/21/e1.png\\" style=\\"height: 311px; width: 455px;\\"></p>\\n\\n<pre><strong>输入：</strong>grid = [[2,4,3],[6,5,2]]\\n<strong>输出：</strong>true\\n<strong>解释：</strong>如图所示，你可以从 (0, 0) 开始，访问网格中的所有单元格并到达 (m - 1, n - 1) 。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<p><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/03/21/e2.png\\" style=\\"height: 293px; width: 455px;\\"></p>\\n\\n<pre><strong>输入：</strong>grid = [[1,2,1],[1,2,1]]\\n<strong>输出：</strong>false\\n<strong>解释：</strong>如图所示，单元格 (0, 0) 上的街道没有与任何其他单元格上的街道相连，你只会停在 (0, 0) 处。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>grid = [[1,1,2]]\\n<strong>输出：</strong>false\\n<strong>解释：</strong>你会停在 (0, 1)，而且无法到达 (0, 2) 。\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>grid = [[1,1,1,1,1,1,3]]\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>grid = [[2],[2],[2],[2],[2],[2],[6]]\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>m == grid.length</code></li>\\n\\t<li><code>n == grid[i].length</code></li>\\n\\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\\n\\t<li><code>1 &lt;= grid[i][j] &lt;= 6</code></li>\\n</ul>\\n","title":"1391. 检查网格中是否存在有效路径","relatedTags":["深度优先搜索","广度优先搜索","并查集","数组","矩阵"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1391","slug":"1391-Check-if-There-is-a-Valid-Path-in-a-Grid"}')}}]);