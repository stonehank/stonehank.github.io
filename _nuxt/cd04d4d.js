(window.webpackJsonp=window.webpackJsonp||[]).push([[1250],{2048:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">superEggDrop</span><span class=\\"hljs-params\\">(self, K, N)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type K: int\\n        :type N: int\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-comment\\"># dp=[[float(\'inf\')]*(N+1) for i in range(K)]</span>\\n        <span class=\\"hljs-comment\\"># for i in range(N+1):dp[0][i]=i</span>\\n        <span class=\\"hljs-comment\\"># for i in range(K):dp[i][0]=0</span>\\n        <span class=\\"hljs-comment\\"># for i in range(1,K):</span>\\n        <span class=\\"hljs-comment\\">#   last=1</span>\\n        <span class=\\"hljs-comment\\">#   for j in range(1,N+1):</span>\\n        <span class=\\"hljs-comment\\">#     minStep=float(\'inf\')</span>\\n        <span class=\\"hljs-comment\\">#     for k in range(last,last+2):</span>\\n        <span class=\\"hljs-comment\\">#       curStep=max(dp[i-1][k-1],dp[i][j-k])+1</span>\\n        <span class=\\"hljs-comment\\">#       if curStep&lt;minStep:</span>\\n        <span class=\\"hljs-comment\\">#         minStep=curStep</span>\\n        <span class=\\"hljs-comment\\">#         last=k</span>\\n        <span class=\\"hljs-comment\\">#     dp[i][j]=minStep</span>\\n        <span class=\\"hljs-comment\\"># return dp[K-1][N]</span>\\n      \\n        dp=[[<span class=\\"hljs-number\\">0</span> <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(N+<span class=\\"hljs-number\\">1</span>)] <span class=\\"hljs-keyword\\">for</span> j <span class=\\"hljs-keyword\\">in</span> range(K+<span class=\\"hljs-number\\">1</span>)]\\n        step=<span class=\\"hljs-number\\">0</span>\\n        <span class=\\"hljs-keyword\\">while</span>(dp[K][step]&lt;N):\\n            step+=<span class=\\"hljs-number\\">1</span>\\n            <span class=\\"hljs-keyword\\">for</span> k <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">1</span>,K+<span class=\\"hljs-number\\">1</span>):\\n                dp[k][step]=dp[k<span class=\\"hljs-number\\">-1</span>][step<span class=\\"hljs-number\\">-1</span>]+dp[k][step<span class=\\"hljs-number\\">-1</span>]+<span class=\\"hljs-number\\">1</span>\\n        <span class=\\"hljs-comment\\"># print dp</span>\\n        <span class=\\"hljs-keyword\\">return</span> step\\n        \\n</code></pre>\\n"],"querySlug":"super-egg-drop","created_at":"2019-02-27","timeArr":[2019,1,27,12,58,25,0],"hasThinking":false,"content":"<p>给你 <code>k</code> 枚相同的鸡蛋，并可以使用一栋从第 <code>1</code> 层到第 <code>n</code> 层共有 <code>n</code> 层楼的建筑。</p>\\n\\n<p>已知存在楼层 <code>f</code> ，满足 <code>0 <= f <= n</code> ，任何从<strong> 高于</strong> <code>f</code> 的楼层落下的鸡蛋都会碎，从 <code>f</code> 楼层或比它低的楼层落下的鸡蛋都不会破。</p>\\n\\n<p>每次操作，你可以取一枚没有碎的鸡蛋并把它从任一楼层 <code>x</code> 扔下（满足 <code>1 <= x <= n</code>）。如果鸡蛋碎了，你就不能再次使用它。如果某枚鸡蛋扔下后没有摔碎，则可以在之后的操作中 <strong>重复使用</strong> 这枚鸡蛋。</p>\\n\\n<p>请你计算并返回要确定 <code>f</code> <strong>确切的值</strong> 的 <strong>最小操作次数</strong> 是多少？</p>\\n \\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>k = 1, n = 2\\n<strong>输出：</strong>2\\n<strong>解释：</strong>\\n鸡蛋从 1 楼掉落。如果它碎了，肯定能得出 f = 0 。 \\n否则，鸡蛋从 2 楼掉落。如果它碎了，肯定能得出 f = 1 。 \\n如果它没碎，那么肯定能得出 f = 2 。 \\n因此，在最坏的情况下我们需要移动 2 次以确定 f 是多少。 \\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>k = 2, n = 6\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>k = 3, n = 14\\n<strong>输出：</strong>4\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= k <= 100</code></li>\\n\\t<li><code>1 <= n <= 10<sup>4</sup></code></li>\\n</ul>\\n","title":"887. 鸡蛋掉落","relatedTags":["数学","二分查找","动态规划"],"difficult":"Hard","lang":["python"],"uniqueID":"887","slug":"887-Super-Egg-Drop"}')}}]);