(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{1007:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string[]}</span> <span class=\\"hljs-variable\\">A</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> commonChars = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">A</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> interHash={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;A[<span class=\\"hljs-number\\">0</span>].length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> letter=A[<span class=\\"hljs-number\\">0</span>][i]\\n    <span class=\\"hljs-keyword\\">if</span>(interHash[letter]==<span class=\\"hljs-literal\\">null</span>)interHash[letter]=<span class=\\"hljs-number\\">1</span>\\n    <span class=\\"hljs-keyword\\">else</span> interHash[letter]++\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;A.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> curHash={}\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;A[i].length;j++){\\n      <span class=\\"hljs-keyword\\">let</span> l=A[i][j]\\n      <span class=\\"hljs-keyword\\">if</span>(curHash[l]==<span class=\\"hljs-literal\\">null</span>)curHash[l]=<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">else</span>{\\n        curHash[l]++\\n      }\\n    }\\n\\n  \\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> k <span class=\\"hljs-keyword\\">in</span> curHash){\\n        <span class=\\"hljs-keyword\\">if</span>(interHash[k]&gt;<span class=\\"hljs-number\\">0</span>){\\n          interHash[k]=<span class=\\"hljs-built_in\\">Math</span>.min(interHash[k],curHash[k])\\n        }\\n      }\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> x <span class=\\"hljs-keyword\\">in</span> interHash){\\n      <span class=\\"hljs-keyword\\">if</span>(curHash[x]==<span class=\\"hljs-literal\\">null</span>){\\n        interHash[x]=<span class=\\"hljs-number\\">0</span>\\n      }\\n    }\\n        <span class=\\"hljs-comment\\">// console.log(curHash)</span>\\n  }\\n\\n  <span class=\\"hljs-keyword\\">let</span> result=[]\\n<span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> key <span class=\\"hljs-keyword\\">in</span> interHash){\\n  <span class=\\"hljs-keyword\\">if</span>(interHash[key]&lt;=<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">continue</span>\\n  <span class=\\"hljs-keyword\\">while</span>(interHash[key]&gt;<span class=\\"hljs-number\\">0</span>){\\n    result.push(key)\\n    interHash[key]--\\n  }\\n}\\n  <span class=\\"hljs-keyword\\">return</span> result\\n};\\n</code></pre>\\n"],"querySlug":"find-common-characters","created_at":"2019-03-03","timeArr":[2019,2,3,10,50,2,0],"hasThinking":false,"content":"<p>给定仅有小写字母组成的字符串数组 <code>A</code>，返回列表中的每个字符串中都显示的全部字符（<strong>包括重复字符</strong>）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。</p>\\n\\n<p>你可以按任意顺序返回答案。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[&quot;bella&quot;,&quot;label&quot;,&quot;roller&quot;]\\n<strong>输出：</strong>[&quot;e&quot;,&quot;l&quot;,&quot;l&quot;]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[&quot;cool&quot;,&quot;lock&quot;,&quot;cook&quot;]\\n<strong>输出：</strong>[&quot;c&quot;,&quot;o&quot;]\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\\n\\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\\n\\t<li><code>A[i][j]</code> 是小写字母</li>\\n</ol>\\n","title":"1002. 查找常用字符","relatedTags":["数组","哈希表","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1002","slug":"1002-Find-Common-Characters"}')}}]);