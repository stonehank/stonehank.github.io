(window.webpackJsonp=window.webpackJsonp||[]).push([[660],{1458:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">t</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{boolean}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> isIsomorphic = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s, t</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>,k=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> hashS={},hashT={}\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;s.length;i++){\\n    <span class=\\"hljs-keyword\\">let</span> curs=s[i],curt=t[i]\\n    <span class=\\"hljs-keyword\\">let</span> isoS=<span class=\\"hljs-string\\">\'\'</span>,isoT=<span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">if</span>(hashS[curs]==<span class=\\"hljs-literal\\">null</span>){\\n      hashS[curs]=(j++)+<span class=\\"hljs-string\\">\'\'</span>\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(hashT[curt]==<span class=\\"hljs-literal\\">null</span>){\\n      hashT[curt]=(k++)+<span class=\\"hljs-string\\">\'\'</span>\\n    }\\n    isoS=hashS[curs]\\n    isoT=hashT[curt]\\n    <span class=\\"hljs-comment\\">// console.log(hashS,hashT)</span>\\n    <span class=\\"hljs-keyword\\">if</span>(isoS!==isoT)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n};\\n</code></pre>\\n"],"querySlug":"isomorphic-strings","created_at":"2019-04-04","timeArr":[2019,3,4,22,25,6,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>用数字替换字母，并且用<code>hash</code>储存，遇到<code>hash</code>中不存在的字母则字母作为<code>key</code>，数字<code>+1</code>作为<code>val</code>。</p>\\n<p>如果两边同时遇到<code>hash</code>中不存在的，同时将以当前数字作为<code>val</code>；</p>\\n<p>如果两边同时遇到<code>hash</code>中都存在的，检测两边的<code>val</code>是否相等；</p>\\n<p>如果一边存在，一边不存在，返回<code>false</code>。</p>\\n","content":"<p>给定两个字符串 <em><strong>s </strong></em>和 <strong><em>t</em></strong>，判断它们是否是同构的。</p>\\n\\n<p>如果 <em><strong>s </strong></em>中的字符可以按某种映射关系替换得到 <strong><em>t </em></strong>，那么这两个字符串是同构的。</p>\\n\\n<p>每个出现的字符都应当映射到另一个字符，同时不改变字符的顺序。不同字符不能映射到同一个字符上，相同字符只能映射到同一个字符上，字符可以映射到自己本身。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入：</strong><strong><em>s</em></strong> = <code>\\"egg\\", </code><strong><em>t = </em></strong><code>\\"add\\"</code>\\n<strong>输出：</strong>true\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong><strong><em>s</em></strong> = <code>\\"foo\\", </code><strong><em>t = </em></strong><code>\\"bar\\"</code>\\n<strong>输出：</strong>false</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong><strong><em>s</em></strong> = <code>\\"paper\\", </code><strong><em>t = </em></strong><code>\\"title\\"</code>\\n<strong>输出：</strong>true</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>可以假设 <em><strong>s </strong></em>和 <strong><em>t </em></strong>长度相同。</li>\\n</ul>\\n","title":"205. 同构字符串","relatedTags":["哈希表","字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"205","slug":"205-Isomorphic-Strings"}')}}]);