(window.webpackJsonp=window.webpackJsonp||[]).push([[1049],{1847:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">N</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">K</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">r</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">c</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> knightProbability = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">N, K, r, c</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> dp=<span class=\\"hljs-built_in\\">Array</span>(N).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(N).fill(<span class=\\"hljs-number\\">0</span>))\\n  dp[r][c]=<span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-keyword\\">let</span> moves=[[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">-2</span>],[<span class=\\"hljs-number\\">-2</span>,<span class=\\"hljs-number\\">-1</span>],[<span class=\\"hljs-number\\">-2</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">2</span>],[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">1</span>],[<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">-1</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">-2</span>]]\\n  <span class=\\"hljs-keyword\\">let</span> count=K\\n  <span class=\\"hljs-keyword\\">while</span>(count&gt;<span class=\\"hljs-number\\">0</span>){\\n    count--\\n    <span class=\\"hljs-keyword\\">let</span> temp=<span class=\\"hljs-built_in\\">Array</span>(N).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(N).fill(<span class=\\"hljs-number\\">0</span>))\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n      <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;N;j++){\\n        <span class=\\"hljs-keyword\\">if</span>(dp[i][j]!=<span class=\\"hljs-number\\">0</span>){\\n          <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [dx,dy] <span class=\\"hljs-keyword\\">of</span> moves){\\n            <span class=\\"hljs-keyword\\">let</span> nx=dx+i,ny=dy+j\\n            <span class=\\"hljs-keyword\\">if</span>(nx&lt;<span class=\\"hljs-number\\">0</span> || ny&lt;<span class=\\"hljs-number\\">0</span> || nx&gt;=N || ny&gt;=N)<span class=\\"hljs-keyword\\">continue</span>\\n            temp[nx][ny]+=dp[i][j]\\n          }\\n        }\\n      }\\n    }\\n    dp=temp\\n  }\\n  <span class=\\"hljs-comment\\">// console.log(dp)</span>\\n  <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;N;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;N;j++){\\n      sum+=dp[i][j]\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> sum / <span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">8</span>,K)\\n};\\n</code></pre>\\n"],"querySlug":"knight-probability-in-chessboard","created_at":"2019-03-06","timeArr":[2019,2,6,18,39,36,0],"hasThinking":false,"content":"<p>已知一个&nbsp;<code>N</code>x<code>N</code>&nbsp;的国际象棋棋盘，棋盘的行号和列号都是从 0 开始。即最左上角的格子记为&nbsp;<code>(0, 0)</code>，最右下角的记为&nbsp;<code>(N-1, N-1)</code>。&nbsp;</p>\\n\\n<p>现有一个 &ldquo;马&rdquo;（也译作 &ldquo;骑士&rdquo;）位于&nbsp;<code>(r, c)</code>&nbsp;，并打算进行&nbsp;<code>K</code> 次移动。&nbsp;</p>\\n\\n<p>如下图所示，国际象棋的 &ldquo;马&rdquo; 每一步先沿水平或垂直方向移动 2 个格子，然后向与之相垂直的方向再移动 1 个格子，共有 8 个可选的位置。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><img src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/12/knight.png\\" style=\\"height: 200px; width: 200px;\\"></p>\\n\\n<p>&nbsp;</p>\\n\\n<p>现在 &ldquo;马&rdquo; 每一步都从可选的位置（包括棋盘外部的）中独立随机地选择一个进行移动，直到移动了&nbsp;<code>K</code>&nbsp;次或跳到了棋盘外面。</p>\\n\\n<p>求移动结束后，&ldquo;马&rdquo; 仍留在棋盘上的概率。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre><strong>输入:</strong> 3, 2, 0, 0\\n<strong>输出:</strong> 0.0625\\n<strong>解释:</strong> \\n输入的数据依次为 N, K, r, c\\n第 1 步时，有且只有 2 种走法令 &ldquo;马&rdquo; 可以留在棋盘上（跳到（1,2）或（2,1））。对于以上的两种情况，各自在第2步均有且只有2种走法令 &ldquo;马&rdquo; 仍然留在棋盘上。\\n所以 &ldquo;马&rdquo; 在结束后仍在棋盘上的概率为 0.0625。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>注意：</strong></p>\\n\\n<ul>\\n\\t<li><code>N</code> 的取值范围为 [1, 25]</li>\\n\\t<li><code>K</code>&nbsp;的取值范围为 [0, 100]</li>\\n\\t<li>开始时，&ldquo;马&rdquo; 总是位于棋盘上</li>\\n</ul>\\n","title":"688. “马”在棋盘上的概率","relatedTags":["动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"688","slug":"688-Knight-Probability-in-Chessboard"}')}}]);