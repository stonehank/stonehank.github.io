(window.webpackJsonp=window.webpackJsonp||[]).push([[732],{1530:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">NumArray</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">__init__</span><span class=\\"hljs-params\\">(self, nums)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type nums: List[int]\\n        \\"\\"\\"</span>\\n        n=len(nums)\\n        numSums=[<span class=\\"hljs-number\\">0</span>]*(n+<span class=\\"hljs-number\\">1</span>)\\n        <span class=\\"hljs-comment\\"># numSums[0]=nums[0]</span>\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">1</span>,n+<span class=\\"hljs-number\\">1</span>):\\n          numSums[i]=numSums[i<span class=\\"hljs-number\\">-1</span>]+nums[i<span class=\\"hljs-number\\">-1</span>]\\n        self.numSums=numSums\\n\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">sumRange</span><span class=\\"hljs-params\\">(self, i, j)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type i: int\\n        :type j: int\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        <span class=\\"hljs-comment\\"># print self.numSums</span>\\n        <span class=\\"hljs-keyword\\">return</span> self.numSums[j+<span class=\\"hljs-number\\">1</span>]-self.numSums[i]\\n\\n\\n<span class=\\"hljs-comment\\"># Your NumArray object will be instantiated and called as such:</span>\\n<span class=\\"hljs-comment\\"># obj = NumArray(nums)</span>\\n<span class=\\"hljs-comment\\"># param_1 = obj.sumRange(i,j)</span>\\n</code></pre>\\n"],"querySlug":"range-sum-query-immutable","created_at":"2019-03-01","timeArr":[2019,2,1,16,33,2,0],"hasThinking":false,"content":"<p>给定一个整数数组  <code>nums</code>，求出数组从索引 <code>i</code><em> </em>到 <code>j</code>（<code>i ≤ j</code>）范围内元素的总和，包含 <code>i</code>、<code>j </code>两点。</p>\\n\\n<div class=\\"original__bRMd\\">\\n<div>\\n<p>实现 <code>NumArray</code> 类：</p>\\n\\n<ul>\\n\\t<li><code>NumArray(int[] nums)</code> 使用数组 <code>nums</code> 初始化对象</li>\\n\\t<li><code>int sumRange(int i, int j)</code> 返回数组 <code>nums</code> 从索引 <code>i</code><em> </em>到 <code>j</code><em>（</em><code>i ≤ j</code>）范围内元素的总和，包含 <code>i</code>、<code>j </code>两点（也就是 <code>sum(nums[i], nums[i + 1], ... , nums[j])</code>）</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>\\n[\\"NumArray\\", \\"sumRange\\", \\"sumRange\\", \\"sumRange\\"]\\n[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]\\n<strong>输出：\\n</strong>[null, 1, -1, -3]\\n\\n<strong>解释：</strong>\\nNumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);\\nnumArray.sumRange(0, 2); // return 1 ((-2) + 0 + 3)\\nnumArray.sumRange(2, 5); // return -1 (3 + (-5) + 2 + (-1)) \\nnumArray.sumRange(0, 5); // return -3 ((-2) + 0 + 3 + (-5) + 2 + (-1))\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 <= nums.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>-10<sup>5</sup> <= nums[i] <= 10<sup>5</sup></code></li>\\n\\t<li><code>0 <= i <= j < nums.length</code></li>\\n\\t<li>最多调用 <code>10<sup>4</sup></code> 次 <code>sumRange</code><strong> </strong>方法</li>\\n</ul>\\n</div>\\n</div>\\n","title":"303. 区域和检索 - 数组不可变","relatedTags":["设计","数组","前缀和"],"difficult":"Easy","lang":["python"],"uniqueID":"303","slug":"303-Range-Sum-Query-Immutable"}')}}]);