(window.webpackJsonp=window.webpackJsonp||[]).push([[578],{1376:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[][]}</span> <span class=\\"hljs-variable\\">roads</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> maximalNetworkRank = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n, roads</span>) </span>{\\n    <span class=\\"hljs-keyword\\">let</span> indegree=<span class=\\"hljs-built_in\\">Array</span>(n).fill(<span class=\\"hljs-number\\">0</span>)\\n    <span class=\\"hljs-keyword\\">let</span> connection={}\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [s,t] <span class=\\"hljs-keyword\\">of</span> roads){\\n        indegree[s]++\\n        indegree[t]++\\n        <span class=\\"hljs-keyword\\">if</span>(connection[s]==<span class=\\"hljs-literal\\">null</span>){\\n            connection[s]={}\\n        }\\n        <span class=\\"hljs-keyword\\">if</span>(connection[t]==<span class=\\"hljs-literal\\">null</span>){\\n            connection[t]={}\\n        }\\n        connection[s][t]=<span class=\\"hljs-literal\\">true</span>\\n        connection[t][s]=<span class=\\"hljs-literal\\">true</span>\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;n;i++){\\n        <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=i+<span class=\\"hljs-number\\">1</span>;j&lt;n;j++){\\n            <span class=\\"hljs-keyword\\">let</span> sum=indegree[i]+indegree[j]\\n            <span class=\\"hljs-keyword\\">if</span>(connection[i] &amp;&amp; connection[i][j]){\\n                sum--\\n            }\\n            res=<span class=\\"hljs-built_in\\">Math</span>.max(res,sum)\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"maximal-network-rank","created_at":"2020-10-13","timeArr":[2020,9,13,10,15,33,0],"hasThinking":false,"content":"<p><code>n</code> 座城市和一些连接这些城市的道路 <code>roads</code> 共同组成一个基础设施网络。每个 <code>roads[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> 都表示在城市 <code>a<sub>i</sub></code> 和 <code>b<sub>i</sub></code> 之间有一条双向道路。</p>\\n\\n<p>两座不同城市构成的 <strong>城市对</strong> 的 <strong>网络秩</strong> 定义为：与这两座城市 <strong>直接</strong> 相连的道路总数。如果存在一条道路直接连接这两座城市，则这条道路只计算 <strong>一次</strong> 。</p>\\n\\n<p>整个基础设施网络的 <strong>最大网络秩</strong> 是所有不同城市对中的 <strong>最大网络秩</strong> 。</p>\\n\\n<p>给你整数 <code>n</code> 和数组 <code>roads</code>，返回整个基础设施网络的 <strong>最大网络秩</strong> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<p><strong><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/10/11/ex1.png\\" style=\\"width: 292px; height: 172px;\\" /></strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 4, roads = [[0,1],[0,3],[1,2],[1,3]]\\n<strong>输出：</strong>4\\n<strong>解释：</strong>城市 0 和 1 的网络秩是 4，因为共有 4 条道路与城市 0 或 1 相连。位于 0 和 1 之间的道路只计算一次。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<p><strong><img alt=\\"\\" src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/10/11/ex2.png\\" style=\\"width: 292px; height: 172px;\\" /></strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 5, roads = [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]\\n<strong>输出：</strong>5\\n<strong>解释：</strong>共有 5 条道路与城市 1 或 2 相连。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 8, roads = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]\\n<strong>输出：</strong>5\\n<strong>解释：</strong>2 和 5 的网络秩为 5，注意并非所有的城市都需要连接起来。\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 <= n <= 100</code></li>\\n\\t<li><code>0 <= roads.length <= n * (n - 1) / 2</code></li>\\n\\t<li><code>roads[i].length == 2</code></li>\\n\\t<li><code>0 <= a<sub>i</sub>, b<sub>i</sub> <= n-1</code></li>\\n\\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\\n\\t<li>每对城市之间 <strong>最多只有一条</strong> 道路相连</li>\\n</ul>\\n","title":"1615. 最大网络秩","relatedTags":["图"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1615","slug":"1615-Maximal-Network-Rank"}')}}]);