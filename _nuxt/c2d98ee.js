(window.webpackJsonp=window.webpackJsonp||[]).push([[1298],{2096:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">s</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> restoreIpAddresses = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">s</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> result=[]\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">backtrack</span>(<span class=\\"hljs-params\\">str,remain,cur,total</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(str.length&gt;remain*<span class=\\"hljs-number\\">3</span>)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span>(+cur&gt;<span class=\\"hljs-number\\">255</span> || (cur.length&gt;<span class=\\"hljs-number\\">1</span> &amp;&amp; cur[<span class=\\"hljs-number\\">0</span>]===<span class=\\"hljs-string\\">\\"0\\"</span>))<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span>(remain===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> result.push(total.substring(<span class=\\"hljs-number\\">1</span>))\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;=<span class=\\"hljs-number\\">3</span>;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(str.length&lt;i)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">let</span> cur=str.substring(<span class=\\"hljs-number\\">0</span>,i)\\n      backtrack(str.substring(i),remain<span class=\\"hljs-number\\">-1</span>,cur,total+<span class=\\"hljs-string\\">\'.\'</span>+cur)\\n    }\\n  }\\n  backtrack(s,<span class=\\"hljs-number\\">4</span>,<span class=\\"hljs-string\\">\'\'</span>,<span class=\\"hljs-string\\">\'\'</span>)\\n  <span class=\\"hljs-keyword\\">return</span> result\\n};\\n</code></pre>\\n"],"querySlug":"restore-ip-addresses","created_at":"2019-03-23","timeArr":[2019,2,23,13,1,11,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p><code>回溯</code>，注意几个规则：</p>\\n<ol>\\n<li>\\n<p>变量<code>cur</code>表示当前值，如果这个值<code>&gt;255</code>，不成立，同时，如果这个值存在<code>前导0</code>，同样不成立。</p>\\n</li>\\n<li>\\n<p>变量<code>remain</code>表示还剩下的<code>IP</code>值(初始为<code>4</code>)。</p>\\n</li>\\n<li>\\n<p>变量<code>str</code>表示还剩下的字符串，如果<code>str.length&gt;remain*3</code>，不成立，因为每一个<code>IP</code>数值不可能超过<code>3</code>位。</p>\\n</li>\\n</ol>\\n","content":"<p>给定一个只包含数字的字符串，用以表示一个 IP 地址，返回所有可能从 <code>s</code> 获得的 <strong>有效 IP 地址 </strong>。你可以按任何顺序返回答案。</p>\\n\\n<p><strong>有效 IP 地址</strong> 正好由四个整数（每个整数位于 0 到 255 之间组成，且不能含有前导 <code>0</code>），整数之间用 <code>\'.\'</code> 分隔。</p>\\n\\n<p>例如：\\"0.1.2.201\\" 和 \\"192.168.1.1\\" 是 <strong>有效</strong> IP 地址，但是 \\"0.011.255.245\\"、\\"192.168.1.312\\" 和 \\"192.168@1.1\\" 是 <strong>无效</strong> IP 地址。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"25525511135\\"\\n<strong>输出：</strong>[\\"255.255.11.135\\",\\"255.255.111.35\\"]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"0000\\"\\n<strong>输出：</strong>[\\"0.0.0.0\\"]\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"1111\\"\\n<strong>输出：</strong>[\\"1.1.1.1\\"]\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"010010\\"\\n<strong>输出：</strong>[\\"0.10.0.10\\",\\"0.100.1.0\\"]\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>s = \\"101023\\"\\n<strong>输出：</strong>[\\"1.0.10.23\\",\\"1.0.102.3\\",\\"10.1.0.23\\",\\"10.10.2.3\\",\\"101.0.2.3\\"]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 <= s.length <= 3000</code></li>\\n\\t<li><code>s</code> 仅由数字组成</li>\\n</ul>\\n","title":"93. 复原 IP 地址","relatedTags":["字符串","回溯"],"difficult":"Middle","lang":["javascript"],"uniqueID":"93","slug":"93-Restore-IP-Addresses"}')}}]);