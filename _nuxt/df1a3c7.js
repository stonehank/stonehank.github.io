(window.webpackJsonp=window.webpackJsonp||[]).push([[953],{1751:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">n</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> nextGreaterElement = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">n</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> limit=<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">2</span>,<span class=\\"hljs-number\\">31</span>)\\n  <span class=\\"hljs-keyword\\">if</span>(n&gt;limit)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">let</span> arr=(n+<span class=\\"hljs-string\\">\'\'</span>).split(<span class=\\"hljs-string\\">\'\'</span>)\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=arr.length<span class=\\"hljs-number\\">-2</span>;i&gt;=<span class=\\"hljs-number\\">0</span>;i--){\\n    <span class=\\"hljs-keyword\\">let</span> idx=i\\n    <span class=\\"hljs-keyword\\">while</span>(idx&lt;arr.length<span class=\\"hljs-number\\">-1</span> &amp;&amp; arr[idx]&gt;=arr[idx+<span class=\\"hljs-number\\">1</span>]){\\n      swap(idx,idx+<span class=\\"hljs-number\\">1</span>)\\n      idx++\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(idx&lt;arr.length<span class=\\"hljs-number\\">-1</span> &amp;&amp; arr[idx]&lt;arr[idx+<span class=\\"hljs-number\\">1</span>]){\\n      idx+=<span class=\\"hljs-number\\">1</span>\\n      <span class=\\"hljs-keyword\\">while</span>(idx&gt;i){\\n        swap(idx,idx<span class=\\"hljs-number\\">-1</span>)\\n        idx--\\n      }\\n      <span class=\\"hljs-keyword\\">break</span>\\n    }\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">swap</span>(<span class=\\"hljs-params\\">i,j</span>)</span>{\\n    <span class=\\"hljs-keyword\\">let</span> t=arr[i]\\n    arr[i]=arr[j]\\n    arr[j]=t\\n  }\\n  <span class=\\"hljs-keyword\\">let</span> res=arr.join(<span class=\\"hljs-string\\">\'\'</span>)\\n  <span class=\\"hljs-keyword\\">let</span> ans=+res\\n  <span class=\\"hljs-keyword\\">if</span>(ans&gt;limit || ans&lt;=n)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n  <span class=\\"hljs-keyword\\">return</span> +res\\n};\\n</code></pre>\\n"],"querySlug":"next-greater-element-iii","created_at":"2019-03-25","timeArr":[2019,2,25,20,30,12,0],"hasThinking":false,"content":"<p>给你一个正整数 <code>n</code> ，请你找出符合条件的最小整数，其由重新排列 <code>n</code><strong> </strong>中存在的每位数字组成，并且其值大于 <code>n</code> 。如果不存在这样的正整数，则返回 <code>-1</code> 。</p>\\n\\n<p><strong>注意</strong> ，返回的整数应当是一个 <strong>32 位整数</strong> ，如果存在满足题意的答案，但不是 <strong>32 位整数</strong> ，同样返回 <code>-1</code> 。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 12\\n<strong>输出：</strong>21\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>n = 21\\n<strong>输出：</strong>-1\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= n <= 2<sup>31</sup> - 1</code></li>\\n</ul>\\n","title":"556. 下一个更大元素 III","relatedTags":["数学","双指针","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"556","slug":"556-Next-Greater-Element-III"}')}}]);