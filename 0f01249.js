(window.webpackJsonp=window.webpackJsonp||[]).push([[643],{1441:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> largestNumber = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n    nums.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>{\\n        <span class=\\"hljs-keyword\\">let</span> strA=<span class=\\"hljs-built_in\\">String</span>(a)\\n        <span class=\\"hljs-keyword\\">let</span> strB=<span class=\\"hljs-built_in\\">String</span>(b)\\n        <span class=\\"hljs-keyword\\">let</span> lenA=strA.length\\n        <span class=\\"hljs-keyword\\">let</span> lenB=strB.length\\n        <span class=\\"hljs-keyword\\">if</span>(lenA!==lenB){\\n            <span class=\\"hljs-keyword\\">let</span> t=strA\\n            strA=strA+strB\\n            strB=strB+strA\\n        }\\n        <span class=\\"hljs-keyword\\">if</span>(strA&lt;strB){\\n            <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">-1</span>\\n        }\\n        \\n    })\\n    <span class=\\"hljs-keyword\\">let</span> res=nums.join(<span class=\\"hljs-string\\">\'\'</span>)\\n    <span class=\\"hljs-keyword\\">let</span> ans=<span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">let</span> leadZero=<span class=\\"hljs-literal\\">true</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;res.length;i++){\\n        <span class=\\"hljs-keyword\\">let</span> s=res[i]\\n        <span class=\\"hljs-keyword\\">if</span>(s===<span class=\\"hljs-string\\">\'0\'</span> &amp;&amp; leadZero &amp;&amp; i!==res.length<span class=\\"hljs-number\\">-1</span>){\\n            <span class=\\"hljs-keyword\\">continue</span>\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            leadZero=<span class=\\"hljs-literal\\">false</span>\\n            ans+=s\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> ans\\n};\\n</code></pre>\\n"],"querySlug":"largest-number","created_at":"2021-04-12","timeArr":[2021,3,12,7,32,5,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>对于两个数字<code>a</code>，<code>b</code>，只需要比较它们的字符串相加<code>a+\'\'+b</code>，<code>b+\'\'+a</code>\'，并且只能找它们从大到小排序。</p>\\n","content":"<p>给定一组非负整数 <code>nums</code>，重新排列每个数的顺序（每个数不可拆分）使之组成一个最大的整数。</p>\\n\\n<p><strong>注意：</strong>输出结果可能非常大，所以你需要返回一个字符串而不是整数。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入<code>：</code></strong><code>nums = [10,2]</code>\\n<strong>输出：</strong><code>\\"210\\"</code></pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入<code>：</code></strong><code>nums = [3,30,34,5,9]</code>\\n<strong>输出：</strong><code>\\"9534330\\"</code>\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入<code>：</code></strong>nums = [1]\\n<strong>输出：</strong>\\"1\\"\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入<code>：</code></strong>nums = [10]\\n<strong>输出：</strong>\\"10\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 100</code></li>\\n\\t<li><code>0 <= nums[i] <= 10<sup>9</sup></code></li>\\n</ul>\\n","title":"179. 最大数","relatedTags":["贪心","字符串","排序"],"difficult":"Middle","lang":["javascript"],"uniqueID":"179","slug":"179-Largest-Number"}')}}]);