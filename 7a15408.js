(window.webpackJsonp=window.webpackJsonp||[]).push([[1091],{1889:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code>\\n<span class=\\"hljs-keyword\\">var</span> MyCalendarTwo = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>) </span>{\\n  <span class=\\"hljs-keyword\\">this</span>.range=[]\\n  <span class=\\"hljs-keyword\\">this</span>.repeat=[]\\n};\\n\\n<span class=\\"hljs-comment\\">/** \\n * @param {number} start \\n * @param {number} end\\n * @return {boolean}\\n */</span>\\nMyCalendarTwo.prototype.book = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">start, end</span>) </span>{\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> itv <span class=\\"hljs-keyword\\">of</span> <span class=\\"hljs-keyword\\">this</span>.repeat){\\n    <span class=\\"hljs-keyword\\">if</span>(start&lt;itv[<span class=\\"hljs-number\\">1</span>] &amp;&amp; end&gt;itv[<span class=\\"hljs-number\\">0</span>])<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">false</span>\\n  }\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> itv <span class=\\"hljs-keyword\\">of</span> <span class=\\"hljs-keyword\\">this</span>.range){\\n    <span class=\\"hljs-keyword\\">if</span>(start&lt;itv[<span class=\\"hljs-number\\">1</span>] &amp;&amp; end&gt;itv[<span class=\\"hljs-number\\">0</span>]){\\n      <span class=\\"hljs-keyword\\">this</span>.repeat.push([<span class=\\"hljs-built_in\\">Math</span>.max(start,itv[<span class=\\"hljs-number\\">0</span>]),<span class=\\"hljs-built_in\\">Math</span>.min(end,itv[<span class=\\"hljs-number\\">1</span>])])\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">this</span>.range.push([start,end])\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>\\n};\\n\\n<span class=\\"hljs-comment\\">/** \\n * Your MyCalendarTwo object will be instantiated and called as such:\\n * var obj = Object.create(MyCalendarTwo).createNew()\\n * var param_1 = obj.book(start,end)\\n */</span>\\n</code></pre>\\n"],"querySlug":"my-calendar-ii","created_at":"2019-03-15","timeArr":[2019,2,15,11,28,25,0],"hasThinking":false,"content":"<p>实现一个 <code>MyCalendar</code> 类来存放你的日程安排。如果要添加的时间内不会导致三重预订时，则可以存储这个新的日程安排。</p>\\n\\n<p><code>MyCalendar</code> 有一个 <code>book(int start, int end)</code>方法。它意味着在 <code>start</code> 到 <code>end</code> 时间内增加一个日程安排，注意，这里的时间是半开区间，即 <code>[start, end)</code>, 实数&nbsp;<code>x</code> 的范围为， &nbsp;<code>start &lt;= x &lt; end</code>。</p>\\n\\n<p>当三个日程安排有一些时间上的交叉时（例如三个日程安排都在同一时间内），就会产生三重预订。</p>\\n\\n<p>每次调用 <code>MyCalendar.book</code>方法时，如果可以将日程安排成功添加到日历中而不会导致三重预订，返回 <code>true</code>。否则，返回 <code>false</code> 并且不要将该日程安排添加到日历中。</p>\\n\\n<p>请按照以下步骤调用<code>MyCalendar</code> 类: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code></p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre>MyCalendar();\\nMyCalendar.book(10, 20); // returns true\\nMyCalendar.book(50, 60); // returns true\\nMyCalendar.book(10, 40); // returns true\\nMyCalendar.book(5, 15); // returns false\\nMyCalendar.book(5, 10); // returns true\\nMyCalendar.book(25, 55); // returns true\\n<strong>解释：</strong> \\n前两个日程安排可以添加至日历中。 第三个日程安排会导致双重预订，但可以添加至日历中。\\n第四个日程安排活动（5,15）不能添加至日历中，因为它会导致三重预订。\\n第五个日程安排（5,10）可以添加至日历中，因为它未使用已经双重预订的时间10。\\n第六个日程安排（25,55）可以添加至日历中，因为时间 [25,40] 将和第三个日程安排双重预订；\\n时间 [40,50] 将单独预订，时间 [50,55）将和第二个日程安排双重预订。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li>每个测试用例，调用&nbsp;<code>MyCalendar.book</code>&nbsp;函数最多不超过&nbsp;<code>1000</code>次。</li>\\n\\t<li>调用函数&nbsp;<code>MyCalendar.book(start, end)</code>时，&nbsp;<code>start</code> 和&nbsp;<code>end</code> 的取值范围为&nbsp;<code>[0, 10^9]</code>。</li>\\n</ul>\\n","title":"731. 我的日程安排表 II","relatedTags":["设计","线段树","有序集合"],"difficult":"Middle","lang":["javascript"],"uniqueID":"731","slug":"731-My-Calendar-II"}')}}]);