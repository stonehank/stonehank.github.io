(window.webpackJsonp=window.webpackJsonp||[]).push([[1289],{2087:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">S</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> minAddToMakeValid = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">S</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> stack=[],res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> s <span class=\\"hljs-keyword\\">of</span> S){\\n    <span class=\\"hljs-keyword\\">if</span>(s===<span class=\\"hljs-string\\">\\"(\\"</span>){\\n      stack.push(s)\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      <span class=\\"hljs-keyword\\">if</span>(stack.length&gt;<span class=\\"hljs-number\\">0</span>)stack.pop()\\n      <span class=\\"hljs-keyword\\">else</span> res++\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> res+stack.length\\n};\\n</code></pre>\\n"],"querySlug":"minimum-add-to-make-parentheses-valid","created_at":"2019-04-07","timeArr":[2019,3,7,12,27,55,0],"hasThinking":false,"content":"<p>给定一个由&nbsp;<code>&#39;(&#39;</code>&nbsp;和&nbsp;<code>&#39;)&#39;</code>&nbsp;括号组成的字符串 <code>S</code>，我们需要添加最少的括号（ <code>&#39;(&#39;</code>&nbsp;或是&nbsp;<code>&#39;)&#39;</code>，可以在任何位置），以使得到的括号字符串有效。</p>\\n\\n<p>从形式上讲，只有满足下面几点之一，括号字符串才是有效的：</p>\\n\\n<ul>\\n\\t<li>它是一个空字符串，或者</li>\\n\\t<li>它可以被写成&nbsp;<code>AB</code>&nbsp;（<code>A</code>&nbsp;与&nbsp;<code>B</code>&nbsp;连接）, 其中&nbsp;<code>A</code> 和&nbsp;<code>B</code>&nbsp;都是有效字符串，或者</li>\\n\\t<li>它可以被写作&nbsp;<code>(A)</code>，其中&nbsp;<code>A</code>&nbsp;是有效字符串。</li>\\n</ul>\\n\\n<p>给定一个括号字符串，返回为使结果字符串有效而必须添加的最少括号数。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>&quot;())&quot;\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>&quot;(((&quot;\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>&quot;()&quot;\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>&quot;()))((&quot;\\n<strong>输出：</strong>4</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>S.length &lt;= 1000</code></li>\\n\\t<li><code>S</code> 只包含&nbsp;<code>&#39;(&#39;</code> 和&nbsp;<code>&#39;)&#39;</code>&nbsp;字符。</li>\\n</ol>\\n\\n<p>&nbsp;</p>\\n","title":"921. 使括号有效的最少添加","relatedTags":["栈","贪心","字符串"],"difficult":"Middle","lang":["javascript"],"uniqueID":"921","slug":"921-Minimum-Add-to-Make-Parentheses-Valid"}')}}]);