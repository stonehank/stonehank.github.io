(window.webpackJsonp=window.webpackJsonp||[]).push([[655],{1453:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{character[][]}</span> <span class=\\"hljs-variable\\">grid</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> numIslands = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">grid</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">if</span>(grid.length===<span class=\\"hljs-number\\">0</span>)<span class=\\"hljs-keyword\\">return</span> count\\n  <span class=\\"hljs-keyword\\">let</span> m=grid.length,n=grid[<span class=\\"hljs-number\\">0</span>].length\\n  <span class=\\"hljs-keyword\\">let</span> moves=[[<span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">0</span>],[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">-1</span>],[<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">1</span>]]\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;m;i++){\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;n;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(grid[i][j]===<span class=\\"hljs-string\\">\\"2\\"</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(grid[i][j]!==<span class=\\"hljs-string\\">\\"1\\"</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      count++\\n      dfs([i,j])\\n    }\\n  }\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">dfs</span>(<span class=\\"hljs-params\\">[x,y]</span>)</span>{\\n    grid[x][y]=<span class=\\"hljs-string\\">\\"2\\"</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> [dx,dy] <span class=\\"hljs-keyword\\">of</span> moves){\\n      <span class=\\"hljs-keyword\\">let</span> nx=dx+x,ny=dy+y\\n      <span class=\\"hljs-keyword\\">if</span>(nx&lt;<span class=\\"hljs-number\\">0</span> || ny&lt;<span class=\\"hljs-number\\">0</span> || nx&gt;=m || ny&gt;=n)<span class=\\"hljs-keyword\\">continue</span>\\n      <span class=\\"hljs-keyword\\">if</span>(grid[nx][ny]!==<span class=\\"hljs-string\\">\\"1\\"</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      dfs([nx,ny])\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> count\\n};\\n</code></pre>\\n"],"querySlug":"number-of-islands","created_at":"2019-04-08","timeArr":[2019,3,8,12,52,38,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p><code>dfs</code>遍历，将所有连接的<code>1</code>都改为<code>2</code>(或者使用<code>visited</code>记录)，每次找到新没有被visit的<code>1</code>，<code>res++</code>。</p>\\n","content":"<p>给你一个由 <code>\'1\'</code>（陆地）和 <code>\'0\'</code>（水）组成的的二维网格，请你计算网格中岛屿的数量。</p>\\n\\n<p>岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。</p>\\n\\n<p>此外，你可以假设该网格的四条边均被水包围。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>grid = [\\n  [\\"1\\",\\"1\\",\\"1\\",\\"1\\",\\"0\\"],\\n  [\\"1\\",\\"1\\",\\"0\\",\\"1\\",\\"0\\"],\\n  [\\"1\\",\\"1\\",\\"0\\",\\"0\\",\\"0\\"],\\n  [\\"0\\",\\"0\\",\\"0\\",\\"0\\",\\"0\\"]\\n]\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>grid = [\\n  [\\"1\\",\\"1\\",\\"0\\",\\"0\\",\\"0\\"],\\n  [\\"1\\",\\"1\\",\\"0\\",\\"0\\",\\"0\\"],\\n  [\\"0\\",\\"0\\",\\"1\\",\\"0\\",\\"0\\"],\\n  [\\"0\\",\\"0\\",\\"0\\",\\"1\\",\\"1\\"]\\n]\\n<strong>输出：</strong>3\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>m == grid.length</code></li>\\n\\t<li><code>n == grid[i].length</code></li>\\n\\t<li><code>1 <= m, n <= 300</code></li>\\n\\t<li><code>grid[i][j]</code> 的值为 <code>\'0\'</code> 或 <code>\'1\'</code></li>\\n</ul>\\n","title":"200. 岛屿数量","relatedTags":["深度优先搜索","广度优先搜索","并查集","数组","矩阵"],"difficult":"Middle","lang":["javascript"],"uniqueID":"200","slug":"200-Number-of-Islands"}')}}]);