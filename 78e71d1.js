(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{618:function(e){e.exports=JSON.parse('{"content":"<h3 id=\\"querystring\\">querystring</h3>\\n<ul>\\n<li>querystring.stringify</li>\\n</ul>\\n<p>参数一：转换对象</p>\\n<p><code>querystring.stringify({x:1,y:2,c:[3,4]})</code></p>\\n<p>输出：</p>\\n<p><code>x=1&amp;y=2&amp;c=3&amp;c=4</code></p>\\n<p>参数二：输出连接符</p>\\n<p><code>querystring.stringify({x:1,y:2,c:[3,4]},&quot;,&quot;)</code></p>\\n<p>输出：</p>\\n<p><code>x=1,y=2,c=3,c=4</code></p>\\n<p>参数三：key,value连接符</p>\\n<p><code>querystring.stringify({x:1,y:2,c:[3,4]},&quot;,&quot;,&quot;:&quot;)</code></p>\\n<p>输出：</p>\\n<p><code>x:1,y:2,c:3,c:4</code></p>\\n<ul>\\n<li>querystring.parse</li>\\n</ul>\\n<p>参数一，转换对象</p>\\n<p><code>querystring.parse(&quot;x:1,y:2,c:3,c:4&quot;)</code></p>\\n<p>输出：</p>\\n<p><code>{ &#39;x:1,y:2,c:3,c:4&#39;: &#39;&#39; }</code>解析错误，补充参数</p>\\n<p>参数二，连接符</p>\\n<p><code>querystring.parse(&quot;x:1,y:2,c:3,c:4&quot;,&#39;,&#39;)</code></p>\\n<p>输出：</p>\\n<p><code>{ &#39;x:1&#39;: &#39;&#39;, &#39;y:2&#39;: &#39;&#39;, &#39;c:3&#39;: &#39;&#39;, &#39;c:4&#39;: &#39;&#39; }</code>解析错误，补充参数</p>\\n<p>参数三，key,value连接符</p>\\n<p><code>querystring.parse(&quot;x:1,y:2,c:3,c:4&quot;,&#39;,&#39;,&#39;:&#39;)</code></p>\\n<p>输出：</p>\\n<p><code>{ x: &#39;1&#39;, y: &#39;2&#39;, c: [ &#39;3&#39;, &#39;4&#39; ] }</code>解析正确</p>\\n<p>参数四，可接受字符串的最大长度，默认为1000 </p>\\n<p>?? 不常用</p>\\n<ul>\\n<li>querystring.escape</li>\\n</ul>\\n<p>转义，<code>window.encodeURIComponent</code></p>\\n<p><code>querystring.escape(&#39;&lt;你好&gt;&#39;)</code></p>\\n<p>输出：</p>\\n<p><code>%3C%E4%BD%A0%E5%A5%BD%3E</code></p>\\n<ul>\\n<li>querystring.unescape</li>\\n</ul>\\n<p>反转义，<code>window.decodeURIComponent</code></p>\\n<p><code>querystring.unescape(&#39;%3C%E4%BD%A0%E5%A5%BD%3E&#39;)</code></p>\\n<p>输出：</p>\\n<p><code>&lt;你好&gt;</code></p>\\n<hr>\\n<h3 id=\\"urlparse\\">url.parse</h3>\\n<p>第一个参数：url地址\\n<code>url.parse(&#39;http://www.somesite.com:8080/video?x=1&amp;y=2&#39;)</code></p>\\n<p>输出：</p>\\n<pre><code><pre class=\\"hljs\\"><code>Url {\\n  protocol: \'http:\',\\n  slashes: true,\\n  auth: null,\\n  host: \'www.somesite.com:8080\',\\n  port: \'8080\',\\n  hostname: \'www.somesite.com\',\\n  hash: null,\\n  search: \'?x=1&amp;y=2\',\\n  query: \'x=1&amp;y=2\',\\n  pathname: \'/video\',\\n  path: \'/video?x=1&amp;y=2\',\\n  href: \'http://www.somesite.com:8080/video?x=1&amp;y=2\' }</code></pre></code></pre><p>第二个参数：是否解析query</p>\\n<p><code>url.parse(&#39;http://www.somesite.com:8080/video?x=1&amp;y=2&#39;,true)</code></p>\\n<p>输出：</p>\\n<pre><code><pre class=\\"hljs\\"><code>Url {\\n  protocol: \'http:\',\\n  slashes: true,\\n  auth: null,\\n  host: \'www.somesite.com:8080\',\\n  port: \'8080\',\\n  hostname: \'www.somesite.com\',\\n  hash: null,\\n  search: \'?x=1&amp;y=2\',\\n  query: { x: \'1\', y: \'2\' },\\n  pathname: \'/video\',\\n  path: \'/video?x=1&amp;y=2\',\\n  href: \'http://www.somesite.com:8080/video?x=1&amp;y=2\' }</code></pre></code></pre><p>第三个参数：是否可以省略protocol</p>\\n<p><code>url.parse(&#39;//www.somesite.com:8080/video?x=1&amp;y=2&#39;,true,true)</code></p>\\n<p>输出：</p>\\n<pre><code><pre class=\\"hljs\\"><code>Url {\\n  protocol: null,\\n  slashes: true,\\n  auth: null,\\n  host: \'www.somesite.com:8080\',\\n  port: \'8080\',\\n  hostname: \'www.somesite.com\',\\n  hash: null,\\n  search: \'?x=1&amp;y=2\',\\n  query: { x: \'1\', y: \'2\' },\\n  pathname: \'/video\',\\n  path: \'/video?x=1&amp;y=2\',\\n  href: \'//www.somesite.com:8080/video?x=1&amp;y=2\' }</code></pre></code></pre><h3 id=\\"urlresolve\\">url.resolve</h3>\\n<pre><code class=\\"language-js\\"><pre class=\\"hljs\\"><code><span class=\\"hljs-keyword\\">const</span> url = <span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'url\'</span>);\\nurl.resolve(<span class=\\"hljs-string\\">\'/one/two/three\'</span>, <span class=\\"hljs-string\\">\'four\'</span>);         <span class=\\"hljs-comment\\">// \'/one/two/four\'</span>\\nurl.resolve(<span class=\\"hljs-string\\">\'http://example.com/\'</span>, <span class=\\"hljs-string\\">\'/one\'</span>);    <span class=\\"hljs-comment\\">// \'http://example.com/one\'</span>\\nurl.resolve(<span class=\\"hljs-string\\">\'http://example.com/one\'</span>, <span class=\\"hljs-string\\">\'/two\'</span>); <span class=\\"hljs-comment\\">// \'http://example.com/two\'</span></code></pre></code></pre>\\n","toc":[{"anchor":"querystring","level":3,"text":"querystring"},{"anchor":"urlparse","level":3,"text":"url.parse"},{"anchor":"urlresolve","level":3,"text":"url.resolve"}],"relatedTags":null,"created_at":"2018-12-05","timeArr":[2018,11,5,0,0,0,0],"title":"node-querystring和url笔记","uuid":"87971cd868e8cd749775bd93de4025ef1746d9d7","summary":"<h4>querystring</h4>\\n<ul>\\n<li>querystring.stringify</li>\\n</ul>\\n<p>参数一：转换对象</p>\\n<p><code>querystring.stringify({x:1,y:2,c:[3,4]})</code></p>\\n<p>输出：</p>\\n<p><code>x=1&amp;y=2&amp;c=3&amp;c=4</code></p>\\n<p>参数二：输出连接符</p>\\n<p>`querystring.stringify({x:1,y...</p>","slug":"node-querystring-he-url-bi-ji","sha":"65baf42e906ec1137456584196cc311c143c7570"}')}}]);