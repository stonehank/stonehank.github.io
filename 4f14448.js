(window.webpackJsonp=window.webpackJsonp||[]).push([[321],{1119:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">d</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">f</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">target</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">let</span> memo={}\\n<span class=\\"hljs-keyword\\">let</span> MOD=<span class=\\"hljs-number\\">1e9</span>+<span class=\\"hljs-number\\">7</span>\\n<span class=\\"hljs-keyword\\">var</span> numRollsToTarget = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">d, f, target</span>) </span>{\\n  <span class=\\"hljs-comment\\">// console.log(d,f,target)</span>\\n  <span class=\\"hljs-keyword\\">if</span>(target&gt;d*f)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">if</span>(target&lt;d)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">if</span>(d===<span class=\\"hljs-number\\">1</span>)<span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-number\\">1</span>\\n  <span class=\\"hljs-comment\\">// if(target&lt;d)return 0</span>\\n  <span class=\\"hljs-keyword\\">if</span>(memo[d+<span class=\\"hljs-string\\">\' \'</span>+f+<span class=\\"hljs-string\\">\' \'</span>+target])<span class=\\"hljs-keyword\\">return</span> memo[d+<span class=\\"hljs-string\\">\' \'</span>+f+<span class=\\"hljs-string\\">\' \'</span>+target]\\n  <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;=f;i++){\\n    res+=(numRollsToTarget(d<span class=\\"hljs-number\\">-1</span>,f,target-i) % MOD)\\n  }\\n  memo[d+<span class=\\"hljs-string\\">\' \'</span>+f+<span class=\\"hljs-string\\">\' \'</span>+target]=res % MOD\\n  <span class=\\"hljs-keyword\\">return</span> res % MOD\\n};\\n</code></pre>\\n"],"querySlug":"number-of-dice-rolls-with-target-sum","created_at":"2019-08-11","timeArr":[2019,7,11,10,45,44,0],"hasThinking":false,"content":"<p>这里有&nbsp;<code>d</code>&nbsp;个一样的骰子，每个骰子上都有&nbsp;<code>f</code>&nbsp;个面，分别标号为&nbsp;<code>1, 2, ..., f</code>。</p>\\n\\n<p>我们约定：掷骰子的得到总点数为各骰子面朝上的数字的总和。</p>\\n\\n<p>如果需要掷出的总点数为&nbsp;<code>target</code>，请你计算出有多少种不同的组合情况（所有的组合情况总共有 <code>f^d</code> 种），<strong>模&nbsp;<code>10^9 + 7</code></strong>&nbsp;后返回。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>d = 1, f = 6, target = 3\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>d = 2, f = 6, target = 7\\n<strong>输出：</strong>6\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>d = 2, f = 5, target = 10\\n<strong>输出：</strong>1\\n</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre><strong>输入：</strong>d = 1, f = 2, target = 3\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre><strong>输入：</strong>d = 30, f = 30, target = 500\\n<strong>输出：</strong>222616187</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= d, f &lt;= 30</code></li>\\n\\t<li><code>1 &lt;= target &lt;= 1000</code></li>\\n</ul>\\n","title":"1155. 掷骰子的N种方法","relatedTags":["动态规划"],"difficult":"Middle","lang":["javascript"],"uniqueID":"1155","slug":"1155-Number-of-Dice-Rolls-With-Target-Sum"}')}}]);