(window.webpackJsonp=window.webpackJsonp||[]).push([[1386],{2184:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">staple</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">drinks</span></span>\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">x</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> breakfastNumber = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">staple, drinks, x</span>) </span>{\\n    staple.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n    drinks.sort(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,b</span>)=&gt;</span>a-b)\\n    <span class=\\"hljs-keyword\\">let</span> MOD=<span class=\\"hljs-number\\">1e9</span>+<span class=\\"hljs-number\\">7</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">bsFront</span>(<span class=\\"hljs-params\\">arr,n</span>)</span>{\\n      <span class=\\"hljs-keyword\\">let</span> lo=<span class=\\"hljs-number\\">0</span>,hi=arr.length<span class=\\"hljs-number\\">-1</span>\\n      <span class=\\"hljs-keyword\\">while</span>(lo&lt;hi){\\n        <span class=\\"hljs-keyword\\">let</span> mid=<span class=\\"hljs-built_in\\">Math</span>.ceil((lo+hi)/<span class=\\"hljs-number\\">2</span>)\\n        <span class=\\"hljs-keyword\\">if</span>(arr[mid]&gt;n)hi=mid<span class=\\"hljs-number\\">-1</span>\\n        <span class=\\"hljs-keyword\\">else</span> lo=mid\\n      }\\n      <span class=\\"hljs-keyword\\">return</span> lo\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> count=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;staple.length;i++){\\n        <span class=\\"hljs-keyword\\">if</span>(staple[i]&gt;x)<span class=\\"hljs-keyword\\">break</span>\\n        <span class=\\"hljs-keyword\\">let</span> next=x-staple[i]\\n        <span class=\\"hljs-keyword\\">let</span> idx=bsFront(drinks,next)\\n        <span class=\\"hljs-keyword\\">if</span>(drinks[idx]&gt;next)<span class=\\"hljs-keyword\\">continue</span>\\n        count=(count+idx+<span class=\\"hljs-number\\">1</span>) % MOD\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> count\\n};\\n</code></pre>\\n"],"querySlug":"2vYnGI","created_at":"2020-09-12","timeArr":[2020,8,12,15,16,54,0],"hasThinking":false,"content":"<p>小扣在秋日市集选择了一家早餐摊位，一维整型数组 <code>staple</code> 中记录了每种主食的价格，一维整型数组 <code>drinks</code> 中记录了每种饮料的价格。小扣的计划选择一份主食和一款饮料，且花费不超过 <code>x</code> 元。请返回小扣共有多少种购买方案。</p>\\n<p>注意：答案需要以 <code>1e9 + 7 (1000000007)</code> 为底取模，如：计算初始结果为：<code>1000000008</code>，请返回 <code>1</code></p>\\n<p><strong>示例 1：</strong></p>\\n<blockquote>\\n<p>输入：<code>staple = [10,20,5], drinks = [5,5,2], x = 15</code></p>\\n<p>输出：<code>6</code></p>\\n<p>解释：小扣有 6 种购买方案，所选主食与所选饮料在数组中对应的下标分别是：\\n第 1 种方案：staple[0] + drinks[0] = 10 + 5 = 15；\\n第 2 种方案：staple[0] + drinks[1] = 10 + 5 = 15；\\n第 3 种方案：staple[0] + drinks[2] = 10 + 2 = 12；\\n第 4 种方案：staple[2] + drinks[0] = 5 + 5 = 10；\\n第 5 种方案：staple[2] + drinks[1] = 5 + 5 = 10；\\n第 6 种方案：staple[2] + drinks[2] = 5 + 2 = 7。</p>\\n</blockquote>\\n<p><strong>示例 2：</strong></p>\\n<blockquote>\\n<p>输入：<code>staple = [2,1,1], drinks = [8,9,5,1], x = 9</code></p>\\n<p>输出：<code>8</code></p>\\n<p>解释：小扣有 8 种购买方案，所选主食与所选饮料在数组中对应的下标分别是：\\n第 1 种方案：staple[0] + drinks[2] = 2 + 5 = 7；\\n第 2 种方案：staple[0] + drinks[3] = 2 + 1 = 3；\\n第 3 种方案：staple[1] + drinks[0] = 1 + 8 = 9；\\n第 4 种方案：staple[1] + drinks[2] = 1 + 5 = 6；\\n第 5 种方案：staple[1] + drinks[3] = 1 + 1 = 2；\\n第 6 种方案：staple[2] + drinks[0] = 1 + 8 = 9；\\n第 7 种方案：staple[2] + drinks[2] = 1 + 5 = 6；\\n第 8 种方案：staple[2] + drinks[3] = 1 + 1 = 2；</p>\\n</blockquote>\\n<p><strong>提示：</strong></p>\\n<ul>\\n<li><code>1 &lt;= staple.length &lt;= 10^5</code></li>\\n<li><code>1 &lt;= drinks.length &lt;= 10^5</code></li>\\n<li><code>1 &lt;= staple[i],drinks[i] &lt;= 10^5</code></li>\\n<li><code>1 &lt;= x &lt;= 2*10^5</code></li>\\n</ul>\\n","title":"LCP 18. 早餐组合","relatedTags":["数组","双指针","二分查找","排序"],"difficult":"Easy","lang":["javascript"],"uniqueID":"LCP 18","slug":"LCP-18-zao-can-zu-he"}')}}]);