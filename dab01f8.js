(window.webpackJsonp=window.webpackJsonp||[]).push([[970],{1768:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findUnsortedSubarray = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> last=nums[<span class=\\"hljs-number\\">0</span>]\\n  <span class=\\"hljs-keyword\\">let</span> start=<span class=\\"hljs-literal\\">null</span>,end=<span class=\\"hljs-literal\\">null</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;nums.length;i++){\\n    <span class=\\"hljs-keyword\\">if</span>(nums[i]&lt;last){\\n      <span class=\\"hljs-keyword\\">let</span> id=i\\n      <span class=\\"hljs-keyword\\">while</span>(nums[id<span class=\\"hljs-number\\">-1</span>]&gt;nums[i])id--\\n      <span class=\\"hljs-keyword\\">if</span>(start==<span class=\\"hljs-literal\\">null</span> || start&gt;id){\\n        start=id\\n        end=i\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        end=i\\n      }\\n    }<span class=\\"hljs-keyword\\">else</span>{\\n      last=nums[i]\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> start==<span class=\\"hljs-literal\\">null</span>?<span class=\\"hljs-number\\">0</span>:end-start+<span class=\\"hljs-number\\">1</span>\\n};\\n</code></pre>\\n"],"querySlug":"shortest-unsorted-continuous-subarray","created_at":"2019-03-14","timeArr":[2019,2,14,11,25,5,0],"hasThinking":false,"content":"<p>给你一个整数数组 <code>nums</code> ，你需要找出一个 <strong>连续子数组</strong> ，如果对这个子数组进行升序排序，那么整个数组都会变为升序排序。</p>\\n\\n<p>请你找出符合题意的 <strong>最短</strong> 子数组，并输出它的长度。</p>\\n\\n<p> </p>\\n\\n<div class=\\"original__bRMd\\">\\n<div>\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [2,6,4,8,10,9,15]\\n<strong>输出：</strong>5\\n<strong>解释：</strong>你只需要对 [6, 4, 8, 10, 9] 进行升序排序，那么整个表都会变为升序排序。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1,2,3,4]\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>nums = [1]\\n<strong>输出：</strong>0\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 10<sup>4</sup></code></li>\\n\\t<li><code>-10<sup>5</sup> <= nums[i] <= 10<sup>5</sup></code></li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>进阶：</strong>你可以设计一个时间复杂度为 <code>O(n)</code> 的解决方案吗？</p>\\n</div>\\n</div>\\n","title":"581. 最短无序连续子数组","relatedTags":["栈","贪心","数组","双指针","排序","单调栈"],"difficult":"Middle","lang":["javascript"],"uniqueID":"581","slug":"581-Shortest-Unsorted-Continuous-Subarray"}')}}]);