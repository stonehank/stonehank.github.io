(window.webpackJsonp=window.webpackJsonp||[]).push([[930],{1728:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">nums</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> findMaxLength = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">nums</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> aux=nums.map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">n</span>=&gt;</span>n===<span class=\\"hljs-number\\">0</span>?<span class=\\"hljs-number\\">-1</span>:<span class=\\"hljs-number\\">1</span>)\\n  <span class=\\"hljs-keyword\\">let</span> hash={<span class=\\"hljs-number\\">0</span>:<span class=\\"hljs-number\\">-1</span>},maxLen=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">let</span> sum=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">0</span>;i&lt;aux.length;i++){\\n    sum+=aux[i]\\n    <span class=\\"hljs-keyword\\">if</span>(hash[sum]==<span class=\\"hljs-literal\\">null</span>)hash[sum]=i\\n    <span class=\\"hljs-keyword\\">else</span>{\\n      maxLen=<span class=\\"hljs-built_in\\">Math</span>.max(maxLen,i-hash[sum])\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> maxLen\\n};\\n</code></pre>\\n"],"querySlug":"contiguous-array","created_at":"2019-04-06","timeArr":[2019,3,6,11,21,36,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>假设给定一个数组<code>[0,1,0,0,0,1]</code>，他们的前缀和是<code>[0,1,1,1,1,2]</code></p>\\n<p>这并不能看出什么有效的信息，但如果将<code>0</code>替换成<code>1</code>后，变为<code>[-1,1,-1,-1,-1,1]</code>，他们的前缀和是<code>[-1,0,-1,-2,-3,-2]</code></p>\\n<p>可以看出，当存在相同的前缀和时，说明这是一个<code>0</code>和<code>1</code>都相等的子数组。</p>\\n","content":"<p>给定一个二进制数组 <code>nums</code> , 找到含有相同数量的 <code>0</code> 和 <code>1</code> 的最长连续子数组，并返回该子数组的长度。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [0,1]\\n<strong>输出:</strong> 2\\n<strong>说明:</strong> [0, 1] 是具有相同数量 0 和 1 的最长连续子数组。</pre>\\n\\n<p><strong>示例 2:</strong></p>\\n\\n<pre>\\n<strong>输入:</strong> nums = [0,1,0]\\n<strong>输出:</strong> 2\\n<strong>说明:</strong> [0, 1] (或 [1, 0]) 是具有相同数量0和1的最长连续子数组。</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 <= nums.length <= 10<sup>5</sup></code></li>\\n\\t<li><code>nums[i]</code> 不是 <code>0</code> 就是 <code>1</code></li>\\n</ul>\\n","title":"525. 连续数组","relatedTags":["数组","哈希表","前缀和"],"difficult":"Middle","lang":["javascript"],"uniqueID":"525","slug":"525-Contiguous-Array"}')}}]);