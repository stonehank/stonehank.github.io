(window.webpackJsonp=window.webpackJsonp||[]).push([[1327],{2125:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number[]}</span> <span class=\\"hljs-variable\\">rods</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{number}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> tallestBillboard = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">rods</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> N=rods.length\\n  <span class=\\"hljs-keyword\\">let</span> sum=rods.reduce(<span class=\\"hljs-function\\">(<span class=\\"hljs-params\\">a,c</span>)=&gt;</span>a+c,<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-keyword\\">let</span> dp=<span class=\\"hljs-built_in\\">Array</span>(N+<span class=\\"hljs-number\\">1</span>).fill().map(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span>=&gt;</span><span class=\\"hljs-built_in\\">Array</span>(sum).fill(-<span class=\\"hljs-literal\\">Infinity</span>))\\n  dp[<span class=\\"hljs-number\\">0</span>][<span class=\\"hljs-number\\">0</span>]=<span class=\\"hljs-number\\">0</span>\\n  <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=<span class=\\"hljs-number\\">1</span>;i&lt;N+<span class=\\"hljs-number\\">1</span>;i++){\\n    <span class=\\"hljs-keyword\\">let</span> cur=rods[i<span class=\\"hljs-number\\">-1</span>]\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> j=<span class=\\"hljs-number\\">0</span>;j&lt;sum/<span class=\\"hljs-number\\">2</span>+<span class=\\"hljs-number\\">1</span>;j++){\\n      <span class=\\"hljs-keyword\\">if</span>(dp[i<span class=\\"hljs-number\\">-1</span>][j]===-<span class=\\"hljs-literal\\">Infinity</span>)<span class=\\"hljs-keyword\\">continue</span>\\n      dp[i][j]=<span class=\\"hljs-built_in\\">Math</span>.max(dp[i][j],dp[i<span class=\\"hljs-number\\">-1</span>][j])\\n      dp[i][<span class=\\"hljs-built_in\\">Math</span>.abs(j-cur)]=<span class=\\"hljs-built_in\\">Math</span>.max(dp[i][<span class=\\"hljs-built_in\\">Math</span>.abs(j-cur)],dp[i<span class=\\"hljs-number\\">-1</span>][j]+<span class=\\"hljs-built_in\\">Math</span>.min(cur,j))\\n      dp[i][j+cur]=<span class=\\"hljs-built_in\\">Math</span>.max(dp[i<span class=\\"hljs-number\\">-1</span>][j],dp[i][j+cur])\\n    }\\n  }\\n  <span class=\\"hljs-keyword\\">return</span> dp[N][<span class=\\"hljs-number\\">0</span>]\\n};\\n</code></pre>\\n"],"querySlug":"tallest-billboard","created_at":"2019-03-10","timeArr":[2019,2,10,15,49,37,0],"hasThinking":false,"content":"<p>你正在安装一个广告牌，并希望它高度最大。这块广告牌将有两个钢制支架，两边各一个。每个钢支架的高度必须相等。</p>\\n\\n<p>你有一堆可以焊接在一起的钢筋 <code>rods</code>。举个例子，如果钢筋的长度为 1、2 和 3，则可以将它们焊接在一起形成长度为 6 的支架。</p>\\n\\n<p>返回广告牌的最大可能安装高度。如果没法安装广告牌，请返回 0。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,2,3,6]\\n<strong>输出：</strong>6\\n<strong>解释：</strong>我们有两个不相交的子集 {1,2,3} 和 {6}，它们具有相同的和 sum = 6。\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,2,3,4,5,6]\\n<strong>输出：</strong>10\\n<strong>解释：</strong>我们有两个不相交的子集 {2,3,5} 和 {4,6}，它们具有相同的和 sum = 10。</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre><strong>输入：</strong>[1,2]\\n<strong>输出：</strong>0\\n<strong>解释：</strong>没法安装广告牌，所以返回 0。</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ol>\\n\\t<li><code>0 &lt;= rods.length &lt;= 20</code></li>\\n\\t<li><code>1 &lt;= rods[i] &lt;= 1000</code></li>\\n\\t<li><code>钢筋的长度总和最多为 5000</code></li>\\n</ol>\\n","title":"956. 最高的广告牌","relatedTags":["数组","动态规划"],"difficult":"Hard","lang":["javascript"],"uniqueID":"956","slug":"956-Tallest-Billboard"}')}}]);