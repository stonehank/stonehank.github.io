(window.webpackJsonp=window.webpackJsonp||[]).push([[617],{1415:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{string}</span> <span class=\\"hljs-variable\\">number</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> reformatNumber = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">number</span>) </span>{\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">resolve</span>(<span class=\\"hljs-params\\">str</span>)</span>{\\n        <span class=\\"hljs-keyword\\">if</span>(str.length===<span class=\\"hljs-number\\">4</span>){\\n            <span class=\\"hljs-keyword\\">return</span> str.slice(<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">2</span>)+<span class=\\"hljs-string\\">\'-\'</span>+str.slice(<span class=\\"hljs-number\\">2</span>)\\n        }<span class=\\"hljs-keyword\\">else</span>{\\n            <span class=\\"hljs-keyword\\">return</span> str\\n        }\\n    }\\n    <span class=\\"hljs-keyword\\">let</span> res=<span class=\\"hljs-string\\">\'\'</span>\\n    <span class=\\"hljs-keyword\\">let</span> str=number.replace(<span class=\\"hljs-regexp\\">/-/g</span>,<span class=\\"hljs-string\\">\'\'</span>).replace(<span class=\\"hljs-regexp\\">/\\\\s/g</span>,<span class=\\"hljs-string\\">\'\'</span>)\\n    <span class=\\"hljs-keyword\\">let</span> len=str.length\\n    <span class=\\"hljs-keyword\\">let</span> idx=<span class=\\"hljs-number\\">0</span>\\n    <span class=\\"hljs-keyword\\">while</span>(len&gt;<span class=\\"hljs-number\\">4</span>){\\n        res+=str.slice(idx,idx+<span class=\\"hljs-number\\">3</span>)+<span class=\\"hljs-string\\">\'-\'</span>\\n        len-=<span class=\\"hljs-number\\">3</span>\\n        idx+=<span class=\\"hljs-number\\">3</span>\\n    }\\n    <span class=\\"hljs-keyword\\">return</span> res+resolve(str.slice(idx))\\n};\\n</code></pre>\\n"],"querySlug":"reformat-phone-number","created_at":"2020-12-25","timeArr":[2020,11,25,17,23,19,0],"hasThinking":false,"content":"<p>给你一个字符串形式的电话号码 <code>number</code> 。<code>number</code> 由数字、空格 <code>\' \'</code>、和破折号 <code>\'-\'</code> 组成。</p>\\n\\n<p>请你按下述方式重新格式化电话号码。</p>\\n\\n<ul>\\n\\t<li>首先，<strong>删除</strong> 所有的空格和破折号。</li>\\n\\t<li>其次，将数组从左到右 <strong>每 3 个一组</strong> 分块，<strong>直到 </strong>剩下 4 个或更少数字。剩下的数字将按下述规定再分块：\\n\\t<ul>\\n\\t\\t<li>2 个数字：单个含 2 个数字的块。</li>\\n\\t\\t<li>3 个数字：单个含 3 个数字的块。</li>\\n\\t\\t<li>4 个数字：两个分别含 2 个数字的块。</li>\\n\\t</ul>\\n\\t</li>\\n</ul>\\n\\n<p>最后用破折号将这些块连接起来。注意，重新格式化过程中 <strong>不应该</strong> 生成仅含 1 个数字的块，并且 <strong>最多</strong> 生成两个含 2 个数字的块。</p>\\n\\n<p>返回格式化后的电话号码。</p>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>number = \\"1-23-45 6\\"\\n<strong>输出：</strong>\\"123-456\\"\\n<strong>解释：</strong>数字是 \\"123456\\"\\n步骤 1：共有超过 4 个数字，所以先取 3 个数字分为一组。第 1 个块是 \\"123\\" 。\\n步骤 2：剩下 3 个数字，将它们放入单个含 3 个数字的块。第 2 个块是 \\"456\\" 。\\n连接这些块后得到 \\"123-456\\" 。</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>number = \\"123 4-567\\"\\n<strong>输出：</strong>\\"123-45-67\\"\\n<strong>解释：</strong>数字是 \\"1234567\\".\\n步骤 1：共有超过 4 个数字，所以先取 3 个数字分为一组。第 1 个块是 \\"123\\" 。\\n步骤 2：剩下 4 个数字，所以将它们分成两个含 2 个数字的块。这 2 块分别是 \\"45\\" 和 \\"67\\" 。\\n连接这些块后得到 \\"123-45-67\\" 。\\n</pre>\\n\\n<p><strong>示例 3：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>number = \\"123 4-5678\\"\\n<strong>输出：</strong>\\"123-456-78\\"\\n<strong>解释：</strong>数字是 \\"12345678\\" 。\\n步骤 1：第 1 个块 \\"123\\" 。\\n步骤 2：第 2 个块 \\"456\\" 。\\n步骤 3：剩下 2 个数字，将它们放入单个含 2 个数字的块。第 3 个块是 \\"78\\" 。\\n连接这些块后得到 \\"123-456-78\\" 。</pre>\\n\\n<p><strong>示例 4：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>number = \\"12\\"\\n<strong>输出：</strong>\\"12\\"\\n</pre>\\n\\n<p><strong>示例 5：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>number = \\"--17-5 229 35-39475 \\"\\n<strong>输出：</strong>\\"175-229-353-94-75\\"\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>2 <= number.length <= 100</code></li>\\n\\t<li><code>number</code> 由数字和字符 <code>\'-\'</code> 及 <code>\' \'</code> 组成。</li>\\n\\t<li><code>number</code> 中至少含 <strong>2</strong> 个数字。</li>\\n</ul>\\n","title":"1694. 重新格式化电话号码","relatedTags":["字符串"],"difficult":"Easy","lang":["javascript"],"uniqueID":"1694","slug":"1694-Reformat-Phone-Number"}')}}]);