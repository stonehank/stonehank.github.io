(window.webpackJsonp=window.webpackJsonp||[]).push([[815],{1613:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-comment\\">/**\\n * <span class=\\"hljs-doctag\\">@param <span class=\\"hljs-type\\">{number}</span> <span class=\\"hljs-variable\\">num</span></span>\\n * <span class=\\"hljs-doctag\\">@return <span class=\\"hljs-type\\">{string[]}</span></span>\\n */</span>\\n<span class=\\"hljs-keyword\\">var</span> readBinaryWatch = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">num</span>) </span>{\\n  <span class=\\"hljs-keyword\\">let</span> aux=<span class=\\"hljs-built_in\\">Array</span>(<span class=\\"hljs-number\\">10</span>).fill(<span class=\\"hljs-literal\\">false</span>)\\n  <span class=\\"hljs-keyword\\">let</span> res=[]\\n  <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span> <span class=\\"hljs-title\\">backtrack</span>(<span class=\\"hljs-params\\">start,rest,hour,minute</span>)</span>{\\n    <span class=\\"hljs-keyword\\">if</span>(hour&gt;=<span class=\\"hljs-number\\">12</span> || minute&gt;=<span class=\\"hljs-number\\">60</span>)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">if</span>(rest===<span class=\\"hljs-number\\">0</span>){\\n      <span class=\\"hljs-keyword\\">return</span> res.push(hour+<span class=\\"hljs-string\\">\':\'</span>+(minute&lt;<span class=\\"hljs-number\\">10</span>?<span class=\\"hljs-string\\">\'0\'</span>:<span class=\\"hljs-string\\">\'\'</span>)+minute)\\n    }\\n    <span class=\\"hljs-keyword\\">if</span>(start===aux.length)<span class=\\"hljs-keyword\\">return</span>\\n    <span class=\\"hljs-keyword\\">for</span>(<span class=\\"hljs-keyword\\">let</span> i=start;i&lt;aux.length;i++){\\n      <span class=\\"hljs-keyword\\">if</span>(aux[i])<span class=\\"hljs-keyword\\">continue</span>\\n      aux[i]=<span class=\\"hljs-literal\\">true</span>\\n      <span class=\\"hljs-keyword\\">if</span>(i&lt;<span class=\\"hljs-number\\">4</span>){\\n        backtrack(i+<span class=\\"hljs-number\\">1</span>,rest<span class=\\"hljs-number\\">-1</span>,hour+<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">2</span>,i),minute)\\n      }<span class=\\"hljs-keyword\\">else</span>{\\n        backtrack(i+<span class=\\"hljs-number\\">1</span>,rest<span class=\\"hljs-number\\">-1</span>,hour,minute+<span class=\\"hljs-built_in\\">Math</span>.pow(<span class=\\"hljs-number\\">2</span>,i<span class=\\"hljs-number\\">-4</span>))\\n      }\\n      aux[i]=<span class=\\"hljs-literal\\">false</span>\\n    }\\n  }\\n  backtrack(<span class=\\"hljs-number\\">0</span>,num,<span class=\\"hljs-number\\">0</span>,<span class=\\"hljs-number\\">0</span>)\\n  <span class=\\"hljs-keyword\\">return</span> res\\n};\\n</code></pre>\\n"],"querySlug":"binary-watch","created_at":"2019-04-18","timeArr":[2019,3,18,18,31,10,0],"hasThinking":true,"thinking":"<hr>\\n<p>思路：</p>\\n<p>将<code>hour</code>的数组和<code>minute</code>的数组合在一起，回溯的时候比较方便，回溯的会后维护2个变量<code>hour</code>和<code>minute</code>，分别记录当前的小时和分钟总和。</p>\\n<p>由于<code>hour</code>有4个数，<code>minute</code>有6个数，因此当<code>i&lt;4</code>，将当前数字添加到<code>hour</code>上，<code>i&gt;=4</code>将数字添加到<code>minute</code>上，\\n根据题目要求，如果<code>hour</code>超过<code>11</code>或者<code>minute</code>超过<code>59</code>，立刻返回。</p>\\n<p>最后检查如果<code>minute&lt;10</code>，需要添加<code>前导0</code>。</p>\\n","content":"<p>二进制手表顶部有 4 个 LED 代表<strong> 小时（0-11）</strong>，底部的 6 个 LED 代表<strong> 分钟（0-59）</strong>。每个 LED 代表一个 0 或 1，最低位在右侧。</p>\\n\\n<ul>\\n\\t<li>例如，下面的二进制手表读取 <code>\\"3:25\\"</code> 。</li>\\n</ul>\\n\\n<p><img src=\\"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/03/29/binary_clock_samui_moon.jpg\\" style=\\"height: 300px; width\\" /></p>\\n\\n<p><small><em>（图源：<a href=\\"https://commons.m.wikimedia.org/wiki/File:Binary_clock_samui_moon.jpg\\">WikiMedia - Binary clock samui moon.jpg</a> ，许可协议：<a href=\\"https://creativecommons.org/licenses/by-sa/3.0/deed.en\\">Attribution-ShareAlike 3.0 Unported (CC BY-SA 3.0)</a> ）</em></small></p>\\n\\n<p>给你一个整数 <code>turnedOn</code> ，表示当前亮着的 LED 的数量，返回二进制手表可以表示的所有可能时间。你可以 <strong>按任意顺序</strong> 返回答案。</p>\\n\\n<p>小时不会以零开头：</p>\\n\\n<ul>\\n\\t<li>例如，<code>\\"01:00\\"</code> 是无效的时间，正确的写法应该是 <code>\\"1:00\\"</code> 。</li>\\n</ul>\\n\\n<p>分钟必须由两位数组成，可能会以零开头：</p>\\n\\n<ul>\\n\\t<li>例如，<code>\\"10:2\\"</code> 是无效的时间，正确的写法应该是 <code>\\"10:02\\"</code> 。</li>\\n</ul>\\n\\n<p> </p>\\n\\n<p><strong>示例 1：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>turnedOn = 1\\n<strong>输出：</strong>[\\"0:01\\",\\"0:02\\",\\"0:04\\",\\"0:08\\",\\"0:16\\",\\"0:32\\",\\"1:00\\",\\"2:00\\",\\"4:00\\",\\"8:00\\"]\\n</pre>\\n\\n<p><strong>示例 2：</strong></p>\\n\\n<pre>\\n<strong>输入：</strong>turnedOn = 9\\n<strong>输出：</strong>[]\\n</pre>\\n\\n<p> </p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>0 <= turnedOn <= 10</code></li>\\n</ul>\\n","title":"401. 二进制手表","relatedTags":["位运算","回溯"],"difficult":"Easy","lang":["javascript"],"uniqueID":"401","slug":"401-Binary-Watch"}')}}]);