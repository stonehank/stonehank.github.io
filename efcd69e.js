(window.webpackJsonp=window.webpackJsonp||[]).push([[1078],{1876:function(n){n.exports=JSON.parse('{"code":["<pre class=\\"hljs\\"><code><span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Solution</span><span class=\\"hljs-params\\">(object)</span>:</span>\\n    <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">def</span> <span class=\\"hljs-title\\">findLength</span><span class=\\"hljs-params\\">(self, A, B)</span>:</span>\\n        <span class=\\"hljs-string\\">\\"\\"\\"\\n        :type A: List[int]\\n        :type B: List[int]\\n        :rtype: int\\n        \\"\\"\\"</span>\\n        m=len(A)\\n        n=len(B)\\n        maxN=<span class=\\"hljs-number\\">0</span>\\n        dp=[[<span class=\\"hljs-number\\">0</span>]*(m+<span class=\\"hljs-number\\">1</span>) <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(n+<span class=\\"hljs-number\\">1</span>)]\\n        <span class=\\"hljs-keyword\\">for</span> i <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">1</span>,n+<span class=\\"hljs-number\\">1</span>):\\n          <span class=\\"hljs-keyword\\">for</span> j <span class=\\"hljs-keyword\\">in</span> range(<span class=\\"hljs-number\\">1</span>,m+<span class=\\"hljs-number\\">1</span>):\\n            <span class=\\"hljs-keyword\\">if</span> A[j<span class=\\"hljs-number\\">-1</span>]==B[i<span class=\\"hljs-number\\">-1</span>]:\\n              dp[i][j]=dp[i<span class=\\"hljs-number\\">-1</span>][j<span class=\\"hljs-number\\">-1</span>]+<span class=\\"hljs-number\\">1</span>\\n              maxN=max(maxN,dp[i][j])\\n\\n        <span class=\\"hljs-comment\\"># print dp</span>\\n        <span class=\\"hljs-keyword\\">return</span> maxN\\n</code></pre>\\n"],"querySlug":"maximum-length-of-repeated-subarray","created_at":"2019-02-26","timeArr":[2019,1,26,14,5,33,0],"hasThinking":false,"content":"<p>给两个整数数组&nbsp;<code>A</code>&nbsp;和&nbsp;<code>B</code>&nbsp;，返回两个数组中公共的、长度最长的子数组的长度。</p>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>示例：</strong></p>\\n\\n<pre><strong>输入：</strong>\\nA: [1,2,3,2,1]\\nB: [3,2,1,4,7]\\n<strong>输出：</strong>3\\n<strong>解释：</strong>\\n长度最长的公共子数组是 [3, 2, 1] 。\\n</pre>\\n\\n<p>&nbsp;</p>\\n\\n<p><strong>提示：</strong></p>\\n\\n<ul>\\n\\t<li><code>1 &lt;= len(A), len(B) &lt;= 1000</code></li>\\n\\t<li><code>0 &lt;= A[i], B[i] &lt; 100</code></li>\\n</ul>\\n","title":"718. 最长重复子数组","relatedTags":["数组","二分查找","动态规划","滑动窗口","哈希函数","滚动哈希"],"difficult":"Middle","lang":["python"],"uniqueID":"718","slug":"718-Maximum-Length-of-Repeated-Subarray"}')}}]);